!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon3
ALT	kern/console.c	222;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	289;"	d	file:
CAPSLOCK	kern/console.c	224;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	16;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	388;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon2
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon2
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon2
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	221;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DPL_USER	inc/mmu.h	309;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	228;"	d	file:
E1000_RAH0	kern/e1000.h	68;"	d
E1000_RAL0	kern/e1000.h	67;"	d
E1000_RCTL	kern/e1000.h	47;"	d
E1000_RCTL_BAM	kern/e1000.h	62;"	d
E1000_RCTL_BSEX	kern/e1000.h	64;"	d
E1000_RCTL_EN	kern/e1000.h	48;"	d
E1000_RCTL_LBM_MAC	kern/e1000.h	51;"	d
E1000_RCTL_LBM_NO	kern/e1000.h	50;"	d
E1000_RCTL_LBM_SLP	kern/e1000.h	52;"	d
E1000_RCTL_LBM_TCVR	kern/e1000.h	53;"	d
E1000_RCTL_LPE	kern/e1000.h	49;"	d
E1000_RCTL_MO_0	kern/e1000.h	58;"	d
E1000_RCTL_MO_1	kern/e1000.h	59;"	d
E1000_RCTL_MO_2	kern/e1000.h	60;"	d
E1000_RCTL_MO_3	kern/e1000.h	61;"	d
E1000_RCTL_MO_SHIFT	kern/e1000.h	57;"	d
E1000_RCTL_RDMTS_EIGTH	kern/e1000.h	56;"	d
E1000_RCTL_RDMTS_HALF	kern/e1000.h	54;"	d
E1000_RCTL_RDMTS_QUAT	kern/e1000.h	55;"	d
E1000_RCTL_SECRC	kern/e1000.h	65;"	d
E1000_RCTL_SZ_2048	kern/e1000.h	63;"	d
E1000_RDBAH	kern/e1000.h	71;"	d
E1000_RDBAL	kern/e1000.h	70;"	d
E1000_RDH	kern/e1000.h	73;"	d
E1000_RDLEN	kern/e1000.h	72;"	d
E1000_RDT	kern/e1000.h	74;"	d
E1000_REG	kern/e1000.h	94;"	d
E1000_RXD_STA_DD	kern/e1000.h	88;"	d
E1000_RXD_STA_EOP	kern/e1000.h	89;"	d
E1000_STATUS	kern/e1000.h	9;"	d
E1000_TCTL	kern/e1000.h	37;"	d
E1000_TCTL_COLD	kern/e1000.h	40;"	d
E1000_TCTL_EN	kern/e1000.h	38;"	d
E1000_TCTL_PSP	kern/e1000.h	39;"	d
E1000_TDBAH	kern/e1000.h	12;"	d
E1000_TDBAL	kern/e1000.h	11;"	d
E1000_TDH	kern/e1000.h	14;"	d
E1000_TDLEN	kern/e1000.h	13;"	d
E1000_TDT	kern/e1000.h	15;"	d
E1000_TIPG	kern/e1000.h	43;"	d
E1000_TXD_CMD_EOP	kern/e1000.h	30;"	d
E1000_TXD_CMD_RS	kern/e1000.h	31;"	d
E1000_TXD_STA_DD	kern/e1000.h	32;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon9
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon9
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon9
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon9
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon9
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	17;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	39;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	20;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHERNET_PACKET_SIZE	kern/e1000.h	96;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon7
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon7
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon7
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon7
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon7
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon7
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon7
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon7
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon7
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon7
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon7
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon7
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon7
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon7
E_PKT_TOO_LONG	inc/error.h	/^	E_PKT_TOO_LONG	,	\/\/ Packet too long $/;"	e	enum:__anon7
E_RX_EMPTY	inc/error.h	/^	E_RX_EMPTY	, 	\/\/ RX queue is empty	$/;"	e	enum:__anon7
E_TX_FULL	inc/error.h	/^	E_TX_FULL	,	\/\/ TX queue is full$/;"	e	enum:__anon7
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon7
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon6
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon6
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon6
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon6
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon6
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon6
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon6
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon6
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTPError	grade-lab6	/^    from urllib.error import HTTPError$/;"	i
HTTPError	grade-lab6	/^    from urllib2 import urlopen, HTTPError$/;"	i
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	22;"	d	file:
INPUT_WAIT_COUNT	net/input.c	/^static const int INPUT_WAIT_COUNT = 10;$/;"	v	file:
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon16	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	net/lwip/jos/arch/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	net/lwip/jos/arch/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	net/lwip/jos/arch/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	net/lwip/jos/arch/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	net/lwip/jos/arch/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	net/lwip/jos/arch/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	net/lwip/jos/arch/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	net/lwip/jos/arch/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	net/lwip/jos/arch/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	28;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon17
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon17
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon17
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon17
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon17
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon17
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon17
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_QUEUE_H	net/lwip/jos/arch/queue.h	36;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon18
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon17
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	homework/hw2-shell/sh.c	13;"	d	file:
MAXARGS	kern/monitor.c	260;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon7
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon12	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon15
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon27
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon28
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon28
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	43;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MON_CMD_DECL	kern/monitor.h	14;"	d
MON_CMD_DECL	kern/monitor.h	29;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon16	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NBUCKET	ph.c	9;"	d	file:
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	35;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	311;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NKEYS	ph.c	10;"	d	file:
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NO	kern/console.c	218;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	46;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NRXDESC	kern/e1000.c	14;"	d	file:
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon10
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon10
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon10
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon10
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon10
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon10
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon10
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon10
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon10
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon10
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon10
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon10
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon11
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon16	file:
NTXDESC	kern/e1000.c	8;"	d	file:
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	225;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	149;"	d
O_CREAT	inc/lib.h	151;"	d
O_EXCL	inc/lib.h	153;"	d
O_MKDIR	inc/lib.h	154;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	146;"	d
O_RDWR	inc/lib.h	148;"	d
O_TRUNC	inc/lib.h	152;"	d
O_WRONLY	inc/lib.h	147;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Nov 17 18:30:59 EST 2014$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PATH	homework/hw2-shell/sh.c	/^char * PATH[] = {$/;"	v
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon21
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon21
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon22
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon22
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon21
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon22
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon22
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon21
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCINT	kern/lapic.c	36;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_82540EM	kern/e1000.h	7;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_82540EM	kern/e1000.h	6;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon19	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon19	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon19	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon19	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon19	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon19	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon19	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	137;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon18
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon18
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon18
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon18
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon18
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon18
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon18
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon19	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	85;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
RX_PKT_BUFF_SIZE	kern/e1000.c	17;"	d	file:
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	226;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	220;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL	ph.c	8;"	d	file:
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	194;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon11
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon11
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon11
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon11
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon11
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon11
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon11
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon11
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon11
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon11
SYS_nic_recv	inc/syscall.h	/^    SYS_nic_recv,$/;"	e	enum:__anon11
SYS_nic_try_send	inc/syscall.h	/^	SYS_nic_try_send,$/;"	e	enum:__anon11
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon11
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon11
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon11
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon11
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon11
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	41;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	33;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TX_PKT_BUFF_SIZE	kern/e1000.c	11;"	d	file:
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	116;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	114;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	26;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon16	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	259;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	193;"	d	file:
X1	kern/lapic.c	34;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_update_ipc_fields	obj/kern/kernel.asm	/^_update_ipc_fields:$/;"	l
_user_mem_check	kern/pmap.c	/^_user_mem_check(struct Env *env, const void* va, int perm)$/;"	f	file:
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon29	typeref:struct:api_msg_msg::__anon29::__anon32
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon37	typeref:struct:netifapi_msg_msg::__anon37::__anon38
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^	addr = ROUNDDOWN(addr, BLKSIZE);$/;"	d
addr	obj/fs/fs.asm	/^    addr = ROUNDDOWN(addr, BLKSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon29::__anon33
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon23	typeref:struct:tcpip_msg::__anon23::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon23::__anon26
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args	obj/kern/kernel.asm	/^		args = stack_top + 2;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	homework/hw2-shell/sh.c	/^  char *argv[MAXARGS];   \/\/ arguments to the command to be exec-ed$/;"	m	struct:execcmd	file:
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ascii_to_bytes	grade-lab6	/^def ascii_to_bytes(s):$/;"	f
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon29	typeref:struct:api_msg_msg::__anon29::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon29::__anon36
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
backtrace	kern/monitor.h	/^MON_CMD_DECL(backtrace);$/;"	v
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
barrier	barrier.c	/^barrier()$/;"	f	file:
barrier	barrier.c	/^struct barrier {$/;"	s	file:
barrier_cond	barrier.c	/^  pthread_cond_t barrier_cond;$/;"	m	struct:barrier	file:
barrier_init	barrier.c	/^barrier_init(void)$/;"	f	file:
barrier_mutex	barrier.c	/^  pthread_mutex_t barrier_mutex;$/;"	m	struct:barrier	file:
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = va_end;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon29	typeref:struct:api_msg_msg::__anon29::__anon31
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/ns.asm	/^    binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^    binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testinput.asm	/^    binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^    binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/net/testoutput.asm	/^    binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^    binaryname = "ns_output";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockno	obj/fs/fs.asm	/^	blockno = ((uint32_t)addr - DISKMAP) \/ BLKSIZE;$/;"	d
blockno	obj/fs/fs.asm	/^    blockno = *pdiskbno;$/;"	d
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
bstate	barrier.c	/^} bstate;$/;"	v	typeref:struct:barrier
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon15
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/testinput.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/testoutput.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echosrv.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echotest.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/httpd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testtime.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buff_addr	kern/e1000.h	/^    uint64_t buff_addr;   \/* data buffer address *\/$/;"	m	struct:e1000_rx_desc
buff_addr	kern/e1000.h	/^    uint64_t buff_addr;  \/* data buffer address *\/$/;"	m	struct:e1000_tx_desc
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon23	typeref:struct:tcpip_msg::__anon23::__anon25
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
changeperms	kern/monitor.h	/^MON_CMD_DECL(changeperms);$/;"	v
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	homework/hw2-shell/sh.c	/^  struct cmd *cmd;   \/\/ the command to be run (e.g., an execcmd)$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	homework/hw2-shell/sh.c	/^struct cmd {$/;"	s	file:
cmd	kern/e1000.h	/^    uint8_t  cmd;        \/* descriptor control *\/$/;"	m	struct:e1000_tx_desc
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon37	typeref:struct:netifapi_msg_msg::__anon37::__anon39
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon4	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/kern/kernel.asm	/^			count = 0;$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon42::__anon43	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
csm	kern/e1000.h	/^    uint16_t csm;         \/* packet checksum *\/$/;"	m	struct:e1000_rx_desc
cso	kern/e1000.h	/^    uint8_t  cso;        \/* checksum offset *\/$/;"	m	struct:e1000_tx_desc
css	kern/e1000.h	/^    uint8_t  css;        \/* checksum start *\/$/;"	m	struct:e1000_tx_desc
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon14
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon14	typeref:struct:cstate::__anon14::ip
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon23::__anon25
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon13
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon29::__anon33
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
debug	net/serv.c	34;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
difflib	grade-lab6	/^import os, re, threading, socket, time, shutil, struct, difflib$/;"	i
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon15
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
done	ph.c	/^volatile int done;$/;"	v
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dump_contents_p	kern/monitor.c	/^dump_contents_p(physaddr_t pa1, physaddr_t pa2) $/;"	f	file:
dump_contents_v	kern/monitor.c	/^dump_contents_v(void* va1, void* va2) $/;"	f	file:
dumpcontents	kern/monitor.h	/^MON_CMD_DECL(dumpcontents);$/;"	v
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000_memreg_vaddr	kern/e1000.h	/^volatile uint32_t *e1000_memreg_vaddr;   \/* weak symbol, initialized in pci.c *\/  $/;"	v
e1000_memreg_vaddr	obj/kern/kernel.asm	/^    e1000_memreg_vaddr = mmio_map_region(pcif->reg_base[0], pcif->reg_size[0]);$/;"	d
e1000_receive	kern/e1000.c	/^e1000_receive(void *buff, size_t size)$/;"	f
e1000_rx_desc	kern/e1000.h	/^struct e1000_rx_desc {$/;"	s
e1000_rx_init	kern/e1000.c	/^e1000_rx_init(void)$/;"	f
e1000_transmit	kern/e1000.c	/^e1000_transmit(const void *data, size_t len) $/;"	f
e1000_tx_desc	kern/e1000.h	/^struct e1000_tx_desc {$/;"	s
e1000_tx_init	kern/e1000.c	/^e1000_tx_init(void) $/;"	f
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf_hdr	obj/kern/kernel.asm	/^	elf_hdr = (struct Elf *) binary;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end_addr	obj/net/ns.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/net/testinput.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/net/testoutput.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/forktree.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/icode.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/init.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/pingpong.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/pingpongs.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/primes.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/primespipe.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/sendpage.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/sh.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/spawnhello.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/spin.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/stresssched.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testfdsharing.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testpipe.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testpiperace.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testpiperace2.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testpteshare.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testshell.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry	ph.c	/^struct entry {$/;"	s	file:
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/net/ns.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/net/testinput.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/net/testoutput.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/forktree.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/pingpong.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/pingpongs.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/primes.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/primespipe.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/sendpage.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/sh.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/spin.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/stresssched.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testfdsharing.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpipe.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpiperace.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpiperace2.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpteshare.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testshell.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env*) boot_alloc(n);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elf_hdr->e_phnum;$/;"	d
err	kern/e1000.h	/^    uint8_t  err;         \/* descriptor errors *\/$/;"	m	struct:e1000_rx_desc
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^    err:$/;"	l
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^    err:$/;"	l
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^    err:$/;"	l
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^    err:$/;"	l
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^    err:$/;"	l
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^    err:$/;"	l
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^    err:$/;"	l
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/net/ns.asm	/^    err1:$/;"	l
err1	obj/net/testinput.asm	/^    err1:$/;"	l
err1	obj/net/testoutput.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/echosrv.asm	/^    err1:$/;"	l
err1	obj/user/echotest.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/httpd.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/testtime.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/net/ns.asm	/^    err2:$/;"	l
err2	obj/net/testinput.asm	/^    err2:$/;"	l
err2	obj/net/testoutput.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/echosrv.asm	/^    err2:$/;"	l
err2	obj/user/echotest.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/httpd.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/testtime.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/net/ns.asm	/^    err3:$/;"	l
err3	obj/net/testinput.asm	/^    err3:$/;"	l
err3	obj/net/testoutput.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/echosrv.asm	/^    err3:$/;"	l
err3	obj/user/echotest.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/httpd.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/testtime.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon37::__anon39
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
execcmd	homework/hw2-shell/sh.c	/^execcmd(void)$/;"	f
execcmd	homework/hw2-shell/sh.c	/^struct execcmd {$/;"	s	file:
exit	kern/monitor.h	/^MON_CMD_DECL(exit);$/;"	v
exit	lib/exit.c	/^exit(void)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon23::__anon25
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 40 12 f0       	mov    $0xf0124000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6a 00 00 00       	call   f01000a8 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 6c 06 30 f0 00 	cmpl   $0x0,0xf030066c$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 6c 06 30 f0    	mov    %esi,0xf030066c$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 d8 70 00 00       	call   f010713c <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 80 82 10 f0 	movl   $0xf0108280,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 3c 43 00 00       	call   f01043be <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 fd 42 00 00       	call   f010438b <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 48 96 10 f0 	movl   $0xf0109648,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 24 43 00 00       	call   f01043be <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 75 0d 00 00       	call   f0100e1b <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <i386_init>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	53                   	push   %ebx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	b8 08 20 34 f0       	mov    $0xf0342008,%eax$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	2d ff 87 2b f0       	sub    $0xf02b87ff,%eax$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	00 $/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	c7 04 24 ff 87 2b f0 	movl   $0xf02b87ff,(%esp)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 16 6a 00 00       	call   f0106ae7 <memset>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 c9 05 00 00       	call   f010069f <cons_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	00 $/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	c7 04 24 ec 82 10 f0 	movl   $0xf01082ec,(%esp)$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	e8 d4 42 00 00       	call   f01043be <cprintf>$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	e8 0d 18 00 00       	call   f01018fc <mem_init>$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	e8 cd 3a 00 00       	call   f0103bc1 <env_init>$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 9f 43 00 00       	call   f0104498 <trap_init>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 2c 6d 00 00       	call   f0106e2a <mp_init>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	66 90                	xchg   %ax,%ax$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	e8 52 70 00 00       	call   f0107157 <lapic_init>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	e8 d1 41 00 00       	call   f01042db <pic_init>$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	e8 71 7e 00 00       	call   f0107f80 <time_init>$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	90                   	nop$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	e8 3a 7e 00 00       	call   f0107f4f <pci_init>$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	c7 04 24 c0 67 12 f0 	movl   $0xf01267c0,(%esp)$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	e8 9a 72 00 00       	call   f01073bb <spin_lock>$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	83 3d 74 06 30 f0 07 	cmpl   $0x7,0xf0300674$/;"	l
f0100128	obj/kern/kernel.asm	/^f0100128:	77 24                	ja     f010014e <i386_init+0xa6>$/;"	l
f010012a	obj/kern/kernel.asm	/^f010012a:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	00 $/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	f0 $/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	00 $/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	c7 04 24 07 83 10 f0 	movl   $0xf0108307,(%esp)$/;"	l
f0100149	obj/kern/kernel.asm	/^f0100149:	e8 f2 fe ff ff       	call   f0100040 <_panic>$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	b8 62 6d 10 f0       	mov    $0xf0106d62,%eax$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	2d e8 6c 10 f0       	sub    $0xf0106ce8,%eax$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	c7 44 24 04 e8 6c 10 	movl   $0xf0106ce8,0x4(%esp)$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	f0 $/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 c4 69 00 00       	call   f0106b34 <memmove>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	bb 20 10 30 f0       	mov    $0xf0301020,%ebx$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	eb 4d                	jmp    f01001c4 <i386_init+0x11c>$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	e8 c0 6f 00 00       	call   f010713c <cpunum>$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	05 20 10 30 f0       	add    $0xf0301020,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	74 39                	je     f01001c1 <i386_init+0x119>$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	89 d8                	mov    %ebx,%eax$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	2d 20 10 30 f0       	sub    $0xf0301020,%eax$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	8d 80 00 a0 30 f0    	lea    -0xfcf6000(%eax),%eax$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	a3 70 06 30 f0       	mov    %eax,0xf0300670$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	00 $/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	e8 ee 70 00 00       	call   f01072a7 <lapic_startap>$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	75 f8                	jne    f01001b9 <i386_init+0x111>$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	6b 05 c4 13 30 f0 74 	imul   $0x74,0xf03013c4,%eax$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	05 20 10 30 f0       	add    $0xf0301020,%eax$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	72 a3                	jb     f0100177 <i386_init+0xcf>$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	00 $/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	c7 04 24 88 01 1e f0 	movl   $0xf01e0188,(%esp)$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	e8 a1 3b 00 00       	call   f0103d89 <env_create>$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	00 $/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	c7 04 24 08 69 22 f0 	movl   $0xf0226908,(%esp)$/;"	l
f01001f7	obj/kern/kernel.asm	/^f01001f7:	e8 8d 3b 00 00       	call   f0103d89 <env_create>$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	e8 42 04 00 00       	call   f0100643 <kbd_intr>$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	e8 8c 55 00 00       	call   f0105792 <sched_yield>$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206 <mp_main>:$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	55                   	push   %ebp$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	89 e5                	mov    %esp,%ebp$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	77 20                	ja     f0100238 <mp_main+0x32>$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	f0 $/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	c7 44 24 04 7b 00 00 	movl   $0x7b,0x4(%esp)$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	00 $/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	c7 04 24 07 83 10 f0 	movl   $0xf0108307,(%esp)$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	e8 08 fe ff ff       	call   f0100040 <_panic>$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	e8 f7 6e 00 00       	call   f010713c <cpunum>$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	c7 04 24 13 83 10 f0 	movl   $0xf0108313,(%esp)$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	e8 69 41 00 00       	call   f01043be <cprintf>$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	e8 fd 6e 00 00       	call   f0107157 <lapic_init>$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	e8 38 39 00 00       	call   f0103b97 <env_init_percpu>$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	90                   	nop$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	e8 7b 41 00 00       	call   f01043e0 <trap_init_percpu>$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	e8 d2 6e 00 00       	call   f010713c <cpunum>$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010026d	obj/kern/kernel.asm	/^f010026d:	81 c2 20 10 30 f0    	add    $0xf0301020,%edx$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	c7 04 24 c0 67 12 f0 	movl   $0xf01267c0,(%esp)$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	e8 33 71 00 00       	call   f01073bb <spin_lock>$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	e8 05 55 00 00       	call   f0105792 <sched_yield>$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d <_warn>:$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	55                   	push   %ebp$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	53                   	push   %ebx$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	c7 04 24 29 83 10 f0 	movl   $0xf0108329,(%esp)$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	e8 0d 41 00 00       	call   f01043be <cprintf>$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	e8 cb 40 00 00       	call   f010438b <vcprintf>$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	c7 04 24 48 96 10 f0 	movl   $0xf0109648,(%esp)$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	e8 f2 40 00 00       	call   f01043be <cprintf>$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	5b                   	pop    %ebx$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	5d                   	pop    %ebp$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	c3                   	ret    $/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	66 90                	xchg   %ax,%ax$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	66 90                	xchg   %ax,%ax$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	66 90                	xchg   %ax,%ax$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	66 90                	xchg   %ax,%ax$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	66 90                	xchg   %ax,%ax$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	66 90                	xchg   %ax,%ax$/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	66 90                	xchg   %ax,%ax$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0 <serial_proc_data>:$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	55                   	push   %ebp$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	ec                   	in     (%dx),%al$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	a8 01                	test   $0x1,%al$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	74 08                	je     f01002f5 <serial_proc_data+0x15>$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	ec                   	in     (%dx),%al$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	eb 05                	jmp    f01002fa <serial_proc_data+0x1a>$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	5d                   	pop    %ebp$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	c3                   	ret    $/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc <cons_intr>:$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	55                   	push   %ebp$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	53                   	push   %ebx$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	89 c3                	mov    %eax,%ebx$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	eb 2a                	jmp    f0100331 <cons_intr+0x35>$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	85 d2                	test   %edx,%edx$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	74 26                	je     f0100331 <cons_intr+0x35>$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	a1 24 92 2b f0       	mov    0xf02b9224,%eax$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	89 0d 24 92 2b f0    	mov    %ecx,0xf02b9224$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	88 90 20 90 2b f0    	mov    %dl,-0xfd46fe0(%eax)$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	75 0a                	jne    f0100331 <cons_intr+0x35>$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	c7 05 24 92 2b f0 00 	movl   $0x0,0xf02b9224$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	00 00 00 $/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	ff d3                	call   *%ebx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	89 c2                	mov    %eax,%edx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	75 cd                	jne    f0100307 <cons_intr+0xb>$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	5b                   	pop    %ebx$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	5d                   	pop    %ebp$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	c3                   	ret    $/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340 <kbd_proc_data>:$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	ec                   	in     (%dx),%al$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	a8 01                	test   $0x1,%al$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	0f 84 ef 00 00 00    	je     f010043d <kbd_proc_data+0xfd>$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	b2 60                	mov    $0x60,%dl$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	ec                   	in     (%dx),%al$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	89 c2                	mov    %eax,%edx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	75 0d                	jne    f0100364 <kbd_proc_data+0x24>$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	83 0d 00 90 2b f0 40 	orl    $0x40,0xf02b9000$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	c3                   	ret    $/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	55                   	push   %ebp$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	89 e5                	mov    %esp,%ebp$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	53                   	push   %ebx$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	84 c0                	test   %al,%al$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	79 37                	jns    f01003a6 <kbd_proc_data+0x66>$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	8b 0d 00 90 2b f0    	mov    0xf02b9000,%ecx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	85 db                	test   %ebx,%ebx$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	0f b6 82 a0 84 10 f0 	movzbl -0xfef7b60(%edx),%eax$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	83 c8 40             	or     $0x40,%eax$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	f7 d0                	not    %eax$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	21 c1                	and    %eax,%ecx$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	89 0d 00 90 2b f0    	mov    %ecx,0xf02b9000$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	e9 9d 00 00 00       	jmp    f0100443 <kbd_proc_data+0x103>$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	8b 0d 00 90 2b f0    	mov    0xf02b9000,%ecx$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	74 0e                	je     f01003bf <kbd_proc_data+0x7f>$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	89 c2                	mov    %eax,%edx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	89 0d 00 90 2b f0    	mov    %ecx,0xf02b9000$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	0f b6 82 a0 84 10 f0 	movzbl -0xfef7b60(%edx),%eax$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	0b 05 00 90 2b f0    	or     0xf02b9000,%eax$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	0f b6 8a a0 83 10 f0 	movzbl -0xfef7c60(%edx),%ecx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	31 c8                	xor    %ecx,%eax$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	a3 00 90 2b f0       	mov    %eax,0xf02b9000$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	89 c1                	mov    %eax,%ecx$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	8b 0c 8d 80 83 10 f0 	mov    -0xfef7c80(,%ecx,4),%ecx$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	a8 08                	test   $0x8,%al$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	74 1b                	je     f010040f <kbd_proc_data+0xcf>$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	89 da                	mov    %ebx,%edx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	77 05                	ja     f0100403 <kbd_proc_data+0xc3>$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	eb 0c                	jmp    f010040f <kbd_proc_data+0xcf>$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	f7 d0                	not    %eax$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	89 c2                	mov    %eax,%edx$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	89 d8                	mov    %ebx,%eax$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	75 29                	jne    f0100443 <kbd_proc_data+0x103>$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	75 21                	jne    f0100443 <kbd_proc_data+0x103>$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	c7 04 24 43 83 10 f0 	movl   $0xf0108343,(%esp)$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	e8 90 3f 00 00       	call   f01043be <cprintf>$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	ee                   	out    %al,(%dx)$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	89 d8                	mov    %ebx,%eax$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	eb 06                	jmp    f0100443 <kbd_proc_data+0x103>$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	c3                   	ret    $/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	5b                   	pop    %ebx$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	5d                   	pop    %ebp$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	c3                   	ret    $/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449 <cons_putc>:$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	55                   	push   %ebp$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	89 e5                	mov    %esp,%ebp$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	57                   	push   %edi$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	56                   	push   %esi$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	53                   	push   %ebx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	89 c7                	mov    %eax,%edi$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	eb 06                	jmp    f010046b <cons_putc+0x22>$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	89 ca                	mov    %ecx,%edx$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	ec                   	in     (%dx),%al$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	ec                   	in     (%dx),%al$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	ec                   	in     (%dx),%al$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	ec                   	in     (%dx),%al$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	89 f2                	mov    %esi,%edx$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	ec                   	in     (%dx),%al$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	a8 20                	test   $0x20,%al$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	75 05                	jne    f0100477 <cons_putc+0x2e>$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	75 ee                	jne    f0100465 <cons_putc+0x1c>$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	89 f8                	mov    %edi,%eax$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	ee                   	out    %al,(%dx)$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	eb 06                	jmp    f010049c <cons_putc+0x53>$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	89 ca                	mov    %ecx,%edx$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	ec                   	in     (%dx),%al$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	ec                   	in     (%dx),%al$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	ec                   	in     (%dx),%al$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	ec                   	in     (%dx),%al$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	89 f2                	mov    %esi,%edx$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	ec                   	in     (%dx),%al$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	84 c0                	test   %al,%al$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	78 05                	js     f01004a8 <cons_putc+0x5f>$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	75 ee                	jne    f0100496 <cons_putc+0x4d>$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	ee                   	out    %al,(%dx)$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	ee                   	out    %al,(%dx)$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	ee                   	out    %al,(%dx)$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	89 fa                	mov    %edi,%edx$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	89 f8                	mov    %edi,%eax$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	80 cc 07             	or     $0x7,%ah$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	85 d2                	test   %edx,%edx$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	89 f8                	mov    %edi,%eax$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	74 76                	je     f0100552 <cons_putc+0x109>$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	7f 0a                	jg     f01004eb <cons_putc+0xa2>$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	74 16                	je     f01004fc <cons_putc+0xb3>$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	e9 9b 00 00 00       	jmp    f0100586 <cons_putc+0x13d>$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	66 90                	xchg   %ax,%ax$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	74 3a                	je     f010052c <cons_putc+0xe3>$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	74 3d                	je     f0100534 <cons_putc+0xeb>$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	e9 8a 00 00 00       	jmp    f0100586 <cons_putc+0x13d>$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	0f b7 05 28 92 2b f0 	movzwl 0xf02b9228,%eax$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	66 85 c0             	test   %ax,%ax$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	0f 84 e5 00 00 00    	je     f01005f1 <cons_putc+0x1a8>$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	66 a3 28 92 2b f0    	mov    %ax,0xf02b9228$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	8b 15 2c 92 2b f0    	mov    0xf02b922c,%edx$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	eb 78                	jmp    f01005a4 <cons_putc+0x15b>$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	66 83 05 28 92 2b f0 	addw   $0x50,0xf02b9228$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	50 $/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	0f b7 05 28 92 2b f0 	movzwl 0xf02b9228,%eax$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	66 a3 28 92 2b f0    	mov    %ax,0xf02b9228$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	eb 52                	jmp    f01005a4 <cons_putc+0x15b>$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	e8 ed fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	e8 e3 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	e8 d9 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	e8 cf fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f010057a	obj/kern/kernel.asm	/^f010057a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	e8 c5 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	eb 1e                	jmp    f01005a4 <cons_putc+0x15b>$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	0f b7 05 28 92 2b f0 	movzwl 0xf02b9228,%eax$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	66 89 15 28 92 2b f0 	mov    %dx,0xf02b9228$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	8b 15 2c 92 2b f0    	mov    0xf02b922c,%edx$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	66 81 3d 28 92 2b f0 	cmpw   $0x7cf,0xf02b9228$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	cf 07 $/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	76 42                	jbe    f01005f1 <cons_putc+0x1a8>$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	a1 2c 92 2b f0       	mov    0xf02b922c,%eax$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	00 $/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	e8 66 65 00 00       	call   f0106b34 <memmove>$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	8b 15 2c 92 2b f0    	mov    0xf02b922c,%edx$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	83 c0 01             	add    $0x1,%eax$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	75 f0                	jne    f01005d9 <cons_putc+0x190>$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	66 83 2d 28 92 2b f0 	subw   $0x50,0xf02b9228$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	50 $/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	8b 0d 30 92 2b f0    	mov    0xf02b9230,%ecx$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	89 ca                	mov    %ecx,%edx$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	ee                   	out    %al,(%dx)$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	0f b7 1d 28 92 2b f0 	movzwl 0xf02b9228,%ebx$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	89 d8                	mov    %ebx,%eax$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	89 f2                	mov    %esi,%edx$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	ee                   	out    %al,(%dx)$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	89 ca                	mov    %ecx,%edx$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	ee                   	out    %al,(%dx)$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	89 d8                	mov    %ebx,%eax$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	89 f2                	mov    %esi,%edx$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	ee                   	out    %al,(%dx)$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	5b                   	pop    %ebx$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	5e                   	pop    %esi$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	5f                   	pop    %edi$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	5d                   	pop    %ebp$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	c3                   	ret    $/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627 <serial_intr>:$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	80 3d 34 92 2b f0 00 	cmpb   $0x0,0xf02b9234$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	74 11                	je     f0100641 <serial_intr+0x1a>$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	55                   	push   %ebp$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	89 e5                	mov    %esp,%ebp$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	b8 e0 02 10 f0       	mov    $0xf01002e0,%eax$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	e8 bc fc ff ff       	call   f01002fc <cons_intr>$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	c9                   	leave  $/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	f3 c3                	repz ret $/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643 <kbd_intr>:$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	55                   	push   %ebp$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	89 e5                	mov    %esp,%ebp$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	b8 40 03 10 f0       	mov    $0xf0100340,%eax$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	e8 a9 fc ff ff       	call   f01002fc <cons_intr>$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	c9                   	leave  $/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	c3                   	ret    $/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655 <cons_getc>:$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	55                   	push   %ebp$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	89 e5                	mov    %esp,%ebp$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	e8 c7 ff ff ff       	call   f0100627 <serial_intr>$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	e8 de ff ff ff       	call   f0100643 <kbd_intr>$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	a1 20 92 2b f0       	mov    0xf02b9220,%eax$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	3b 05 24 92 2b f0    	cmp    0xf02b9224,%eax$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	74 26                	je     f0100698 <cons_getc+0x43>$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	89 15 20 92 2b f0    	mov    %edx,0xf02b9220$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	0f b6 88 20 90 2b f0 	movzbl -0xfd46fe0(%eax),%ecx$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	89 c8                	mov    %ecx,%eax$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	75 11                	jne    f010069d <cons_getc+0x48>$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	c7 05 20 92 2b f0 00 	movl   $0x0,0xf02b9220$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	00 00 00 $/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	eb 05                	jmp    f010069d <cons_getc+0x48>$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	c9                   	leave  $/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	c3                   	ret    $/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f <cons_init>:$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	55                   	push   %ebp$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	57                   	push   %edi$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	56                   	push   %esi$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	53                   	push   %ebx$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	5a a5 $/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006c3	obj/kern/kernel.asm	/^f01006c3:	74 11                	je     f01006d6 <cons_init+0x37>$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	c7 05 30 92 2b f0 b4 	movl   $0x3b4,0xf02b9230$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	03 00 00 $/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	eb 16                	jmp    f01006ec <cons_init+0x4d>$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	c7 05 30 92 2b f0 d4 	movl   $0x3d4,0xf02b9230$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	03 00 00 $/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	8b 0d 30 92 2b f0    	mov    0xf02b9230,%ecx$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	89 ca                	mov    %ecx,%edx$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	ee                   	out    %al,(%dx)$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	89 da                	mov    %ebx,%edx$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	ec                   	in     (%dx),%al$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	89 ca                	mov    %ecx,%edx$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	ee                   	out    %al,(%dx)$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	89 da                	mov    %ebx,%edx$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	ec                   	in     (%dx),%al$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	89 3d 2c 92 2b f0    	mov    %edi,0xf02b922c$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	09 de                	or     %ebx,%esi$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	66 89 35 28 92 2b f0 	mov    %si,0xf02b9228$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	e8 1b ff ff ff       	call   f0100643 <kbd_intr>$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	0f b7 05 a8 63 12 f0 	movzwl 0xf01263a8,%eax$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	e8 30 3b 00 00       	call   f010426c <irq_setmask_8259A>$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	89 f2                	mov    %esi,%edx$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	ee                   	out    %al,(%dx)$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	ee                   	out    %al,(%dx)$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	89 da                	mov    %ebx,%edx$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	ee                   	out    %al,(%dx)$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	ee                   	out    %al,(%dx)$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	ee                   	out    %al,(%dx)$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	ee                   	out    %al,(%dx)$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	ee                   	out    %al,(%dx)$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	ec                   	in     (%dx),%al$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	3c ff                	cmp    $0xff,%al$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	0f 95 c1             	setne  %cl$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	88 0d 34 92 2b f0    	mov    %cl,0xf02b9234$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	89 f2                	mov    %esi,%edx$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	ec                   	in     (%dx),%al$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	89 da                	mov    %ebx,%edx$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	ec                   	in     (%dx),%al$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	84 c9                	test   %cl,%cl$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	74 1d                	je     f01007b3 <cons_init+0x114>$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	0f b7 05 a8 63 12 f0 	movzwl 0xf01263a8,%eax$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	e8 c2 3a 00 00       	call   f010426c <irq_setmask_8259A>$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	80 3d 34 92 2b f0 00 	cmpb   $0x0,0xf02b9234$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	75 0c                	jne    f01007bf <cons_init+0x120>$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	c7 04 24 4f 83 10 f0 	movl   $0xf010834f,(%esp)$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	e8 ff 3b 00 00       	call   f01043be <cprintf>$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	5b                   	pop    %ebx$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	5e                   	pop    %esi$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	5f                   	pop    %edi$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	5d                   	pop    %ebp$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	c3                   	ret    $/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7 <cputchar>:$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	55                   	push   %ebp$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	e8 74 fc ff ff       	call   f0100449 <cons_putc>$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	c9                   	leave  $/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	c3                   	ret    $/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7 <getchar>:$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	55                   	push   %ebp$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	e8 73 fe ff ff       	call   f0100655 <cons_getc>$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	85 c0                	test   %eax,%eax$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	74 f7                	je     f01007dd <getchar+0x6>$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	c9                   	leave  $/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	c3                   	ret    $/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8 <iscons>:$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	55                   	push   %ebp$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	5d                   	pop    %ebp$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	c3                   	ret    $/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	66 90                	xchg   %ax,%ax$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	66 90                	xchg   %ax,%ax$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	66 90                	xchg   %ax,%ax$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	66 90                	xchg   %ax,%ax$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	66 90                	xchg   %ax,%ax$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	66 90                	xchg   %ax,%ax$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	66 90                	xchg   %ax,%ax$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800 <mon_exit>:$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	55                   	push   %ebp$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	89 e5                	mov    %esp,%ebp$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	5d                   	pop    %ebp$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	c3                   	ret    $/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a <mon_help>:$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	55                   	push   %ebp$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	89 e5                	mov    %esp,%ebp$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	56                   	push   %esi$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	53                   	push   %ebx$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	bb c4 89 10 f0       	mov    $0xf01089c4,%ebx$/;"	l
f0100817	obj/kern/kernel.asm	/^f0100817:	be 18 8a 10 f0       	mov    $0xf0108a18,%esi$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	8b 03                	mov    (%ebx),%eax$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	8b 43 fc             	mov    -0x4(%ebx),%eax$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	c7 04 24 a0 85 10 f0 	movl   $0xf01085a0,(%esp)$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	e8 89 3b 00 00       	call   f01043be <cprintf>$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	39 f3                	cmp    %esi,%ebx$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	75 e0                	jne    f010081c <mon_help+0x12>$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	5b                   	pop    %ebx$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	5e                   	pop    %esi$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	5d                   	pop    %ebp$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	c3                   	ret    $/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848 <mon_kerninfo>:$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	55                   	push   %ebp$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	89 e5                	mov    %esp,%ebp$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	c7 04 24 a9 85 10 f0 	movl   $0xf01085a9,(%esp)$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	e8 64 3b 00 00       	call   f01043be <cprintf>$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	00 $/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	c7 04 24 00 87 10 f0 	movl   $0xf0108700,(%esp)$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	e8 50 3b 00 00       	call   f01043be <cprintf>$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	00 $/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	f0 $/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	c7 04 24 28 87 10 f0 	movl   $0xf0108728,(%esp)$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	e8 34 3b 00 00       	call   f01043be <cprintf>$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	c7 44 24 08 67 82 10 	movl   $0x108267,0x8(%esp)$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	00 $/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	c7 44 24 04 67 82 10 	movl   $0xf0108267,0x4(%esp)$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	f0 $/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	c7 04 24 4c 87 10 f0 	movl   $0xf010874c,(%esp)$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	e8 18 3b 00 00       	call   f01043be <cprintf>$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	c7 44 24 08 ff 87 2b 	movl   $0x2b87ff,0x8(%esp)$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	00 $/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	c7 44 24 04 ff 87 2b 	movl   $0xf02b87ff,0x4(%esp)$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	f0 $/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	c7 04 24 70 87 10 f0 	movl   $0xf0108770,(%esp)$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	e8 fc 3a 00 00       	call   f01043be <cprintf>$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	c7 44 24 08 08 20 34 	movl   $0x342008,0x8(%esp)$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	00 $/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	c7 44 24 04 08 20 34 	movl   $0xf0342008,0x4(%esp)$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	f0 $/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	c7 04 24 94 87 10 f0 	movl   $0xf0108794,(%esp)$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	e8 e0 3a 00 00       	call   f01043be <cprintf>$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	b8 07 24 34 f0       	mov    $0xf0342407,%eax$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	85 c0                	test   %eax,%eax$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	c7 04 24 b8 87 10 f0 	movl   $0xf01087b8,(%esp)$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	e8 b3 3a 00 00       	call   f01043be <cprintf>$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	c9                   	leave  $/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	c3                   	ret    $/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912 <dump_contents_v>:$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	55                   	push   %ebp$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	89 e5                	mov    %esp,%ebp$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	57                   	push   %edi$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	56                   	push   %esi$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	53                   	push   %ebx$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	89 c3                	mov    %eax,%ebx$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	89 d7                	mov    %edx,%edi$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	eb 5b                	jmp    f0100981 <dump_contents_v+0x6f>$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	85 f6                	test   %esi,%esi$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	75 29                	jne    f0100953 <dump_contents_v+0x41>$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	c7 04 24 c2 85 10 f0 	movl   $0xf01085c2,(%esp)$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	e8 84 3a 00 00       	call   f01043be <cprintf>$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	c7 04 24 c8 85 10 f0 	movl   $0xf01085c8,(%esp)$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	e8 71 3a 00 00       	call   f01043be <cprintf>$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	66 be 01 00          	mov    $0x1,%si$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	eb 2b                	jmp    f010097e <dump_contents_v+0x6c>$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	c7 04 24 c8 85 10 f0 	movl   $0xf01085c8,(%esp)$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	e8 58 3a 00 00       	call   f01043be <cprintf>$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	83 fe 10             	cmp    $0x10,%esi$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	75 10                	jne    f010097e <dump_contents_v+0x6c>$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	c7 04 24 48 96 10 f0 	movl   $0xf0109648,(%esp)$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	e8 44 3a 00 00       	call   f01043be <cprintf>$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	66 be 00 00          	mov    $0x0,%si$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	72 a1                	jb     f0100926 <dump_contents_v+0x14>$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	85 f6                	test   %esi,%esi$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	74 0c                	je     f0100995 <dump_contents_v+0x83>$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	c7 04 24 48 96 10 f0 	movl   $0xf0109648,(%esp)$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	e8 29 3a 00 00       	call   f01043be <cprintf>$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	5b                   	pop    %ebx$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	5e                   	pop    %esi$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	5f                   	pop    %edi$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	5d                   	pop    %ebp$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	c3                   	ret    $/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d <mon_backtrace>:$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	55                   	push   %ebp$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	89 e5                	mov    %esp,%ebp$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	57                   	push   %edi$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	56                   	push   %esi$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	53                   	push   %ebx$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	89 ee                	mov    %ebp,%esi$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	c7 04 24 ce 85 10 f0 	movl   $0xf01085ce,(%esp)$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	e8 0a 3a 00 00       	call   f01043be <cprintf>$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	e9 8a 00 00 00       	jmp    f0100a43 <mon_backtrace+0xa6>$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	c7 04 24 e0 85 10 f0 	movl   $0xf01085e0,(%esp)$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	e8 eb 39 00 00       	call   f01043be <cprintf>$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	c7 04 24 fb 85 10 f0 	movl   $0xf01085fb,(%esp)$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	e8 d3 39 00 00       	call   f01043be <cprintf>$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	39 fb                	cmp    %edi,%ebx$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	75 e7                	jne    f01009d9 <mon_backtrace+0x3c>$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	c7 04 24 48 96 10 f0 	movl   $0xf0109648,(%esp)$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	e8 c0 39 00 00       	call   f01043be <cprintf>$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	e8 8e 55 00 00       	call   f0105f9e <debuginfo_eip>$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	89 f8                	mov    %edi,%eax$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	c7 04 24 01 86 10 f0 	movl   $0xf0108601,(%esp)$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	e8 7d 39 00 00       	call   f01043be <cprintf>$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	8b 36                	mov    (%esi),%esi$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	85 f6                	test   %esi,%esi$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	0f 85 6e ff ff ff    	jne    f01009b9 <mon_backtrace+0x1c>$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	5b                   	pop    %ebx$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	5e                   	pop    %esi$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	5f                   	pop    %edi$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	5d                   	pop    %ebp$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	c3                   	ret    $/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58 <str2addr>:$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	55                   	push   %ebp$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	56                   	push   %esi$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	53                   	push   %ebx$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	89 d6                	mov    %edx,%esi$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	00 $/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	e8 95 61 00 00       	call   f0106c13 <strtol>$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	89 06                	mov    %eax,(%esi)$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	e8 d8 5e 00 00       	call   f0106960 <strlen>$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	29 da                	sub    %ebx,%edx$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	39 d0                	cmp    %edx,%eax$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	0f 94 c0             	sete   %al$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	5b                   	pop    %ebx$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	5e                   	pop    %esi$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	5d                   	pop    %ebp$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	c3                   	ret    $/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c <show_mapping>:$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	55                   	push   %ebp$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	53                   	push   %ebx$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	89 c3                	mov    %eax,%ebx$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	e8 5f 0c 00 00       	call   f010171c <page_lookup>$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	85 c0                	test   %eax,%eax$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	0f 84 ba 00 00 00    	je     f0100b7f <show_mapping+0xe3>$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	8b 00                	mov    (%eax),%eax$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	c7 04 24 e4 87 10 f0 	movl   $0xf01087e4,(%esp)$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	e8 db 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	74 0c                	je     f0100af7 <show_mapping+0x5b>$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	c7 04 24 1a 86 10 f0 	movl   $0xf010861a,(%esp)$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	e8 c7 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	74 0c                	je     f0100b0b <show_mapping+0x6f>$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	c7 04 24 1d 86 10 f0 	movl   $0xf010861d,(%esp)$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	e8 b3 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	f6 00 08             	testb  $0x8,(%eax)$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	74 0c                	je     f0100b1f <show_mapping+0x83>$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	c7 04 24 20 86 10 f0 	movl   $0xf0108620,(%esp)$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	e8 9f 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	f6 00 10             	testb  $0x10,(%eax)$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	74 0c                	je     f0100b33 <show_mapping+0x97>$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	c7 04 24 24 86 10 f0 	movl   $0xf0108624,(%esp)$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	e8 8b 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	f6 00 20             	testb  $0x20,(%eax)$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	74 0c                	je     f0100b47 <show_mapping+0xab>$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	c7 04 24 28 86 10 f0 	movl   $0xf0108628,(%esp)$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	e8 77 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	f6 00 40             	testb  $0x40,(%eax)$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	74 0c                	je     f0100b5b <show_mapping+0xbf>$/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	c7 04 24 25 86 10 f0 	movl   $0xf0108625,(%esp)$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	e8 63 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	8b 00                	mov    (%eax),%eax$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	f6 c4 01             	test   $0x1,%ah$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	74 0c                	je     f0100b71 <show_mapping+0xd5>$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	c7 04 24 2b 86 10 f0 	movl   $0xf010862b,(%esp)$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	e8 4d 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	c7 04 24 48 96 10 f0 	movl   $0xf0109648,(%esp)$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	e8 41 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	eb 10                	jmp    f0100b8f <show_mapping+0xf3>$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	c7 04 24 0c 88 10 f0 	movl   $0xf010880c,(%esp)$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	e8 2f 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	5b                   	pop    %ebx$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	5d                   	pop    %ebp$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	c3                   	ret    $/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95 <mon_showmappings>:$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	55                   	push   %ebp$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	53                   	push   %ebx$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	8d 43 fe             	lea    -0x2(%ebx),%eax$/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	76 0e                	jbe    f0100bb5 <mon_showmappings+0x20>$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	c7 04 24 30 88 10 f0 	movl   $0xf0108830,(%esp)$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	e8 0b 38 00 00       	call   f01043be <cprintf>$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	eb 67                	jmp    f0100c1c <mon_showmappings+0x87>$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100bbb	obj/kern/kernel.asm	/^f0100bbb:	8d 55 f4             	lea    -0xc(%ebp),%edx$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	e8 95 fe ff ff       	call   f0100a58 <str2addr>$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	85 c0                	test   %eax,%eax$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	75 0e                	jne    f0100bd5 <mon_showmappings+0x40>$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	c7 04 24 30 88 10 f0 	movl   $0xf0108830,(%esp)$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	e8 eb 37 00 00       	call   f01043be <cprintf>$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	eb 47                	jmp    f0100c1c <mon_showmappings+0x87>$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	83 fb 02             	cmp    $0x2,%ebx$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	75 0d                	jne    f0100be7 <mon_showmappings+0x52>$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	e8 b7 fe ff ff       	call   f0100a9c <show_mapping>$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	eb 35                	jmp    f0100c1c <mon_showmappings+0x87>$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	e8 63 fe ff ff       	call   f0100a58 <str2addr>$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	85 c0                	test   %eax,%eax$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	75 1b                	jne    f0100c17 <mon_showmappings+0x82>$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	c7 04 24 30 88 10 f0 	movl   $0xf0108830,(%esp)$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	e8 b6 37 00 00       	call   f01043be <cprintf>$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	eb 12                	jmp    f0100c1c <mon_showmappings+0x87>$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	e8 8b fe ff ff       	call   f0100a9c <show_mapping>$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	72 ee                	jb     f0100c0a <mon_showmappings+0x75>$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	5b                   	pop    %ebx$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	5d                   	pop    %ebp$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	c3                   	ret    $/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27 <mon_changeperms>:$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	55                   	push   %ebp$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	57                   	push   %edi$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	56                   	push   %esi$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	53                   	push   %ebx$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	7f 11                	jg     f0100c47 <mon_changeperms+0x20>$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	c7 04 24 58 88 10 f0 	movl   $0xf0108858,(%esp)$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	e8 7c 37 00 00       	call   f01043be <cprintf>$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	e9 c0 00 00 00       	jmp    f0100d07 <mon_changeperms+0xe0>$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	e8 03 fe ff ff       	call   f0100a58 <str2addr>$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	85 c0                	test   %eax,%eax$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	75 11                	jne    f0100c6a <mon_changeperms+0x43>$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	c7 04 24 58 88 10 f0 	movl   $0xf0108858,(%esp)$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	e8 59 37 00 00       	call   f01043be <cprintf>$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	e9 9d 00 00 00       	jmp    f0100d07 <mon_changeperms+0xe0>$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	e8 97 0a 00 00       	call   f010171c <page_lookup>$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	bb 02 00 00 00       	mov    $0x2,%ebx$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	85 c0                	test   %eax,%eax$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	75 15                	jne    f0100ca8 <mon_changeperms+0x81>$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	c7 04 24 0c 88 10 f0 	movl   $0xf010880c,(%esp)$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	e8 18 37 00 00       	call   f01043be <cprintf>$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	eb 5f                	jmp    f0100d07 <mon_changeperms+0xe0>$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	8b 34 98             	mov    (%eax,%ebx,4),%esi$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	c7 44 24 04 6a 96 10 	movl   $0xf010966a,0x4(%esp)$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	f0 $/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	e8 8e 5d 00 00       	call   f0106a4c <strcmp>$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	85 c0                	test   %eax,%eax$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	74 27                	je     f0100cee <mon_changeperms+0xc7>$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	c7 44 24 04 9a 95 10 	movl   $0xf010959a,0x4(%esp)$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	f0 $/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	e8 75 5d 00 00       	call   f0106a4c <strcmp>$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	85 c0                	test   %eax,%eax$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	74 0e                	je     f0100ce9 <mon_changeperms+0xc2>$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	c7 04 24 58 88 10 f0 	movl   $0xf0108858,(%esp)$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	e8 d7 36 00 00       	call   f01043be <cprintf>$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	eb 1e                	jmp    f0100d07 <mon_changeperms+0xe0>$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	09 d7                	or     %edx,%edi$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	3b 5d 08             	cmp    0x8(%ebp),%ebx$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	75 b0                	jne    f0100ca8 <mon_changeperms+0x81>$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	8b 10                	mov    (%eax),%edx$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	09 d7                	or     %edx,%edi$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	89 38                	mov    %edi,(%eax)$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	5b                   	pop    %ebx$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	5e                   	pop    %esi$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	5f                   	pop    %edi$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	5d                   	pop    %ebp$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	c3                   	ret    $/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14 <mon_dumpcontents>:$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	55                   	push   %ebp$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	53                   	push   %ebx$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	74 11                	je     f0100d35 <mon_dumpcontents+0x21>$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	c7 04 24 7c 88 10 f0 	movl   $0xf010887c,(%esp)$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	e8 8e 36 00 00       	call   f01043be <cprintf>$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	e9 db 00 00 00       	jmp    f0100e10 <mon_dumpcontents+0xfc>$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	8d 55 f4             	lea    -0xc(%ebp),%edx$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	e8 18 fd ff ff       	call   f0100a58 <str2addr>$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	85 c0                	test   %eax,%eax$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	74 0f                	je     f0100d53 <mon_dumpcontents+0x3f>$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	e8 09 fd ff ff       	call   f0100a58 <str2addr>$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	85 c0                	test   %eax,%eax$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	75 11                	jne    f0100d64 <mon_dumpcontents+0x50>$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	c7 04 24 7c 88 10 f0 	movl   $0xf010887c,(%esp)$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	e8 5f 36 00 00       	call   f01043be <cprintf>$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	e9 ac 00 00 00       	jmp    f0100e10 <mon_dumpcontents+0xfc>$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	80 fa 76             	cmp    $0x76,%dl$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	75 1a                	jne    f0100d89 <mon_dumpcontents+0x75>$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	80 78 01 00          	cmpb   $0x0,0x1(%eax)$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	0f 85 8b 00 00 00    	jne    f0100e04 <mon_dumpcontents+0xf0>$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	e8 8e fb ff ff       	call   f0100912 <dump_contents_v>$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	e9 87 00 00 00       	jmp    f0100e10 <mon_dumpcontents+0xfc>$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	80 fa 70             	cmp    $0x70,%dl$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	75 76                	jne    f0100e04 <mon_dumpcontents+0xf0>$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	80 78 01 00          	cmpb   $0x0,0x1(%eax)$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	75 70                	jne    f0100e04 <mon_dumpcontents+0xf0>$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	8b 0d 74 06 30 f0    	mov    0xf0300674,%ecx$/;"	l
f0100da0	obj/kern/kernel.asm	/^f0100da0:	89 d3                	mov    %edx,%ebx$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	72 20                	jb     f0100dc9 <mon_dumpcontents+0xb5>$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	f0 $/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	00 $/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	c7 04 24 2e 86 10 f0 	movl   $0xf010862e,(%esp)$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	e8 77 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	89 c3                	mov    %eax,%ebx$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	77 20                	ja     f0100df8 <mon_dumpcontents+0xe4>$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	f0 $/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	00 $/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	c7 04 24 2e 86 10 f0 	movl   $0xf010862e,(%esp)$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	e8 48 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	e8 10 fb ff ff       	call   f0100912 <dump_contents_v>$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	eb 0c                	jmp    f0100e10 <mon_dumpcontents+0xfc>$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	c7 04 24 7c 88 10 f0 	movl   $0xf010887c,(%esp)$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	e8 ae 35 00 00       	call   f01043be <cprintf>$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	5b                   	pop    %ebx$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	5d                   	pop    %ebp$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	c3                   	ret    $/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b <monitor>:$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	55                   	push   %ebp$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	57                   	push   %edi$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	56                   	push   %esi$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	53                   	push   %ebx$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	c7 04 24 c8 88 10 f0 	movl   $0xf01088c8,(%esp)$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	e8 8e 35 00 00       	call   f01043be <cprintf>$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	c7 04 24 ec 88 10 f0 	movl   $0xf01088ec,(%esp)$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	e8 82 35 00 00       	call   f01043be <cprintf>$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	74 0b                	je     f0100e4d <monitor+0x32>$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	e8 98 37 00 00       	call   f01045e5 <print_trapframe>$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	c7 04 24 3d 86 10 f0 	movl   $0xf010863d,(%esp)$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	e8 27 5a 00 00       	call   f0106880 <readline>$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	85 c0                	test   %eax,%eax$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	74 ee                	je     f0100e4d <monitor+0x32>$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	eb 0a                	jmp    f0100e77 <monitor+0x5c>$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	89 f7                	mov    %esi,%edi$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	89 fe                	mov    %edi,%esi$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100e7a	obj/kern/kernel.asm	/^f0100e7a:	84 c0                	test   %al,%al$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	74 66                	je     f0100ee4 <monitor+0xc9>$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	0f be c0             	movsbl %al,%eax$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	c7 04 24 41 86 10 f0 	movl   $0xf0108641,(%esp)$/;"	l
f0100e8c	obj/kern/kernel.asm	/^f0100e8c:	e8 19 5c 00 00       	call   f0106aaa <strchr>$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	85 c0                	test   %eax,%eax$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	75 d8                	jne    f0100e6d <monitor+0x52>$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	74 4a                	je     f0100ee4 <monitor+0xc9>$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	75 16                	jne    f0100eb8 <monitor+0x9d>$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	00 $/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	c7 04 24 46 86 10 f0 	movl   $0xf0108646,(%esp)$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	e8 08 35 00 00       	call   f01043be <cprintf>$/;"	l
f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	eb 95                	jmp    f0100e4d <monitor+0x32>$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	eb 03                	jmp    f0100ec4 <monitor+0xa9>$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	84 c0                	test   %al,%al$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	74 aa                	je     f0100e75 <monitor+0x5a>$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	c7 04 24 41 86 10 f0 	movl   $0xf0108641,(%esp)$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	e8 cc 5b 00 00       	call   f0106aaa <strchr>$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	85 c0                	test   %eax,%eax$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	74 df                	je     f0100ec1 <monitor+0xa6>$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	eb 91                	jmp    f0100e75 <monitor+0x5a>$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	00 $/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	85 f6                	test   %esi,%esi$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	0f 84 59 ff ff ff    	je     f0100e4d <monitor+0x32>$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	8b 04 85 c0 89 10 f0 	mov    -0xfef7640(,%eax,4),%eax$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	e8 3a 5b 00 00       	call   f0106a4c <strcmp>$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	85 c0                	test   %eax,%eax$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	75 24                	jne    f0100f3a <monitor+0x11f>$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	ff 14 85 c8 89 10 f0 	call   *-0xfef7638(,%eax,4)$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	85 c0                	test   %eax,%eax$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	78 25                	js     f0100f5a <monitor+0x13f>$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	e9 13 ff ff ff       	jmp    f0100e4d <monitor+0x32>$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	75 b7                	jne    f0100ef9 <monitor+0xde>$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	c7 04 24 63 86 10 f0 	movl   $0xf0108663,(%esp)$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	e8 69 34 00 00       	call   f01043be <cprintf>$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	e9 f3 fe ff ff       	jmp    f0100e4d <monitor+0x32>$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	5b                   	pop    %ebx$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	5e                   	pop    %esi$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	5f                   	pop    %edi$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	5d                   	pop    %ebp$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	c3                   	ret    $/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	66 90                	xchg   %ax,%ax$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	66 90                	xchg   %ax,%ax$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	66 90                	xchg   %ax,%ax$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	66 90                	xchg   %ax,%ax$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	66 90                	xchg   %ax,%ax$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	66 90                	xchg   %ax,%ax$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	66 90                	xchg   %ax,%ax$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70 <page2kva>:$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	2b 05 7c 06 30 f0    	sub    0xf030067c,%eax$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	89 c2                	mov    %eax,%edx$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	3b 15 74 06 30 f0    	cmp    0xf0300674,%edx$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	72 26                	jb     f0100faf <page2kva+0x3f>$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	55                   	push   %ebp$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	f0 $/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	00 $/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	e8 91 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	c3                   	ret    $/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5 <check_va2pa>:$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	89 d1                	mov    %edx,%ecx$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	a8 01                	test   $0x1,%al$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	74 5d                	je     f010101e <check_va2pa+0x69>$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	89 c1                	mov    %eax,%ecx$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	3b 0d 74 06 30 f0    	cmp    0xf0300674,%ecx$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	72 26                	jb     f0100ff9 <check_va2pa+0x44>$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	55                   	push   %ebp$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	f0 $/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	c7 44 24 04 64 03 00 	movl   $0x364,0x4(%esp)$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	00 $/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	e8 47 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	89 c2                	mov    %eax,%edx$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	83 e2 01             	and    $0x1,%edx$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	85 d2                	test   %edx,%edx$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	c3                   	ret    $/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	c3                   	ret    $/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024 <boot_alloc>:$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	55                   	push   %ebp$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	89 e5                	mov    %esp,%ebp$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	53                   	push   %ebx$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	83 3d 38 92 2b f0 00 	cmpl   $0x0,0xf02b9238$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	75 11                	jne    f0101045 <boot_alloc+0x21>$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	ba 07 30 34 f0       	mov    $0xf0343007,%edx$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	89 15 38 92 2b f0    	mov    %edx,0xf02b9238$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	8b 15 38 92 2b f0    	mov    0xf02b9238,%edx$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	77 20                	ja     f0101073 <boot_alloc+0x4f>$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	f0 $/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	c7 44 24 04 66 00 00 	movl   $0x66,0x4(%esp)$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	00 $/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	e8 cd ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	8d 8a 00 00 00 10    	lea    0x10000000(%edx),%ecx$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	89 cb                	mov    %ecx,%ebx$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	3b 1d 74 06 30 f0    	cmp    0xf0300674,%ebx$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	72 20                	jb     f01010a6 <boot_alloc+0x82>$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	f0 $/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	c7 44 24 04 66 00 00 	movl   $0x66,0x4(%esp)$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	00 $/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	e8 9a ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	01 d0                	add    %edx,%eax$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	a3 38 92 2b f0       	mov    %eax,0xf02b9238$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	89 d0                	mov    %edx,%eax$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	83 c4 14             	add    $0x14,%esp$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	5b                   	pop    %ebx$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	5d                   	pop    %ebp$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	c3                   	ret    $/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf <check_page_free_list>:$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	55                   	push   %ebp$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	57                   	push   %edi$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	56                   	push   %esi$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	53                   	push   %ebx$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	84 c0                	test   %al,%al$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	0f 85 31 03 00 00    	jne    f0101401 <check_page_free_list+0x342>$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	e9 3e 03 00 00       	jmp    f0101413 <check_page_free_list+0x354>$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	c7 44 24 08 14 8a 10 	movl   $0xf0108a14,0x8(%esp)$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	f0 $/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	c7 44 24 04 99 02 00 	movl   $0x299,0x4(%esp)$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	00 $/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	e8 4f ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	89 c2                	mov    %eax,%edx$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	0f 95 c2             	setne  %dl$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	89 01                	mov    %eax,(%ecx)$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	8b 00                	mov    (%eax),%eax$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	85 c0                	test   %eax,%eax$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	75 dc                	jne    f01010fd <check_page_free_list+0x3e>$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	89 10                	mov    %edx,(%eax)$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	8b 1d 40 92 2b f0    	mov    0xf02b9240,%ebx$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	eb 63                	jmp    f01011aa <check_page_free_list+0xeb>$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	89 d8                	mov    %ebx,%eax$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	2b 05 7c 06 30 f0    	sub    0xf030067c,%eax$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	89 c2                	mov    %eax,%edx$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	39 f2                	cmp    %esi,%edx$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	73 4a                	jae    f01011a8 <check_page_free_list+0xe9>$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	89 c2                	mov    %eax,%edx$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	3b 15 74 06 30 f0    	cmp    0xf0300674,%edx$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	72 20                	jb     f010118b <check_page_free_list+0xcc>$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	f0 $/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	00 $/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	e8 b5 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	00 $/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	00 $/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	e8 3f 59 00 00       	call   f0106ae7 <memset>$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	85 db                	test   %ebx,%ebx$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	75 99                	jne    f0101147 <check_page_free_list+0x88>$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	e8 6c fe ff ff       	call   f0101024 <boot_alloc>$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	8b 15 40 92 2b f0    	mov    0xf02b9240,%edx$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	8b 0d 7c 06 30 f0    	mov    0xf030067c,%ecx$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	a1 74 06 30 f0       	mov    0xf0300674,%eax$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	e9 c4 01 00 00       	jmp    f01013a9 <check_page_free_list+0x2ea>$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	73 24                	jae    f010120e <check_page_free_list+0x14f>$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	c7 44 24 0c 53 93 10 	movl   $0xf0109353,0xc(%esp)$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	f0 $/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	f0 $/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	c7 44 24 04 b3 02 00 	movl   $0x2b3,0x4(%esp)$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	00 $/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	e8 32 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	72 24                	jb     f0101237 <check_page_free_list+0x178>$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	c7 44 24 0c 74 93 10 	movl   $0xf0109374,0xc(%esp)$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	f0 $/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	f0 $/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	c7 44 24 04 b4 02 00 	movl   $0x2b4,0x4(%esp)$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	00 $/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	e8 09 ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	89 d0                	mov    %edx,%eax$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	a8 07                	test   $0x7,%al$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	74 24                	je     f0101264 <check_page_free_list+0x1a5>$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	c7 44 24 0c 38 8a 10 	movl   $0xf0108a38,0xc(%esp)$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	f0 $/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	f0 $/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	c7 44 24 04 b5 02 00 	movl   $0x2b5,0x4(%esp)$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	00 $/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	e8 dc ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	85 c0                	test   %eax,%eax$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	75 24                	jne    f0101292 <check_page_free_list+0x1d3>$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	c7 44 24 0c 88 93 10 	movl   $0xf0109388,0xc(%esp)$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	f0 $/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	f0 $/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	c7 44 24 04 b8 02 00 	movl   $0x2b8,0x4(%esp)$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	00 $/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	e8 ae ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	75 24                	jne    f01012bd <check_page_free_list+0x1fe>$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	c7 44 24 0c 99 93 10 	movl   $0xf0109399,0xc(%esp)$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	f0 $/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	f0 $/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	c7 44 24 04 b9 02 00 	movl   $0x2b9,0x4(%esp)$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	00 $/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	e8 83 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	75 24                	jne    f01012e8 <check_page_free_list+0x229>$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	c7 44 24 0c 6c 8a 10 	movl   $0xf0108a6c,0xc(%esp)$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	f0 $/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	f0 $/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	c7 44 24 04 ba 02 00 	movl   $0x2ba,0x4(%esp)$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	00 $/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	e8 58 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	75 24                	jne    f0101313 <check_page_free_list+0x254>$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	c7 44 24 0c b2 93 10 	movl   $0xf01093b2,0xc(%esp)$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	f0 $/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	f0 $/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	c7 44 24 04 bb 02 00 	movl   $0x2bb,0x4(%esp)$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	00 $/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	e8 2d ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	0f 86 1c 01 00 00    	jbe    f010143a <check_page_free_list+0x37b>$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	89 c1                	mov    %eax,%ecx$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	39 4d c4             	cmp    %ecx,-0x3c(%ebp)$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	77 20                	ja     f0101348 <check_page_free_list+0x289>$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	f0 $/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	00 $/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	e8 f8 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	0f 86 d3 00 00 00    	jbe    f010142a <check_page_free_list+0x36b>$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	c7 44 24 0c 90 8a 10 	movl   $0xf0108a90,0xc(%esp)$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	f0 $/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	f0 $/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	c7 44 24 04 bc 02 00 	movl   $0x2bc,0x4(%esp)$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	00 $/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	e8 c5 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	c7 44 24 0c cc 93 10 	movl   $0xf01093cc,0xc(%esp)$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	f0 $/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	f0 $/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	c7 44 24 04 be 02 00 	movl   $0x2be,0x4(%esp)$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	00 $/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	e8 a1 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	eb 03                	jmp    f01013a7 <check_page_free_list+0x2e8>$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	83 c7 01             	add    $0x1,%edi$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	8b 12                	mov    (%edx),%edx$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	85 d2                	test   %edx,%edx$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	0f 85 34 fe ff ff    	jne    f01011e5 <check_page_free_list+0x126>$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	85 db                	test   %ebx,%ebx$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	7f 24                	jg     f01013d9 <check_page_free_list+0x31a>$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	c7 44 24 0c e9 93 10 	movl   $0xf01093e9,0xc(%esp)$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	f0 $/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	f0 $/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	c7 44 24 04 c6 02 00 	movl   $0x2c6,0x4(%esp)$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	00 $/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	e8 67 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	85 ff                	test   %edi,%edi$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	7f 6d                	jg     f010144a <check_page_free_list+0x38b>$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	c7 44 24 0c fb 93 10 	movl   $0xf01093fb,0xc(%esp)$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	f0 $/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	f0 $/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	c7 44 24 04 c7 02 00 	movl   $0x2c7,0x4(%esp)$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	00 $/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	e8 3f ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	85 c0                	test   %eax,%eax$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	0f 85 e3 fc ff ff    	jne    f01010f1 <check_page_free_list+0x32>$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	e9 c2 fc ff ff       	jmp    f01010d5 <check_page_free_list+0x16>$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	83 3d 40 92 2b f0 00 	cmpl   $0x0,0xf02b9240$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	0f 84 b5 fc ff ff    	je     f01010d5 <check_page_free_list+0x16>$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	e9 15 fd ff ff       	jmp    f010113f <check_page_free_list+0x80>$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	0f 85 6f ff ff ff    	jne    f01013a4 <check_page_free_list+0x2e5>$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	e9 41 ff ff ff       	jmp    f010137b <check_page_free_list+0x2bc>$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	0f 85 5a ff ff ff    	jne    f010139f <check_page_free_list+0x2e0>$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	e9 31 ff ff ff       	jmp    f010137b <check_page_free_list+0x2bc>$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	5b                   	pop    %ebx$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	5e                   	pop    %esi$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	5f                   	pop    %edi$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	5d                   	pop    %ebp$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	c3                   	ret    $/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452 <page_init>:$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	55                   	push   %ebp$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	89 e5                	mov    %esp,%ebp$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	57                   	push   %edi$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	56                   	push   %esi$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	53                   	push   %ebx$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	e8 bf fb ff ff       	call   f0101024 <boot_alloc>$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	77 20                	ja     f010148c <page_init+0x3a>$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	f0 $/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	c7 44 24 04 36 01 00 	movl   $0x136,0x4(%esp)$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	00 $/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	e8 b4 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	8d b8 00 00 00 10    	lea    0x10000000(%eax),%edi$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	8b 35 44 92 2b f0    	mov    0xf02b9244,%esi$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	8b 1d 40 92 2b f0    	mov    0xf02b9240,%ebx$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	eb 2f                	jmp    f01014d7 <page_init+0x85>$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	39 f2                	cmp    %esi,%edx$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	72 04                	jb     f01014b0 <page_init+0x5e>$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	39 fa                	cmp    %edi,%edx$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	72 24                	jb     f01014d4 <page_init+0x82>$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	74 1f                	je     f01014d4 <page_init+0x82>$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	89 c8                	mov    %ecx,%eax$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	03 05 7c 06 30 f0    	add    0xf030067c,%eax$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	89 18                	mov    %ebx,(%eax)$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	89 cb                	mov    %ecx,%ebx$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	03 1d 7c 06 30 f0    	add    0xf030067c,%ebx$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	3b 15 74 06 30 f0    	cmp    0xf0300674,%edx$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	72 c9                	jb     f01014a8 <page_init+0x56>$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	89 1d 40 92 2b f0    	mov    %ebx,0xf02b9240$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	5b                   	pop    %ebx$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	5e                   	pop    %esi$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	5f                   	pop    %edi$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	5d                   	pop    %ebp$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	c3                   	ret    $/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed <page_alloc>:$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	55                   	push   %ebp$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	53                   	push   %ebx$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	8b 1d 40 92 2b f0    	mov    0xf02b9240,%ebx$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	85 db                	test   %ebx,%ebx$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	74 6b                	je     f0101569 <page_alloc+0x7c>$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	74 58                	je     f0101569 <page_alloc+0x7c>$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	89 d8                	mov    %ebx,%eax$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	2b 05 7c 06 30 f0    	sub    0xf030067c,%eax$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	89 c2                	mov    %eax,%edx$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	3b 15 74 06 30 f0    	cmp    0xf0300674,%edx$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	72 20                	jb     f010154c <page_alloc+0x5f>$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	f0 $/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	00 $/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	e8 f4 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	00 $/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	00 $/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	e8 7e 55 00 00       	call   f0106ae7 <memset>$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	89 d8                	mov    %ebx,%eax$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	5b                   	pop    %ebx$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	5d                   	pop    %ebp$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	c3                   	ret    $/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571 <page_free>:$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	55                   	push   %ebp$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	89 e5                	mov    %esp,%ebp$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	85 c0                	test   %eax,%eax$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	75 24                	jne    f01015a2 <page_free+0x31>$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	c7 44 24 0c 0c 94 10 	movl   $0xf010940c,0xc(%esp)$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	f0 $/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	f0 $/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	c7 44 24 04 63 01 00 	movl   $0x163,0x4(%esp)$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	00 $/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	e8 9e ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	74 24                	je     f01015cd <page_free+0x5c>$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	c7 44 24 0c 17 94 10 	movl   $0xf0109417,0xc(%esp)$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	f0 $/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	f0 $/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	c7 44 24 04 64 01 00 	movl   $0x164,0x4(%esp)$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	00 $/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	e8 73 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	74 24                	je     f01015f6 <page_free+0x85>$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	c7 44 24 0c 27 94 10 	movl   $0xf0109427,0xc(%esp)$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	f0 $/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	f0 $/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	c7 44 24 04 65 01 00 	movl   $0x165,0x4(%esp)$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	00 $/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	e8 4a ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	8b 15 40 92 2b f0    	mov    0xf02b9240,%edx$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	89 10                	mov    %edx,(%eax)$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	c9                   	leave  $/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	c3                   	ret    $/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605 <page_decref>:$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	55                   	push   %ebp$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	89 e5                	mov    %esp,%ebp$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	66 85 d2             	test   %dx,%dx$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	75 08                	jne    f0101626 <page_decref+0x21>$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	e8 4b ff ff ff       	call   f0101571 <page_free>$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	c9                   	leave  $/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	c3                   	ret    $/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628 <pgdir_walk>:$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	55                   	push   %ebp$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	89 e5                	mov    %esp,%ebp$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	56                   	push   %esi$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	53                   	push   %ebx$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	89 de                	mov    %ebx,%esi$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	f6 03 01             	testb  $0x1,(%ebx)$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	75 2c                	jne    f0101678 <pgdir_walk+0x50>$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	74 63                	je     f01016b5 <pgdir_walk+0x8d>$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	e8 8f fe ff ff       	call   f01014ed <page_alloc>$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	85 c0                	test   %eax,%eax$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	74 5a                	je     f01016bc <pgdir_walk+0x94>$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	2b 05 7c 06 30 f0    	sub    0xf030067c,%eax$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	83 c8 07             	or     $0x7,%eax$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	8b 03                	mov    (%ebx),%eax$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	89 c2                	mov    %eax,%edx$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	3b 15 74 06 30 f0    	cmp    0xf0300674,%edx$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	72 20                	jb     f01016ac <pgdir_walk+0x84>$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	f0 $/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	c7 44 24 04 9b 01 00 	movl   $0x19b,0x4(%esp)$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	00 $/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	e8 94 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	8d 84 b0 00 00 00 f0 	lea    -0x10000000(%eax,%esi,4),%eax$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	eb 0c                	jmp    f01016c1 <pgdir_walk+0x99>$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	eb 05                	jmp    f01016c1 <pgdir_walk+0x99>$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	5b                   	pop    %ebx$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	5e                   	pop    %esi$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	5d                   	pop    %ebp$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	c3                   	ret    $/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8 <boot_map_region>:$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	55                   	push   %ebp$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	57                   	push   %edi$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	56                   	push   %esi$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	53                   	push   %ebx$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	89 c7                	mov    %eax,%edi$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	89 d6                	mov    %edx,%esi$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	83 c8 01             	or     $0x1,%eax$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	eb 27                	jmp    f010170f <boot_map_region+0x47>$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	00 $/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	e8 29 ff ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	89 da                	mov    %ebx,%edx$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	03 55 08             	add    0x8(%ebp),%edx$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	0b 55 e0             	or     -0x20(%ebp),%edx$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	89 10                	mov    %edx,(%eax)$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	72 d4                	jb     f01016e8 <boot_map_region+0x20>$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	5b                   	pop    %ebx$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	5e                   	pop    %esi$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	5f                   	pop    %edi$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	5d                   	pop    %ebp$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	c3                   	ret    $/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c <page_lookup>:$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	55                   	push   %ebp$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	89 e5                	mov    %esp,%ebp$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	53                   	push   %ebx$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	00 $/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	e8 e8 fe ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	85 db                	test   %ebx,%ebx$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	74 02                	je     f0101746 <page_lookup+0x2a>$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	85 c0                	test   %eax,%eax$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	74 38                	je     f0101782 <page_lookup+0x66>$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	8b 00                	mov    (%eax),%eax$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	a8 01                	test   $0x1,%al$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	74 39                	je     f0101789 <page_lookup+0x6d>$/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	3b 05 74 06 30 f0    	cmp    0xf0300674,%eax$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	72 1c                	jb     f0101777 <page_lookup+0x5b>$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	c7 44 24 08 d8 8a 10 	movl   $0xf0108ad8,0x8(%esp)$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	f0 $/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	00 $/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	e8 c9 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	8b 15 7c 06 30 f0    	mov    0xf030067c,%edx$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	eb 0c                	jmp    f010178e <page_lookup+0x72>$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	eb 05                	jmp    f010178e <page_lookup+0x72>$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	5b                   	pop    %ebx$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	5d                   	pop    %ebp$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	c3                   	ret    $/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794 <tlb_invalidate>:$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	55                   	push   %ebp$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	89 e5                	mov    %esp,%ebp$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	e8 9d 59 00 00       	call   f010713c <cpunum>$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	83 b8 28 10 30 f0 00 	cmpl   $0x0,-0xfcfefd8(%eax)$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	74 16                	je     f01017c1 <tlb_invalidate+0x2d>$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	e8 8c 59 00 00       	call   f010713c <cpunum>$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	75 06                	jne    f01017c7 <tlb_invalidate+0x33>$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	0f 01 38             	invlpg (%eax)$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	c9                   	leave  $/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	c3                   	ret    $/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9 <page_remove>:$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	55                   	push   %ebp$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	57                   	push   %edi$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	56                   	push   %esi$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	53                   	push   %ebx$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	e8 2a ff ff ff       	call   f010171c <page_lookup>$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	89 c3                	mov    %eax,%ebx$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	85 c0                	test   %eax,%eax$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	74 1d                	je     f0101815 <page_remove+0x4c>$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	e8 87 ff ff ff       	call   f0101794 <tlb_invalidate>$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	e8 f0 fd ff ff       	call   f0101605 <page_decref>$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	5b                   	pop    %ebx$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	5e                   	pop    %esi$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	5f                   	pop    %edi$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	5d                   	pop    %ebp$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	c3                   	ret    $/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d <page_insert>:$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	55                   	push   %ebp$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	57                   	push   %edi$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	56                   	push   %esi$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	53                   	push   %ebx$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	00 $/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	e8 e5 fd ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	89 c3                	mov    %eax,%ebx$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	85 c0                	test   %eax,%eax$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	74 36                	je     f010187f <page_insert+0x62>$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	74 0f                	je     f0101862 <page_insert+0x45>$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	e8 67 ff ff ff       	call   f01017c9 <page_remove>$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	2b 35 7c 06 30 f0    	sub    0xf030067c,%esi$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	09 c6                	or     %eax,%esi$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	89 33                	mov    %esi,(%ebx)$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	eb 05                	jmp    f0101884 <page_insert+0x67>$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	5b                   	pop    %ebx$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	5e                   	pop    %esi$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	5f                   	pop    %edi$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	5d                   	pop    %ebp$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	c3                   	ret    $/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c <mmio_map_region>:$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	55                   	push   %ebp$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	89 e5                	mov    %esp,%ebp$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	53                   	push   %ebx$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	8b 1d 00 63 12 f0    	mov    0xf0126300,%ebx$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	8d 88 ff 0f 00 00    	lea    0xfff(%eax),%ecx$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	8d 04 19             	lea    (%ecx,%ebx,1),%eax$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	81 fa 00 00 40 00    	cmp    $0x400000,%edx$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	76 1c                	jbe    f01018d5 <mmio_map_region+0x49>$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	c7 44 24 08 f8 8a 10 	movl   $0xf0108af8,0x8(%esp)$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	f0 $/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	c7 44 24 04 3d 02 00 	movl   $0x23d,0x4(%esp)$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	00 $/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	e8 6b e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	a3 00 63 12 f0       	mov    %eax,0xf0126300$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	00 $/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	89 da                	mov    %ebx,%edx$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	e8 d4 fd ff ff       	call   f01016c8 <boot_map_region>$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	89 d8                	mov    %ebx,%eax$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	83 c4 14             	add    $0x14,%esp$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	5b                   	pop    %ebx$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	5d                   	pop    %ebp$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	c3                   	ret    $/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc <mem_init>:$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	55                   	push   %ebp$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	57                   	push   %edi$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	56                   	push   %esi$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	53                   	push   %ebx$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	e8 2f 29 00 00       	call   f0104240 <mc146818_read>$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	89 c3                	mov    %eax,%ebx$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	e8 21 29 00 00       	call   f0104240 <mc146818_read>$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	09 c3                	or     %eax,%ebx$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	89 d8                	mov    %ebx,%eax$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	85 c0                	test   %eax,%eax$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	a3 44 92 2b f0       	mov    %eax,0xf02b9244$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	e8 f8 28 00 00       	call   f0104240 <mc146818_read>$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	89 c3                	mov    %eax,%ebx$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	e8 ea 28 00 00       	call   f0104240 <mc146818_read>$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	09 c3                	or     %eax,%ebx$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	89 d8                	mov    %ebx,%eax$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	85 c0                	test   %eax,%eax$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	85 c0                	test   %eax,%eax$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	74 0e                	je     f0101980 <mem_init+0x84>$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	89 15 74 06 30 f0    	mov    %edx,0xf0300674$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	eb 0c                	jmp    f010198c <mem_init+0x90>$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	8b 15 44 92 2b f0    	mov    0xf02b9244,%edx$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	89 15 74 06 30 f0    	mov    %edx,0xf0300674$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	a1 44 92 2b f0       	mov    0xf02b9244,%eax$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	a1 74 06 30 f0       	mov    0xf0300674,%eax$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	c7 04 24 20 8b 10 f0 	movl   $0xf0108b20,(%esp)$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	e8 fe 29 00 00       	call   f01043be <cprintf>$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	e8 5a f6 ff ff       	call   f0101024 <boot_alloc>$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	a3 78 06 30 f0       	mov    %eax,0xf0300678$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	00 $/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	00 $/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	e8 00 51 00 00       	call   f0106ae7 <memset>$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	77 20                	ja     f0101a13 <mem_init+0x117>$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	f0 $/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	c7 44 24 04 8d 00 00 	movl   $0x8d,0x4(%esp)$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	00 $/;"	l
f0101a07	obj/kern/kernel.asm	/^f0101a07:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	e8 2d e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	a1 74 06 30 f0       	mov    0xf0300674,%eax$/;"	l
f0101a27	obj/kern/kernel.asm	/^f0101a27:	8d 1c c5 00 00 00 00 	lea    0x0(,%eax,8),%ebx$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	89 d8                	mov    %ebx,%eax$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	e8 ef f5 ff ff       	call   f0101024 <boot_alloc>$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	a3 7c 06 30 f0       	mov    %eax,0xf030067c$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	00 $/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	e8 99 50 00 00       	call   f0106ae7 <memset>$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	e8 cc f5 ff ff       	call   f0101024 <boot_alloc>$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	a3 48 92 2b f0       	mov    %eax,0xf02b9248$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	00 $/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	00 $/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	e8 72 50 00 00       	call   f0106ae7 <memset>$/;"	l
f0101a75	obj/kern/kernel.asm	/^f0101a75:	e8 d8 f9 ff ff       	call   f0101452 <page_init>$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	e8 3b f6 ff ff       	call   f01010bf <check_page_free_list>$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	83 3d 7c 06 30 f0 00 	cmpl   $0x0,0xf030067c$/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	75 1c                	jne    f0101aa9 <mem_init+0x1ad>$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	c7 44 24 08 3b 94 10 	movl   $0xf010943b,0x8(%esp)$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	f0 $/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	c7 44 24 04 d8 02 00 	movl   $0x2d8,0x4(%esp)$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	00 $/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	e8 97 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	eb 05                	jmp    f0101aba <mem_init+0x1be>$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	8b 00                	mov    (%eax),%eax$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	85 c0                	test   %eax,%eax$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	75 f7                	jne    f0101ab5 <mem_init+0x1b9>$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	e8 23 fa ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	89 c7                	mov    %eax,%edi$/;"	l
f0101acc	obj/kern/kernel.asm	/^f0101acc:	85 c0                	test   %eax,%eax$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	75 24                	jne    f0101af4 <mem_init+0x1f8>$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	c7 44 24 0c 56 94 10 	movl   $0xf0109456,0xc(%esp)$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	f0 $/;"	l
f0101ad8	obj/kern/kernel.asm	/^f0101ad8:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	f0 $/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	c7 44 24 04 e0 02 00 	movl   $0x2e0,0x4(%esp)$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	00 $/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	e8 4c e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	e8 ed f9 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	89 c6                	mov    %eax,%esi$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	85 c0                	test   %eax,%eax$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	75 24                	jne    f0101b2a <mem_init+0x22e>$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	c7 44 24 0c 6c 94 10 	movl   $0xf010946c,0xc(%esp)$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	f0 $/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	f0 $/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	c7 44 24 04 e1 02 00 	movl   $0x2e1,0x4(%esp)$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	00 $/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	e8 16 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	e8 b7 f9 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	85 c0                	test   %eax,%eax$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	75 24                	jne    f0101b61 <mem_init+0x265>$/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	c7 44 24 0c 82 94 10 	movl   $0xf0109482,0xc(%esp)$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	f0 $/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	f0 $/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	00 $/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	e8 df e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	39 f7                	cmp    %esi,%edi$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	75 24                	jne    f0101b89 <mem_init+0x28d>$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	c7 44 24 0c 98 94 10 	movl   $0xf0109498,0xc(%esp)$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	f0 $/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	f0 $/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	00 $/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	e8 b7 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	39 c6                	cmp    %eax,%esi$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	74 04                	je     f0101b94 <mem_init+0x298>$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	39 c7                	cmp    %eax,%edi$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	75 24                	jne    f0101bb8 <mem_init+0x2bc>$/;"	l
f0101b94	obj/kern/kernel.asm	/^f0101b94:	c7 44 24 0c 5c 8b 10 	movl   $0xf0108b5c,0xc(%esp)$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	f0 $/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	f0 $/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	c7 44 24 04 e6 02 00 	movl   $0x2e6,0x4(%esp)$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	00 $/;"	l
f0101bac	obj/kern/kernel.asm	/^f0101bac:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	e8 88 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	8b 15 7c 06 30 f0    	mov    0xf030067c,%edx$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	a1 74 06 30 f0       	mov    0xf0300674,%eax$/;"	l
f0101bc3	obj/kern/kernel.asm	/^f0101bc3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	89 f9                	mov    %edi,%ecx$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	29 d1                	sub    %edx,%ecx$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	72 24                	jb     f0101bf8 <mem_init+0x2fc>$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	c7 44 24 0c aa 94 10 	movl   $0xf01094aa,0xc(%esp)$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	f0 $/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	f0 $/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	c7 44 24 04 e7 02 00 	movl   $0x2e7,0x4(%esp)$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	00 $/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	e8 48 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	89 f1                	mov    %esi,%ecx$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	29 d1                	sub    %edx,%ecx$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101bff	obj/kern/kernel.asm	/^f0101bff:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	77 24                	ja     f0101c2a <mem_init+0x32e>$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	c7 44 24 0c c7 94 10 	movl   $0xf01094c7,0xc(%esp)$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	f0 $/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101c15	obj/kern/kernel.asm	/^f0101c15:	f0 $/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	c7 44 24 04 e8 02 00 	movl   $0x2e8,0x4(%esp)$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	00 $/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	e8 16 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	29 d1                	sub    %edx,%ecx$/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	89 ca                	mov    %ecx,%edx$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	77 24                	ja     f0101c5f <mem_init+0x363>$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	c7 44 24 0c e4 94 10 	movl   $0xf01094e4,0xc(%esp)$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	f0 $/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	f0 $/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	c7 44 24 04 e9 02 00 	movl   $0x2e9,0x4(%esp)$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	00 $/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	e8 e1 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	c7 05 40 92 2b f0 00 	movl   $0x0,0xf02b9240$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	00 00 00 $/;"	l
f0101c71	obj/kern/kernel.asm	/^f0101c71:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	e8 70 f8 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	85 c0                	test   %eax,%eax$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	74 24                	je     f0101ca5 <mem_init+0x3a9>$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	c7 44 24 0c 01 95 10 	movl   $0xf0109501,0xc(%esp)$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	f0 $/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	f0 $/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	00 $/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	e8 9b e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	e8 c4 f8 ff ff       	call   f0101571 <page_free>$/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	e8 bc f8 ff ff       	call   f0101571 <page_free>$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	e8 b1 f8 ff ff       	call   f0101571 <page_free>$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	e8 21 f8 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	89 c6                	mov    %eax,%esi$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	85 c0                	test   %eax,%eax$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	75 24                	jne    f0101cf6 <mem_init+0x3fa>$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	c7 44 24 0c 56 94 10 	movl   $0xf0109456,0xc(%esp)$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	f0 $/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	f0 $/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	c7 44 24 04 f7 02 00 	movl   $0x2f7,0x4(%esp)$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	00 $/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	e8 4a e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101cfd	obj/kern/kernel.asm	/^f0101cfd:	e8 eb f7 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	89 c7                	mov    %eax,%edi$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	85 c0                	test   %eax,%eax$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	75 24                	jne    f0101d2c <mem_init+0x430>$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	c7 44 24 0c 6c 94 10 	movl   $0xf010946c,0xc(%esp)$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	f0 $/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	f0 $/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	c7 44 24 04 f8 02 00 	movl   $0x2f8,0x4(%esp)$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	00 $/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	e8 14 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d33	obj/kern/kernel.asm	/^f0101d33:	e8 b5 f7 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	85 c0                	test   %eax,%eax$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	75 24                	jne    f0101d63 <mem_init+0x467>$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	c7 44 24 0c 82 94 10 	movl   $0xf0109482,0xc(%esp)$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	f0 $/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	f0 $/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	c7 44 24 04 f9 02 00 	movl   $0x2f9,0x4(%esp)$/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	00 $/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	e8 dd e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	39 fe                	cmp    %edi,%esi$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	75 24                	jne    f0101d8b <mem_init+0x48f>$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	c7 44 24 0c 98 94 10 	movl   $0xf0109498,0xc(%esp)$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	f0 $/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	f0 $/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	c7 44 24 04 fb 02 00 	movl   $0x2fb,0x4(%esp)$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	00 $/;"	l
f0101d7f	obj/kern/kernel.asm	/^f0101d7f:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	e8 b5 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	39 c7                	cmp    %eax,%edi$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	74 04                	je     f0101d96 <mem_init+0x49a>$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	39 c6                	cmp    %eax,%esi$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	75 24                	jne    f0101dba <mem_init+0x4be>$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	c7 44 24 0c 5c 8b 10 	movl   $0xf0108b5c,0xc(%esp)$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	f0 $/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	f0 $/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	c7 44 24 04 fc 02 00 	movl   $0x2fc,0x4(%esp)$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	00 $/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	e8 86 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	e8 27 f7 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	85 c0                	test   %eax,%eax$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	74 24                	je     f0101dee <mem_init+0x4f2>$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	c7 44 24 0c 01 95 10 	movl   $0xf0109501,0xc(%esp)$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	f0 $/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	f0 $/;"	l
f0101dda	obj/kern/kernel.asm	/^f0101dda:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	00 $/;"	l
f0101de2	obj/kern/kernel.asm	/^f0101de2:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	e8 52 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	89 f0                	mov    %esi,%eax$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	2b 05 7c 06 30 f0    	sub    0xf030067c,%eax$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	89 c2                	mov    %eax,%edx$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	3b 15 74 06 30 f0    	cmp    0xf0300674,%edx$/;"	l
f0101e07	obj/kern/kernel.asm	/^f0101e07:	72 20                	jb     f0101e29 <mem_init+0x52d>$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	f0 $/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	00 $/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	e8 17 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	00 $/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	00 $/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	e8 a1 4c 00 00       	call   f0106ae7 <memset>$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	e8 23 f7 ff ff       	call   f0101571 <page_free>$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	e8 93 f6 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	85 c0                	test   %eax,%eax$/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	75 24                	jne    f0101e82 <mem_init+0x586>$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	c7 44 24 0c 10 95 10 	movl   $0xf0109510,0xc(%esp)$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	f0 $/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101e6d	obj/kern/kernel.asm	/^f0101e6d:	f0 $/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	c7 44 24 04 02 03 00 	movl   $0x302,0x4(%esp)$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	00 $/;"	l
f0101e76	obj/kern/kernel.asm	/^f0101e76:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	e8 be e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	39 c6                	cmp    %eax,%esi$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	74 24                	je     f0101eaa <mem_init+0x5ae>$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	c7 44 24 0c 2e 95 10 	movl   $0xf010952e,0xc(%esp)$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	f0 $/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	f0 $/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	c7 44 24 04 03 03 00 	movl   $0x303,0x4(%esp)$/;"	l
f0101e9d	obj/kern/kernel.asm	/^f0101e9d:	00 $/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101ea5	obj/kern/kernel.asm	/^f0101ea5:	e8 96 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	89 f0                	mov    %esi,%eax$/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	2b 05 7c 06 30 f0    	sub    0xf030067c,%eax$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101eb5	obj/kern/kernel.asm	/^f0101eb5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	89 c2                	mov    %eax,%edx$/;"	l
f0101eba	obj/kern/kernel.asm	/^f0101eba:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101ebd	obj/kern/kernel.asm	/^f0101ebd:	3b 15 74 06 30 f0    	cmp    0xf0300674,%edx$/;"	l
f0101ec3	obj/kern/kernel.asm	/^f0101ec3:	72 20                	jb     f0101ee5 <mem_init+0x5e9>$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	f0 $/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	00 $/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0101ee0	obj/kern/kernel.asm	/^f0101ee0:	e8 5b e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101ef1	obj/kern/kernel.asm	/^f0101ef1:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	74 24                	je     f0101f1a <mem_init+0x61e>$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	c7 44 24 0c 3e 95 10 	movl   $0xf010953e,0xc(%esp)$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	f0 $/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	f0 $/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	c7 44 24 04 06 03 00 	movl   $0x306,0x4(%esp)$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	00 $/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	e8 26 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	75 d0                	jne    f0101ef1 <mem_init+0x5f5>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	a3 40 92 2b f0       	mov    %eax,0xf02b9240$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	e8 40 f6 ff ff       	call   f0101571 <page_free>$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	e8 38 f6 ff ff       	call   f0101571 <page_free>$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	e8 2d f6 ff ff       	call   f0101571 <page_free>$/;"	l
f0101f44	obj/kern/kernel.asm	/^f0101f44:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49:	eb 05                	jmp    f0101f50 <mem_init+0x654>$/;"	l
f0101f4b	obj/kern/kernel.asm	/^f0101f4b:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	85 c0                	test   %eax,%eax$/;"	l
f0101f52	obj/kern/kernel.asm	/^f0101f52:	75 f7                	jne    f0101f4b <mem_init+0x64f>$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	85 db                	test   %ebx,%ebx$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	74 24                	je     f0101f7c <mem_init+0x680>$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	c7 44 24 0c 48 95 10 	movl   $0xf0109548,0xc(%esp)$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	f0 $/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	f0 $/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	00 $/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	e8 c4 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	c7 04 24 7c 8b 10 f0 	movl   $0xf0108b7c,(%esp)$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	e8 36 24 00 00       	call   f01043be <cprintf>$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	e8 59 f5 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	85 c0                	test   %eax,%eax$/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	75 24                	jne    f0101fbf <mem_init+0x6c3>$/;"	l
f0101f9b	obj/kern/kernel.asm	/^f0101f9b:	c7 44 24 0c 56 94 10 	movl   $0xf0109456,0xc(%esp)$/;"	l
f0101fa2	obj/kern/kernel.asm	/^f0101fa2:	f0 $/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	f0 $/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	c7 44 24 04 79 03 00 	movl   $0x379,0x4(%esp)$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	00 $/;"	l
f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	e8 81 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fbf	obj/kern/kernel.asm	/^f0101fbf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	e8 22 f5 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0101fcb	obj/kern/kernel.asm	/^f0101fcb:	89 c3                	mov    %eax,%ebx$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	85 c0                	test   %eax,%eax$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	75 24                	jne    f0101ff5 <mem_init+0x6f9>$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	c7 44 24 0c 6c 94 10 	movl   $0xf010946c,0xc(%esp)$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	f0 $/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	f0 $/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	c7 44 24 04 7a 03 00 	movl   $0x37a,0x4(%esp)$/;"	l
f0101fe8	obj/kern/kernel.asm	/^f0101fe8:	00 $/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	e8 4b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	e8 ec f4 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	89 c6                	mov    %eax,%esi$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	85 c0                	test   %eax,%eax$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	75 24                	jne    f010202b <mem_init+0x72f>$/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	c7 44 24 0c 82 94 10 	movl   $0xf0109482,0xc(%esp)$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	f0 $/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	f0 $/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	c7 44 24 04 7b 03 00 	movl   $0x37b,0x4(%esp)$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	00 $/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	e8 15 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010202e	obj/kern/kernel.asm	/^f010202e:	75 24                	jne    f0102054 <mem_init+0x758>$/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	c7 44 24 0c 98 94 10 	movl   $0xf0109498,0xc(%esp)$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	f0 $/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	f0 $/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	c7 44 24 04 7e 03 00 	movl   $0x37e,0x4(%esp)$/;"	l
f0102047	obj/kern/kernel.asm	/^f0102047:	00 $/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	e8 ec df ff ff       	call   f0100040 <_panic>$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102056	obj/kern/kernel.asm	/^f0102056:	74 05                	je     f010205d <mem_init+0x761>$/;"	l
f0102058	obj/kern/kernel.asm	/^f0102058:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	75 24                	jne    f0102081 <mem_init+0x785>$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	c7 44 24 0c 5c 8b 10 	movl   $0xf0108b5c,0xc(%esp)$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	f0 $/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	f0 $/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	c7 44 24 04 7f 03 00 	movl   $0x37f,0x4(%esp)$/;"	l
f0102074	obj/kern/kernel.asm	/^f0102074:	00 $/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010207c	obj/kern/kernel.asm	/^f010207c:	e8 bf df ff ff       	call   f0100040 <_panic>$/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	a1 40 92 2b f0       	mov    0xf02b9240,%eax$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	c7 05 40 92 2b f0 00 	movl   $0x0,0xf02b9240$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	00 00 00 $/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	e8 4e f4 ff ff       	call   f01014ed <page_alloc>$/;"	l
f010209f	obj/kern/kernel.asm	/^f010209f:	85 c0                	test   %eax,%eax$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	74 24                	je     f01020c7 <mem_init+0x7cb>$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	c7 44 24 0c 01 95 10 	movl   $0xf0109501,0xc(%esp)$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	f0 $/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	f0 $/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	c7 44 24 04 86 03 00 	movl   $0x386,0x4(%esp)$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	00 $/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	e8 79 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01020d5	obj/kern/kernel.asm	/^f01020d5:	00 $/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01020db	obj/kern/kernel.asm	/^f01020db:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	e8 39 f6 ff ff       	call   f010171c <page_lookup>$/;"	l
f01020e3	obj/kern/kernel.asm	/^f01020e3:	85 c0                	test   %eax,%eax$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	74 24                	je     f010210b <mem_init+0x80f>$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	c7 44 24 0c 9c 8b 10 	movl   $0xf0108b9c,0xc(%esp)$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	f0 $/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	f0 $/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	c7 44 24 04 89 03 00 	movl   $0x389,0x4(%esp)$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	00 $/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	e8 35 df ff ff       	call   f0100040 <_panic>$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	00 $/;"	l
f0102113	obj/kern/kernel.asm	/^f0102113:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	00 $/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	e8 f1 f6 ff ff       	call   f010181d <page_insert>$/;"	l
f010212c	obj/kern/kernel.asm	/^f010212c:	85 c0                	test   %eax,%eax$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	78 24                	js     f0102154 <mem_init+0x858>$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	c7 44 24 0c d4 8b 10 	movl   $0xf0108bd4,0xc(%esp)$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	f0 $/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	f0 $/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	c7 44 24 04 8c 03 00 	movl   $0x38c,0x4(%esp)$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	00 $/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	e8 ec de ff ff       	call   f0100040 <_panic>$/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010215a	obj/kern/kernel.asm	/^f010215a:	e8 12 f4 ff ff       	call   f0101571 <page_free>$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	00 $/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	00 $/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102178	obj/kern/kernel.asm	/^f0102178:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	e8 9d f6 ff ff       	call   f010181d <page_insert>$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	85 c0                	test   %eax,%eax$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	74 24                	je     f01021a8 <mem_init+0x8ac>$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	c7 44 24 0c 04 8c 10 	movl   $0xf0108c04,0xc(%esp)$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	f0 $/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	f0 $/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	00 $/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	e8 98 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	8b 3d 78 06 30 f0    	mov    0xf0300678,%edi$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	a1 7c 06 30 f0       	mov    0xf030067c,%eax$/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	8b 17                	mov    (%edi),%edx$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	29 c1                	sub    %eax,%ecx$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	89 c8                	mov    %ecx,%eax$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	39 c2                	cmp    %eax,%edx$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	74 24                	je     f01021f3 <mem_init+0x8f7>$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	c7 44 24 0c 34 8c 10 	movl   $0xf0108c34,0xc(%esp)$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	f0 $/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	f0 $/;"	l
f01021df	obj/kern/kernel.asm	/^f01021df:	c7 44 24 04 91 03 00 	movl   $0x391,0x4(%esp)$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	00 $/;"	l
f01021e7	obj/kern/kernel.asm	/^f01021e7:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	e8 4d de ff ff       	call   f0100040 <_panic>$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	89 f8                	mov    %edi,%eax$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	e8 b6 ed ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	89 da                	mov    %ebx,%edx$/;"	l
f0102201	obj/kern/kernel.asm	/^f0102201:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	39 d0                	cmp    %edx,%eax$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	74 24                	je     f0102232 <mem_init+0x936>$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	c7 44 24 0c 5c 8c 10 	movl   $0xf0108c5c,0xc(%esp)$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	f0 $/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	f0 $/;"	l
f010221e	obj/kern/kernel.asm	/^f010221e:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	00 $/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	e8 0e de ff ff       	call   f0100040 <_panic>$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	74 24                	je     f010225d <mem_init+0x961>$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	c7 44 24 0c 53 95 10 	movl   $0xf0109553,0xc(%esp)$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	f0 $/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	f0 $/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	00 $/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	e8 e3 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	74 24                	je     f010228b <mem_init+0x98f>$/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	c7 44 24 0c 64 95 10 	movl   $0xf0109564,0xc(%esp)$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	f0 $/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	f0 $/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	00 $/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	e8 b5 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	00 $/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	00 $/;"	l
f010229b	obj/kern/kernel.asm	/^f010229b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	e8 76 f5 ff ff       	call   f010181d <page_insert>$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	85 c0                	test   %eax,%eax$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	74 24                	je     f01022cf <mem_init+0x9d3>$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	c7 44 24 0c 8c 8c 10 	movl   $0xf0108c8c,0xc(%esp)$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	f0 $/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	f0 $/;"	l
f01022bb	obj/kern/kernel.asm	/^f01022bb:	c7 44 24 04 97 03 00 	movl   $0x397,0x4(%esp)$/;"	l
f01022c2	obj/kern/kernel.asm	/^f01022c2:	00 $/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01022ca	obj/kern/kernel.asm	/^f01022ca:	e8 71 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	e8 d7 ec ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	89 f2                	mov    %esi,%edx$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	39 d0                	cmp    %edx,%eax$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	74 24                	je     f0102314 <mem_init+0xa18>$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	c7 44 24 0c c8 8c 10 	movl   $0xf0108cc8,0xc(%esp)$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	f0 $/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	f0 $/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	c7 44 24 04 98 03 00 	movl   $0x398,0x4(%esp)$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	00 $/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	e8 2c dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102319	obj/kern/kernel.asm	/^f0102319:	74 24                	je     f010233f <mem_init+0xa43>$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c7 44 24 0c 75 95 10 	movl   $0xf0109575,0xc(%esp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	f0 $/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	f0 $/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	c7 44 24 04 99 03 00 	movl   $0x399,0x4(%esp)$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	00 $/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	e8 01 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	e8 a2 f1 ff ff       	call   f01014ed <page_alloc>$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	85 c0                	test   %eax,%eax$/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	74 24                	je     f0102373 <mem_init+0xa77>$/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	c7 44 24 0c 01 95 10 	movl   $0xf0109501,0xc(%esp)$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	f0 $/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	f0 $/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
f0102366	obj/kern/kernel.asm	/^f0102366:	00 $/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	e8 cd dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	00 $/;"	l
f010237b	obj/kern/kernel.asm	/^f010237b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102382	obj/kern/kernel.asm	/^f0102382:	00 $/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	e8 89 f4 ff ff       	call   f010181d <page_insert>$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	85 c0                	test   %eax,%eax$/;"	l
f0102396	obj/kern/kernel.asm	/^f0102396:	74 24                	je     f01023bc <mem_init+0xac0>$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	c7 44 24 0c 8c 8c 10 	movl   $0xf0108c8c,0xc(%esp)$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	f0 $/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01023a7	obj/kern/kernel.asm	/^f01023a7:	f0 $/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	c7 44 24 04 9f 03 00 	movl   $0x39f,0x4(%esp)$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	00 $/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01023b7	obj/kern/kernel.asm	/^f01023b7:	e8 84 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	e8 ea eb ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	89 f2                	mov    %esi,%edx$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	39 d0                	cmp    %edx,%eax$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	74 24                	je     f0102401 <mem_init+0xb05>$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	c7 44 24 0c c8 8c 10 	movl   $0xf0108cc8,0xc(%esp)$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	f0 $/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01023ec	obj/kern/kernel.asm	/^f01023ec:	f0 $/;"	l
f01023ed	obj/kern/kernel.asm	/^f01023ed:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	00 $/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	e8 3f dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	74 24                	je     f010242c <mem_init+0xb30>$/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	c7 44 24 0c 75 95 10 	movl   $0xf0109575,0xc(%esp)$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	f0 $/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	f0 $/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	00 $/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	e8 14 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	e8 b5 f0 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	85 c0                	test   %eax,%eax$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	74 24                	je     f0102460 <mem_init+0xb64>$/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	c7 44 24 0c 01 95 10 	movl   $0xf0109501,0xc(%esp)$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	f0 $/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	f0 $/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	c7 44 24 04 a6 03 00 	movl   $0x3a6,0x4(%esp)$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	00 $/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	e8 e0 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	8b 15 78 06 30 f0    	mov    0xf0300678,%edx$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	8b 02                	mov    (%edx),%eax$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010246d	obj/kern/kernel.asm	/^f010246d:	89 c1                	mov    %eax,%ecx$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	3b 0d 74 06 30 f0    	cmp    0xf0300674,%ecx$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	72 20                	jb     f010249a <mem_init+0xb9e>$/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	f0 $/;"	l
f0102486	obj/kern/kernel.asm	/^f0102486:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	00 $/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	e8 a6 db ff ff       	call   f0100040 <_panic>$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	00 $/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	00 $/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	e8 6e f1 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f01024ba	obj/kern/kernel.asm	/^f01024ba:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	39 d0                	cmp    %edx,%eax$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	74 24                	je     f01024e8 <mem_init+0xbec>$/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	c7 44 24 0c f8 8c 10 	movl   $0xf0108cf8,0xc(%esp)$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	f0 $/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	f0 $/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	00 $/;"	l
f01024dc	obj/kern/kernel.asm	/^f01024dc:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	e8 58 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	00 $/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	00 $/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	e8 14 f3 ff ff       	call   f010181d <page_insert>$/;"	l
f0102509	obj/kern/kernel.asm	/^f0102509:	85 c0                	test   %eax,%eax$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	74 24                	je     f0102531 <mem_init+0xc35>$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	c7 44 24 0c 38 8d 10 	movl   $0xf0108d38,0xc(%esp)$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	f0 $/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	f0 $/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f0102524	obj/kern/kernel.asm	/^f0102524:	00 $/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	e8 0f db ff ff       	call   f0100040 <_panic>$/;"	l
f0102531	obj/kern/kernel.asm	/^f0102531:	8b 3d 78 06 30 f0    	mov    0xf0300678,%edi$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	89 f8                	mov    %edi,%eax$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	e8 72 ea ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	89 f2                	mov    %esi,%edx$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	39 d0                	cmp    %edx,%eax$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	74 24                	je     f0102579 <mem_init+0xc7d>$/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	c7 44 24 0c c8 8c 10 	movl   $0xf0108cc8,0xc(%esp)$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	f0 $/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	f0 $/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	c7 44 24 04 ae 03 00 	movl   $0x3ae,0x4(%esp)$/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	00 $/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	e8 c7 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102579	obj/kern/kernel.asm	/^f0102579:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010257e	obj/kern/kernel.asm	/^f010257e:	74 24                	je     f01025a4 <mem_init+0xca8>$/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	c7 44 24 0c 75 95 10 	movl   $0xf0109575,0xc(%esp)$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	f0 $/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	f0 $/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	00 $/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	e8 9c da ff ff       	call   f0100040 <_panic>$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	00 $/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01025b3	obj/kern/kernel.asm	/^f01025b3:	00 $/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	e8 6c f0 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01025bf	obj/kern/kernel.asm	/^f01025bf:	75 24                	jne    f01025e5 <mem_init+0xce9>$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	c7 44 24 0c 78 8d 10 	movl   $0xf0108d78,0xc(%esp)$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	f0 $/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	f0 $/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	00 $/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	e8 5b da ff ff       	call   f0100040 <_panic>$/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01025ea	obj/kern/kernel.asm	/^f01025ea:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	75 24                	jne    f0102613 <mem_init+0xd17>$/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	c7 44 24 0c 86 95 10 	movl   $0xf0109586,0xc(%esp)$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	f0 $/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	f0 $/;"	l
f01025ff	obj/kern/kernel.asm	/^f01025ff:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	00 $/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010260e	obj/kern/kernel.asm	/^f010260e:	e8 2d da ff ff       	call   f0100040 <_panic>$/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	00 $/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	00 $/;"	l
f0102623	obj/kern/kernel.asm	/^f0102623:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	e8 ee f1 ff ff       	call   f010181d <page_insert>$/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	85 c0                	test   %eax,%eax$/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	74 24                	je     f0102657 <mem_init+0xd5b>$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	c7 44 24 0c 8c 8c 10 	movl   $0xf0108c8c,0xc(%esp)$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	f0 $/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	f0 $/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	00 $/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	e8 e9 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010265e	obj/kern/kernel.asm	/^f010265e:	00 $/;"	l
f010265f	obj/kern/kernel.asm	/^f010265f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	00 $/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010266f	obj/kern/kernel.asm	/^f010266f:	e8 b4 ef ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	75 24                	jne    f010269d <mem_init+0xda1>$/;"	l
f0102679	obj/kern/kernel.asm	/^f0102679:	c7 44 24 0c ac 8d 10 	movl   $0xf0108dac,0xc(%esp)$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	f0 $/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	f0 $/;"	l
f0102689	obj/kern/kernel.asm	/^f0102689:	c7 44 24 04 b5 03 00 	movl   $0x3b5,0x4(%esp)$/;"	l
f0102690	obj/kern/kernel.asm	/^f0102690:	00 $/;"	l
f0102691	obj/kern/kernel.asm	/^f0102691:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	e8 a3 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	00 $/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	00 $/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	e8 6e ef ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01026bd	obj/kern/kernel.asm	/^f01026bd:	74 24                	je     f01026e3 <mem_init+0xde7>$/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	c7 44 24 0c e0 8d 10 	movl   $0xf0108de0,0xc(%esp)$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	f0 $/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01026ce	obj/kern/kernel.asm	/^f01026ce:	f0 $/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	00 $/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	e8 5d d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	00 $/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	00 $/;"	l
f01026f3	obj/kern/kernel.asm	/^f01026f3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	e8 16 f1 ff ff       	call   f010181d <page_insert>$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	85 c0                	test   %eax,%eax$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	78 24                	js     f010272f <mem_init+0xe33>$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	c7 44 24 0c 18 8e 10 	movl   $0xf0108e18,0xc(%esp)$/;"	l
f0102712	obj/kern/kernel.asm	/^f0102712:	f0 $/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	f0 $/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	00 $/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	e8 11 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	00 $/;"	l
f0102737	obj/kern/kernel.asm	/^f0102737:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	00 $/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	e8 cd f0 ff ff       	call   f010181d <page_insert>$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	85 c0                	test   %eax,%eax$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	74 24                	je     f0102778 <mem_init+0xe7c>$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	c7 44 24 0c 50 8e 10 	movl   $0xf0108e50,0xc(%esp)$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	f0 $/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	f0 $/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	c7 44 24 04 bc 03 00 	movl   $0x3bc,0x4(%esp)$/;"	l
f010276b	obj/kern/kernel.asm	/^f010276b:	00 $/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	e8 c8 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	00 $/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	00 $/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010278d	obj/kern/kernel.asm	/^f010278d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	e8 93 ee ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	74 24                	je     f01027be <mem_init+0xec2>$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	c7 44 24 0c e0 8d 10 	movl   $0xf0108de0,0xc(%esp)$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	f0 $/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	f0 $/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	00 $/;"	l
f01027b2	obj/kern/kernel.asm	/^f01027b2:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	e8 82 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	8b 3d 78 06 30 f0    	mov    0xf0300678,%edi$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	89 f8                	mov    %edi,%eax$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	e8 e5 e7 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	89 c1                	mov    %eax,%ecx$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01027d5	obj/kern/kernel.asm	/^f01027d5:	89 d8                	mov    %ebx,%eax$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	2b 05 7c 06 30 f0    	sub    0xf030067c,%eax$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01027e0	obj/kern/kernel.asm	/^f01027e0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	39 c1                	cmp    %eax,%ecx$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	74 24                	je     f010280b <mem_init+0xf0f>$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	c7 44 24 0c 8c 8e 10 	movl   $0xf0108e8c,0xc(%esp)$/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	f0 $/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	f0 $/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	00 $/;"	l
f01027ff	obj/kern/kernel.asm	/^f01027ff:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	e8 35 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	89 f8                	mov    %edi,%eax$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	e8 9e e7 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	74 24                	je     f0102840 <mem_init+0xf44>$/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	c7 44 24 0c b8 8e 10 	movl   $0xf0108eb8,0xc(%esp)$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	f0 $/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	f0 $/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	00 $/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	e8 00 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	74 24                	je     f010286b <mem_init+0xf6f>$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	c7 44 24 0c 9c 95 10 	movl   $0xf010959c,0xc(%esp)$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	f0 $/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	f0 $/;"	l
f0102857	obj/kern/kernel.asm	/^f0102857:	c7 44 24 04 c3 03 00 	movl   $0x3c3,0x4(%esp)$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	00 $/;"	l
f010285f	obj/kern/kernel.asm	/^f010285f:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	e8 d5 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010286b	obj/kern/kernel.asm	/^f010286b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102870	obj/kern/kernel.asm	/^f0102870:	74 24                	je     f0102896 <mem_init+0xf9a>$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	c7 44 24 0c ad 95 10 	movl   $0xf01095ad,0xc(%esp)$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	f0 $/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	f0 $/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	00 $/;"	l
f010288a	obj/kern/kernel.asm	/^f010288a:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	e8 aa d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010289d	obj/kern/kernel.asm	/^f010289d:	e8 4b ec ff ff       	call   f01014ed <page_alloc>$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	85 c0                	test   %eax,%eax$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	74 04                	je     f01028aa <mem_init+0xfae>$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	39 c6                	cmp    %eax,%esi$/;"	l
f01028a8	obj/kern/kernel.asm	/^f01028a8:	74 24                	je     f01028ce <mem_init+0xfd2>$/;"	l
f01028aa	obj/kern/kernel.asm	/^f01028aa:	c7 44 24 0c e8 8e 10 	movl   $0xf0108ee8,0xc(%esp)$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	f0 $/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01028b9	obj/kern/kernel.asm	/^f01028b9:	f0 $/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	00 $/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	e8 72 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	00 $/;"	l
f01028d6	obj/kern/kernel.asm	/^f01028d6:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	e8 e6 ee ff ff       	call   f01017c9 <page_remove>$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	8b 3d 78 06 30 f0    	mov    0xf0300678,%edi$/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01028ee	obj/kern/kernel.asm	/^f01028ee:	89 f8                	mov    %edi,%eax$/;"	l
f01028f0	obj/kern/kernel.asm	/^f01028f0:	e8 c0 e6 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	74 24                	je     f010291e <mem_init+0x1022>$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	c7 44 24 0c 0c 8f 10 	movl   $0xf0108f0c,0xc(%esp)$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	f0 $/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	f0 $/;"	l
f010290a	obj/kern/kernel.asm	/^f010290a:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	00 $/;"	l
f0102912	obj/kern/kernel.asm	/^f0102912:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	e8 22 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102923	obj/kern/kernel.asm	/^f0102923:	89 f8                	mov    %edi,%eax$/;"	l
f0102925	obj/kern/kernel.asm	/^f0102925:	e8 8b e6 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	89 da                	mov    %ebx,%edx$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	39 d0                	cmp    %edx,%eax$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	74 24                	je     f0102960 <mem_init+0x1064>$/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	c7 44 24 0c b8 8e 10 	movl   $0xf0108eb8,0xc(%esp)$/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	f0 $/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	f0 $/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	00 $/;"	l
f0102954	obj/kern/kernel.asm	/^f0102954:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	e8 e0 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	74 24                	je     f010298b <mem_init+0x108f>$/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	c7 44 24 0c 53 95 10 	movl   $0xf0109553,0xc(%esp)$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	f0 $/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102976	obj/kern/kernel.asm	/^f0102976:	f0 $/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	00 $/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	e8 b5 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	74 24                	je     f01029b6 <mem_init+0x10ba>$/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	c7 44 24 0c ad 95 10 	movl   $0xf01095ad,0xc(%esp)$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	f0 $/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	f0 $/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	c7 44 24 04 ce 03 00 	movl   $0x3ce,0x4(%esp)$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	00 $/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	e8 8a d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01029bd	obj/kern/kernel.asm	/^f01029bd:	00 $/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01029c5	obj/kern/kernel.asm	/^f01029c5:	00 $/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	e8 4b ee ff ff       	call   f010181d <page_insert>$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	85 c0                	test   %eax,%eax$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	74 24                	je     f01029fa <mem_init+0x10fe>$/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	c7 44 24 0c 30 8f 10 	movl   $0xf0108f30,0xc(%esp)$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	f0 $/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01029e5	obj/kern/kernel.asm	/^f01029e5:	f0 $/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	00 $/;"	l
f01029ee	obj/kern/kernel.asm	/^f01029ee:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	e8 46 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	75 24                	jne    f0102a25 <mem_init+0x1129>$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	c7 44 24 0c be 95 10 	movl   $0xf01095be,0xc(%esp)$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	f0 $/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	f0 $/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	00 $/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	e8 1b d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	74 24                	je     f0102a4e <mem_init+0x1152>$/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	c7 44 24 0c ca 95 10 	movl   $0xf01095ca,0xc(%esp)$/;"	l
f0102a31	obj/kern/kernel.asm	/^f0102a31:	f0 $/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	f0 $/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0102a41	obj/kern/kernel.asm	/^f0102a41:	00 $/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	e8 f2 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	00 $/;"	l
f0102a56	obj/kern/kernel.asm	/^f0102a56:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102a5b	obj/kern/kernel.asm	/^f0102a5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a5e	obj/kern/kernel.asm	/^f0102a5e:	e8 66 ed ff ff       	call   f01017c9 <page_remove>$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	8b 3d 78 06 30 f0    	mov    0xf0300678,%edi$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	89 f8                	mov    %edi,%eax$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	e8 40 e5 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	74 24                	je     f0102a9e <mem_init+0x11a2>$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	c7 44 24 0c 0c 8f 10 	movl   $0xf0108f0c,0xc(%esp)$/;"	l
f0102a81	obj/kern/kernel.asm	/^f0102a81:	f0 $/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	f0 $/;"	l
f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	00 $/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	e8 a2 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102aa3	obj/kern/kernel.asm	/^f0102aa3:	89 f8                	mov    %edi,%eax$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	e8 0b e5 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	74 24                	je     f0102ad3 <mem_init+0x11d7>$/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	c7 44 24 0c 68 8f 10 	movl   $0xf0108f68,0xc(%esp)$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	f0 $/;"	l
f0102ab7	obj/kern/kernel.asm	/^f0102ab7:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	f0 $/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	00 $/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	e8 6d d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ad3	obj/kern/kernel.asm	/^f0102ad3:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	74 24                	je     f0102afe <mem_init+0x1202>$/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	c7 44 24 0c df 95 10 	movl   $0xf01095df,0xc(%esp)$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	f0 $/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	f0 $/;"	l
f0102aea	obj/kern/kernel.asm	/^f0102aea:	c7 44 24 04 d9 03 00 	movl   $0x3d9,0x4(%esp)$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	00 $/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	e8 42 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	74 24                	je     f0102b29 <mem_init+0x122d>$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	c7 44 24 0c ad 95 10 	movl   $0xf01095ad,0xc(%esp)$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	f0 $/;"	l
f0102b0d	obj/kern/kernel.asm	/^f0102b0d:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	f0 $/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	00 $/;"	l
f0102b1d	obj/kern/kernel.asm	/^f0102b1d:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	e8 17 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b29	obj/kern/kernel.asm	/^f0102b29:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	e8 b8 e9 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	85 c0                	test   %eax,%eax$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	74 04                	je     f0102b3d <mem_init+0x1241>$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102b3b	obj/kern/kernel.asm	/^f0102b3b:	74 24                	je     f0102b61 <mem_init+0x1265>$/;"	l
f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	c7 44 24 0c 90 8f 10 	movl   $0xf0108f90,0xc(%esp)$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	f0 $/;"	l
f0102b45	obj/kern/kernel.asm	/^f0102b45:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	f0 $/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f0102b54	obj/kern/kernel.asm	/^f0102b54:	00 $/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	e8 df d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	e8 80 e9 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	85 c0                	test   %eax,%eax$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	74 24                	je     f0102b95 <mem_init+0x1299>$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	c7 44 24 0c 01 95 10 	movl   $0xf0109501,0xc(%esp)$/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	f0 $/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	f0 $/;"	l
f0102b81	obj/kern/kernel.asm	/^f0102b81:	c7 44 24 04 e0 03 00 	movl   $0x3e0,0x4(%esp)$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	00 $/;"	l
f0102b89	obj/kern/kernel.asm	/^f0102b89:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102b90	obj/kern/kernel.asm	/^f0102b90:	e8 ab d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102b9a	obj/kern/kernel.asm	/^f0102b9a:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	74 24                	je     f0102bd9 <mem_init+0x12dd>$/;"	l
f0102bb5	obj/kern/kernel.asm	/^f0102bb5:	c7 44 24 0c 34 8c 10 	movl   $0xf0108c34,0xc(%esp)$/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	f0 $/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	f0 $/;"	l
f0102bc5	obj/kern/kernel.asm	/^f0102bc5:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	00 $/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	e8 67 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	74 24                	je     f0102c0d <mem_init+0x1311>$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	c7 44 24 0c 64 95 10 	movl   $0xf0109564,0xc(%esp)$/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	f0 $/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	f0 $/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	00 $/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	e8 33 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	e8 53 e9 ff ff       	call   f0101571 <page_free>$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	00 $/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102c2d	obj/kern/kernel.asm	/^f0102c2d:	00 $/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	e8 ed e9 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102c3e	obj/kern/kernel.asm	/^f0102c3e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102c41	obj/kern/kernel.asm	/^f0102c41:	8b 15 78 06 30 f0    	mov    0xf0300678,%edx$/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	8b 7a 04             	mov    0x4(%edx),%edi$/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	8b 0d 74 06 30 f0    	mov    0xf0300674,%ecx$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	89 f8                	mov    %edi,%eax$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	39 c8                	cmp    %ecx,%eax$/;"	l
f0102c5d	obj/kern/kernel.asm	/^f0102c5d:	72 20                	jb     f0102c7f <mem_init+0x1383>$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	f0 $/;"	l
f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	c7 44 24 04 ec 03 00 	movl   $0x3ec,0x4(%esp)$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	00 $/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	e8 c1 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	81 ef fc ff ff 0f    	sub    $0xffffffc,%edi$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	74 24                	je     f0102cae <mem_init+0x13b2>$/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	c7 44 24 0c f0 95 10 	movl   $0xf01095f0,0xc(%esp)$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	f0 $/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	f0 $/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	00 $/;"	l
f0102ca2	obj/kern/kernel.asm	/^f0102ca2:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	e8 92 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102cbe	obj/kern/kernel.asm	/^f0102cbe:	2b 05 7c 06 30 f0    	sub    0xf030067c,%eax$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	89 c2                	mov    %eax,%edx$/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	77 20                	ja     f0102cf3 <mem_init+0x13f7>$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	f0 $/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	00 $/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	e8 4d d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	00 $/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	00 $/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	e8 d7 3d 00 00       	call   f0106ae7 <memset>$/;"	l
f0102d10	obj/kern/kernel.asm	/^f0102d10:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	e8 56 e8 ff ff       	call   f0101571 <page_free>$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	00 $/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	00 $/;"	l
f0102d2b	obj/kern/kernel.asm	/^f0102d2b:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	e8 f0 e8 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	89 fa                	mov    %edi,%edx$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	89 d0                	mov    %edx,%eax$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	3b 05 74 06 30 f0    	cmp    0xf0300674,%eax$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	72 20                	jb     f0102d73 <mem_init+0x1477>$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102d57	obj/kern/kernel.asm	/^f0102d57:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	f0 $/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	00 $/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	e8 cd d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102d79	obj/kern/kernel.asm	/^f0102d79:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	74 24                	je     f0102dab <mem_init+0x14af>$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	c7 44 24 0c 08 96 10 	movl   $0xf0109608,0xc(%esp)$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	f0 $/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	f0 $/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	00 $/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	e8 95 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	39 d0                	cmp    %edx,%eax$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	75 d0                	jne    f0102d82 <mem_init+0x1486>$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0102db7	obj/kern/kernel.asm	/^f0102db7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	89 0d 40 92 2b f0    	mov    %ecx,0xf02b9240$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	e8 9a e7 ff ff       	call   f0101571 <page_free>$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	e8 92 e7 ff ff       	call   f0101571 <page_free>$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	e8 8a e7 ff ff       	call   f0101571 <page_free>$/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	00 $/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102df6	obj/kern/kernel.asm	/^f0102df6:	e8 91 ea ff ff       	call   f010188c <mmio_map_region>$/;"	l
f0102dfb	obj/kern/kernel.asm	/^f0102dfb:	89 c3                	mov    %eax,%ebx$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	00 $/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	e8 7b ea ff ff       	call   f010188c <mmio_map_region>$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	89 c6                	mov    %eax,%esi$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102e19	obj/kern/kernel.asm	/^f0102e19:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	77 08                	ja     f0102e28 <mem_init+0x152c>$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	77 24                	ja     f0102e4c <mem_init+0x1550>$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	c7 44 24 0c b4 8f 10 	movl   $0xf0108fb4,0xc(%esp)$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	f0 $/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	f0 $/;"	l
f0102e38	obj/kern/kernel.asm	/^f0102e38:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	00 $/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	e8 f4 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	77 08                	ja     f0102e62 <mem_init+0x1566>$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102e60	obj/kern/kernel.asm	/^f0102e60:	77 24                	ja     f0102e86 <mem_init+0x158a>$/;"	l
f0102e62	obj/kern/kernel.asm	/^f0102e62:	c7 44 24 0c dc 8f 10 	movl   $0xf0108fdc,0xc(%esp)$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	f0 $/;"	l
f0102e6a	obj/kern/kernel.asm	/^f0102e6a:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	f0 $/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	00 $/;"	l
f0102e7a	obj/kern/kernel.asm	/^f0102e7a:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102e81	obj/kern/kernel.asm	/^f0102e81:	e8 ba d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	89 da                	mov    %ebx,%edx$/;"	l
f0102e88	obj/kern/kernel.asm	/^f0102e88:	09 f2                	or     %esi,%edx$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	74 24                	je     f0102eb6 <mem_init+0x15ba>$/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	c7 44 24 0c 04 90 10 	movl   $0xf0109004,0xc(%esp)$/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	f0 $/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	f0 $/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	00 $/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	e8 8a d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	39 c6                	cmp    %eax,%esi$/;"	l
f0102eb8	obj/kern/kernel.asm	/^f0102eb8:	73 24                	jae    f0102ede <mem_init+0x15e2>$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	c7 44 24 0c 1f 96 10 	movl   $0xf010961f,0xc(%esp)$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	f0 $/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	f0 $/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	00 $/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	e8 62 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	8b 3d 78 06 30 f0    	mov    0xf0300678,%edi$/;"	l
f0102ee4	obj/kern/kernel.asm	/^f0102ee4:	89 da                	mov    %ebx,%edx$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	89 f8                	mov    %edi,%eax$/;"	l
f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	e8 c8 e0 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	85 c0                	test   %eax,%eax$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	74 24                	je     f0102f15 <mem_init+0x1619>$/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	c7 44 24 0c 2c 90 10 	movl   $0xf010902c,0xc(%esp)$/;"	l
f0102ef8	obj/kern/kernel.asm	/^f0102ef8:	f0 $/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	f0 $/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f0102f08	obj/kern/kernel.asm	/^f0102f08:	00 $/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	e8 2b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	89 c2                	mov    %eax,%edx$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	89 f8                	mov    %edi,%eax$/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	e8 8e e0 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0102f27	obj/kern/kernel.asm	/^f0102f27:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	74 24                	je     f0102f52 <mem_init+0x1656>$/;"	l
f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	c7 44 24 0c 50 90 10 	movl   $0xf0109050,0xc(%esp)$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	f0 $/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102f3d	obj/kern/kernel.asm	/^f0102f3d:	f0 $/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	c7 44 24 04 0f 04 00 	movl   $0x40f,0x4(%esp)$/;"	l
f0102f45	obj/kern/kernel.asm	/^f0102f45:	00 $/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	e8 ee d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f52	obj/kern/kernel.asm	/^f0102f52:	89 f2                	mov    %esi,%edx$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	89 f8                	mov    %edi,%eax$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	e8 5a e0 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	85 c0                	test   %eax,%eax$/;"	l
f0102f5d	obj/kern/kernel.asm	/^f0102f5d:	74 24                	je     f0102f83 <mem_init+0x1687>$/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	c7 44 24 0c 80 90 10 	movl   $0xf0109080,0xc(%esp)$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	f0 $/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	f0 $/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)$/;"	l
f0102f76	obj/kern/kernel.asm	/^f0102f76:	00 $/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102f7e	obj/kern/kernel.asm	/^f0102f7e:	e8 bd d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	89 f8                	mov    %edi,%eax$/;"	l
f0102f8b	obj/kern/kernel.asm	/^f0102f8b:	e8 25 e0 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102f93	obj/kern/kernel.asm	/^f0102f93:	74 24                	je     f0102fb9 <mem_init+0x16bd>$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	c7 44 24 0c a4 90 10 	movl   $0xf01090a4,0xc(%esp)$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	f0 $/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	f0 $/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	00 $/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	e8 87 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	00 $/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102fc8	obj/kern/kernel.asm	/^f0102fc8:	e8 5b e6 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	75 24                	jne    f0102ff6 <mem_init+0x16fa>$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	c7 44 24 0c d0 90 10 	movl   $0xf01090d0,0xc(%esp)$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	f0 $/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	f0 $/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	00 $/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	e8 4a d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ff6	obj/kern/kernel.asm	/^f0102ff6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	00 $/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	e8 19 e6 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	74 24                	je     f0103038 <mem_init+0x173c>$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	c7 44 24 0c 14 91 10 	movl   $0xf0109114,0xc(%esp)$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	f0 $/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	f0 $/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	00 $/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	e8 08 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	00 $/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	e8 d7 e5 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0103051	obj/kern/kernel.asm	/^f0103051:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	00 $/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	e8 b5 e5 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	00 $/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103085	obj/kern/kernel.asm	/^f0103085:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	e8 96 e5 ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	c7 04 24 31 96 10 f0 	movl   $0xf0109631,(%esp)$/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	e8 1a 13 00 00       	call   f01043be <cprintf>$/;"	l
f01030a4	obj/kern/kernel.asm	/^f01030a4:	a1 74 06 30 f0       	mov    0xf0300674,%eax$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	8d 0c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%ecx$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	a1 7c 06 30 f0       	mov    0xf030067c,%eax$/;"	l
f01030bb	obj/kern/kernel.asm	/^f01030bb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	77 20                	ja     f01030e2 <mem_init+0x17e6>$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	f0 $/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	00 $/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	e8 5e cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	00 $/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01030fc	obj/kern/kernel.asm	/^f01030fc:	e8 c7 e5 ff ff       	call   f01016c8 <boot_map_region>$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	a1 48 92 2b f0       	mov    0xf02b9248,%eax$/;"	l
f0103106	obj/kern/kernel.asm	/^f0103106:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	77 20                	ja     f010312d <mem_init+0x1831>$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	f0 $/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	00 $/;"	l
f0103121	obj/kern/kernel.asm	/^f0103121:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	e8 13 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	00 $/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010313d	obj/kern/kernel.asm	/^f010313d:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0103147	obj/kern/kernel.asm	/^f0103147:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010314c	obj/kern/kernel.asm	/^f010314c:	e8 77 e5 ff ff       	call   f01016c8 <boot_map_region>$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	b8 00 c0 11 f0       	mov    $0xf011c000,%eax$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010315b	obj/kern/kernel.asm	/^f010315b:	77 20                	ja     f010317d <mem_init+0x1881>$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	f0 $/;"	l
f0103169	obj/kern/kernel.asm	/^f0103169:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
f0103170	obj/kern/kernel.asm	/^f0103170:	00 $/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	e8 c3 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	00 $/;"	l
f0103185	obj/kern/kernel.asm	/^f0103185:	c7 04 24 00 c0 11 00 	movl   $0x11c000,(%esp)$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	e8 28 e5 ff ff       	call   f01016c8 <boot_map_region>$/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	00 $/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	e8 05 e5 ff ff       	call   f01016c8 <boot_map_region>$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	bf 00 20 34 f0       	mov    $0xf0342000,%edi$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	bb 00 20 30 f0       	mov    $0xf0302000,%ebx$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	77 20                	ja     f01031fa <mem_init+0x18fe>$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01031e5	obj/kern/kernel.asm	/^f01031e5:	f0 $/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	c7 44 24 04 0d 01 00 	movl   $0x10d,0x4(%esp)$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	00 $/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	e8 46 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	00 $/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	89 f2                	mov    %esi,%edx$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	e8 ac e4 ff ff       	call   f01016c8 <boot_map_region>$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103228	obj/kern/kernel.asm	/^f0103228:	39 fb                	cmp    %edi,%ebx$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	75 a6                	jne    f01031d2 <mem_init+0x18d6>$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	8b 3d 78 06 30 f0    	mov    0xf0300678,%edi$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	a1 74 06 30 f0       	mov    0xf0300674,%eax$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103246	obj/kern/kernel.asm	/^f0103246:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103249	obj/kern/kernel.asm	/^f0103249:	8b 35 7c 06 30 f0    	mov    0xf030067c,%esi$/;"	l
f010324f	obj/kern/kernel.asm	/^f010324f:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0103252	obj/kern/kernel.asm	/^f0103252:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	eb 6a                	jmp    f01032cc <mem_init+0x19d0>$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	89 f8                	mov    %edi,%eax$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	e8 46 dd ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	77 20                	ja     f0103298 <mem_init+0x199c>$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	f0 $/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	00 $/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	e8 a8 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	8d 14 0b             	lea    (%ebx,%ecx,1),%edx$/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	39 d0                	cmp    %edx,%eax$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	74 24                	je     f01032c6 <mem_init+0x19ca>$/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	c7 44 24 0c 48 91 10 	movl   $0xf0109148,0xc(%esp)$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	f0 $/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	f0 $/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	00 $/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	e8 7a cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f01032cf	obj/kern/kernel.asm	/^f01032cf:	77 91                	ja     f0103262 <mem_init+0x1966>$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	8b 1d 48 92 2b f0    	mov    0xf02b9248,%ebx$/;"	l
f01032d7	obj/kern/kernel.asm	/^f01032d7:	89 de                	mov    %ebx,%esi$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	89 f8                	mov    %edi,%eax$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	e8 d0 dc ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	77 20                	ja     f010330d <mem_init+0x1a11>$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01032f8	obj/kern/kernel.asm	/^f01032f8:	f0 $/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	00 $/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	e8 33 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	81 c6 00 00 40 21    	add    $0x21400000,%esi$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f010331b	obj/kern/kernel.asm	/^f010331b:	39 d0                	cmp    %edx,%eax$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	74 24                	je     f0103343 <mem_init+0x1a47>$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	c7 44 24 0c 7c 91 10 	movl   $0xf010917c,0xc(%esp)$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	f0 $/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	f0 $/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	00 $/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010333e	obj/kern/kernel.asm	/^f010333e:	e8 fd cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	0f 85 a8 05 00 00    	jne    f01038fd <mem_init+0x2001>$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103360	obj/kern/kernel.asm	/^f0103360:	eb 3b                	jmp    f010339d <mem_init+0x1aa1>$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0103368	obj/kern/kernel.asm	/^f0103368:	89 f8                	mov    %edi,%eax$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	e8 46 dc ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	74 24                	je     f0103397 <mem_init+0x1a9b>$/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	c7 44 24 0c b0 91 10 	movl   $0xf01091b0,0xc(%esp)$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	f0 $/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	f0 $/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	c7 44 24 04 34 03 00 	movl   $0x334,0x4(%esp)$/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	00 $/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103392	obj/kern/kernel.asm	/^f0103392:	e8 a9 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	39 f3                	cmp    %esi,%ebx$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	72 c1                	jb     f0103362 <mem_init+0x1a66>$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	c7 45 d0 00 20 30 f0 	movl   $0xf0302000,-0x30(%ebp)$/;"	l
f01033a8	obj/kern/kernel.asm	/^f01033a8:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	b8 00 20 30 f0       	mov    $0xf0302000,%eax$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	89 f2                	mov    %esi,%edx$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	89 f8                	mov    %edi,%eax$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	e8 e2 db ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	77 20                	ja     f01033fe <mem_init+0x1b02>$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	f0 $/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f01033f1	obj/kern/kernel.asm	/^f01033f1:	00 $/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	e8 42 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	89 f3                	mov    %esi,%ebx$/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0103403	obj/kern/kernel.asm	/^f0103403:	03 4d d4             	add    -0x2c(%ebp),%ecx$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0103409	obj/kern/kernel.asm	/^f0103409:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	39 c2                	cmp    %eax,%edx$/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	74 24                	je     f0103437 <mem_init+0x1b3b>$/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	c7 44 24 0c d8 91 10 	movl   $0xf01091d8,0xc(%esp)$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	f0 $/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	f0 $/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f010342a	obj/kern/kernel.asm	/^f010342a:	00 $/;"	l
f010342b	obj/kern/kernel.asm	/^f010342b:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	e8 09 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	3b 5d cc             	cmp    -0x34(%ebp),%ebx$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	0f 85 a9 04 00 00    	jne    f01038ef <mem_init+0x1ff3>$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	89 da                	mov    %ebx,%edx$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	89 f8                	mov    %edi,%eax$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	e8 60 db ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	74 24                	je     f010347e <mem_init+0x1b82>$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	c7 44 24 0c 20 92 10 	movl   $0xf0109220,0xc(%esp)$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	f0 $/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	f0 $/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	c7 44 24 04 3e 03 00 	movl   $0x33e,0x4(%esp)$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	00 $/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	e8 c2 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	39 de                	cmp    %ebx,%esi$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	75 c4                	jne    f010344c <mem_init+0x1b50>$/;"	l
f0103488	obj/kern/kernel.asm	/^f0103488:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	81 45 d4 00 80 01 00 	addl   $0x18000,-0x2c(%ebp)$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	0f 85 19 ff ff ff    	jne    f01033c1 <mem_init+0x1ac5>$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	e9 c2 00 00 00       	jmp    f0103574 <mem_init+0x1c78>$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01034b8	obj/kern/kernel.asm	/^f01034b8:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	77 2e                	ja     f01034eb <mem_init+0x1bef>$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	0f 85 aa 00 00 00    	jne    f0103571 <mem_init+0x1c75>$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	c7 44 24 0c 4a 96 10 	movl   $0xf010964a,0xc(%esp)$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	f0 $/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	f0 $/;"	l
f01034d7	obj/kern/kernel.asm	/^f01034d7:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	00 $/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	e8 55 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	76 55                	jbe    f0103547 <mem_init+0x1c4b>$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	75 24                	jne    f010351e <mem_init+0x1c22>$/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	c7 44 24 0c 4a 96 10 	movl   $0xf010964a,0xc(%esp)$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	f0 $/;"	l
f0103502	obj/kern/kernel.asm	/^f0103502:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	f0 $/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	c7 44 24 04 4d 03 00 	movl   $0x34d,0x4(%esp)$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	00 $/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	e8 22 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	75 4e                	jne    f0103571 <mem_init+0x1c75>$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	c7 44 24 0c 5b 96 10 	movl   $0xf010965b,0xc(%esp)$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	f0 $/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	f0 $/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	c7 44 24 04 4e 03 00 	movl   $0x34e,0x4(%esp)$/;"	l
f010353a	obj/kern/kernel.asm	/^f010353a:	00 $/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	e8 f9 ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	74 24                	je     f0103571 <mem_init+0x1c75>$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	c7 44 24 0c 6c 96 10 	movl   $0xf010966c,0xc(%esp)$/;"	l
f0103554	obj/kern/kernel.asm	/^f0103554:	f0 $/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	f0 $/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	c7 44 24 04 50 03 00 	movl   $0x350,0x4(%esp)$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	00 $/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	e8 cf ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103571	obj/kern/kernel.asm	/^f0103571:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	0f 85 33 ff ff ff    	jne    f01034b2 <mem_init+0x1bb6>$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	c7 04 24 44 92 10 f0 	movl   $0xf0109244,(%esp)$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	e8 33 0e 00 00       	call   f01043be <cprintf>$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	77 20                	ja     f01035b7 <mem_init+0x1cbb>$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	f0 $/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	c7 44 24 04 e6 00 00 	movl   $0xe6,0x4(%esp)$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	00 $/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	e8 89 ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01035bc	obj/kern/kernel.asm	/^f01035bc:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	e8 f6 da ff ff       	call   f01010bf <check_page_free_list>$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	e8 0a df ff ff       	call   f01014ed <page_alloc>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	89 c3                	mov    %eax,%ebx$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	85 c0                	test   %eax,%eax$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	75 24                	jne    f010360d <mem_init+0x1d11>$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	c7 44 24 0c 56 94 10 	movl   $0xf0109456,0xc(%esp)$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	f0 $/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	f0 $/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	c7 44 24 04 29 04 00 	movl   $0x429,0x4(%esp)$/;"	l
f0103600	obj/kern/kernel.asm	/^f0103600:	00 $/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	e8 33 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103614	obj/kern/kernel.asm	/^f0103614:	e8 d4 de ff ff       	call   f01014ed <page_alloc>$/;"	l
f0103619	obj/kern/kernel.asm	/^f0103619:	89 c7                	mov    %eax,%edi$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	85 c0                	test   %eax,%eax$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	75 24                	jne    f0103643 <mem_init+0x1d47>$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	c7 44 24 0c 6c 94 10 	movl   $0xf010946c,0xc(%esp)$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	f0 $/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	f0 $/;"	l
f010362f	obj/kern/kernel.asm	/^f010362f:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f0103636	obj/kern/kernel.asm	/^f0103636:	00 $/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	e8 fd c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	e8 9e de ff ff       	call   f01014ed <page_alloc>$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	89 c6                	mov    %eax,%esi$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	85 c0                	test   %eax,%eax$/;"	l
f0103653	obj/kern/kernel.asm	/^f0103653:	75 24                	jne    f0103679 <mem_init+0x1d7d>$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	c7 44 24 0c 82 94 10 	movl   $0xf0109482,0xc(%esp)$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	f0 $/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	f0 $/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	00 $/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	e8 c7 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	e8 f0 de ff ff       	call   f0101571 <page_free>$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	89 f8                	mov    %edi,%eax$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	e8 e8 d8 ff ff       	call   f0100f70 <page2kva>$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010368f	obj/kern/kernel.asm	/^f010368f:	00 $/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	00 $/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	e8 47 34 00 00       	call   f0106ae7 <memset>$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	89 f0                	mov    %esi,%eax$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	e8 c9 d8 ff ff       	call   f0100f70 <page2kva>$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	00 $/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	00 $/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	e8 28 34 00 00       	call   f0106ae7 <memset>$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	00 $/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	00 $/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	e8 3d e1 ff ff       	call   f010181d <page_insert>$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	74 24                	je     f010370b <mem_init+0x1e0f>$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	c7 44 24 0c 53 95 10 	movl   $0xf0109553,0xc(%esp)$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	f0 $/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	f0 $/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	c7 44 24 04 30 04 00 	movl   $0x430,0x4(%esp)$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	00 $/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	e8 35 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	01 01 01 $/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	74 24                	je     f010373b <mem_init+0x1e3f>$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	c7 44 24 0c 64 92 10 	movl   $0xf0109264,0xc(%esp)$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	f0 $/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	f0 $/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	c7 44 24 04 31 04 00 	movl   $0x431,0x4(%esp)$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	00 $/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	e8 05 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	00 $/;"	l
f0103743	obj/kern/kernel.asm	/^f0103743:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	00 $/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010374f	obj/kern/kernel.asm	/^f010374f:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	e8 c1 e0 ff ff       	call   f010181d <page_insert>$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	02 02 02 $/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	74 24                	je     f010378c <mem_init+0x1e90>$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	c7 44 24 0c 88 92 10 	movl   $0xf0109288,0xc(%esp)$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	f0 $/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	f0 $/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	c7 44 24 04 33 04 00 	movl   $0x433,0x4(%esp)$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	00 $/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	e8 b4 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	74 24                	je     f01037b7 <mem_init+0x1ebb>$/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	c7 44 24 0c 75 95 10 	movl   $0xf0109575,0xc(%esp)$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	f0 $/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	f0 $/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	c7 44 24 04 34 04 00 	movl   $0x434,0x4(%esp)$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	00 $/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	e8 89 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	74 24                	je     f01037e2 <mem_init+0x1ee6>$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	c7 44 24 0c df 95 10 	movl   $0xf01095df,0xc(%esp)$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	f0 $/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	f0 $/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	c7 44 24 04 35 04 00 	movl   $0x435,0x4(%esp)$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	00 $/;"	l
f01037d6	obj/kern/kernel.asm	/^f01037d6:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	e8 5e c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	03 03 03 $/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	89 f0                	mov    %esi,%eax$/;"	l
f01037ee	obj/kern/kernel.asm	/^f01037ee:	e8 7d d7 ff ff       	call   f0100f70 <page2kva>$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	81 38 03 03 03 03    	cmpl   $0x3030303,(%eax)$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	74 24                	je     f010381f <mem_init+0x1f23>$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	c7 44 24 0c ac 92 10 	movl   $0xf01092ac,0xc(%esp)$/;"	l
f0103802	obj/kern/kernel.asm	/^f0103802:	f0 $/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	f0 $/;"	l
f010380b	obj/kern/kernel.asm	/^f010380b:	c7 44 24 04 37 04 00 	movl   $0x437,0x4(%esp)$/;"	l
f0103812	obj/kern/kernel.asm	/^f0103812:	00 $/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	e8 21 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103826	obj/kern/kernel.asm	/^f0103826:	00 $/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	e8 95 df ff ff       	call   f01017c9 <page_remove>$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	74 24                	je     f010385f <mem_init+0x1f63>$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	c7 44 24 0c ad 95 10 	movl   $0xf01095ad,0xc(%esp)$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	f0 $/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	f0 $/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	c7 44 24 04 39 04 00 	movl   $0x439,0x4(%esp)$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	00 $/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	e8 e1 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	89 da                	mov    %ebx,%edx$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	39 d1                	cmp    %edx,%ecx$/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	74 24                	je     f01038a2 <mem_init+0x1fa6>$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	c7 44 24 0c 34 8c 10 	movl   $0xf0108c34,0xc(%esp)$/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	f0 $/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	f0 $/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	c7 44 24 04 3c 04 00 	movl   $0x43c,0x4(%esp)$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	00 $/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	e8 9e c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01038ad	obj/kern/kernel.asm	/^f01038ad:	74 24                	je     f01038d3 <mem_init+0x1fd7>$/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	c7 44 24 0c 64 95 10 	movl   $0xf0109564,0xc(%esp)$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	f0 $/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	f0 $/;"	l
f01038bf	obj/kern/kernel.asm	/^f01038bf:	c7 44 24 04 3e 04 00 	movl   $0x43e,0x4(%esp)$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	00 $/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	c7 04 24 47 93 10 f0 	movl   $0xf0109347,(%esp)$/;"	l
f01038ce	obj/kern/kernel.asm	/^f01038ce:	e8 6d c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	e8 90 dc ff ff       	call   f0101571 <page_free>$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	c7 04 24 d8 92 10 f0 	movl   $0xf01092d8,(%esp)$/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	e8 d1 0a 00 00       	call   f01043be <cprintf>$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	eb 1c                	jmp    f010390b <mem_init+0x200f>$/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	89 da                	mov    %ebx,%edx$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	89 f8                	mov    %edi,%eax$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	e8 bd d6 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	e9 0c fb ff ff       	jmp    f0103409 <mem_init+0x1b0d>$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	89 da                	mov    %ebx,%edx$/;"	l
f01038ff	obj/kern/kernel.asm	/^f01038ff:	89 f8                	mov    %edi,%eax$/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	e8 af d6 ff ff       	call   f0100fb5 <check_va2pa>$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	e9 0d fa ff ff       	jmp    f0103318 <mem_init+0x1a1c>$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	5b                   	pop    %ebx$/;"	l
f010390f	obj/kern/kernel.asm	/^f010390f:	5e                   	pop    %esi$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	5f                   	pop    %edi$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	5d                   	pop    %ebp$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	c3                   	ret    $/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913 <user_mem_check>:$/;"	l
f0103913	obj/kern/kernel.asm	/^f0103913:	55                   	push   %ebp$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	89 e5                	mov    %esp,%ebp$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	57                   	push   %edi$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	56                   	push   %esi$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	53                   	push   %ebx$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	00 $/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103933	obj/kern/kernel.asm	/^f0103933:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010393a	obj/kern/kernel.asm	/^f010393a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	e8 e6 dc ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	85 c0                	test   %eax,%eax$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	74 1f                	je     f0103965 <user_mem_check+0x52>$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	83 ce 01             	or     $0x1,%esi$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	89 f1                	mov    %esi,%ecx$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	23 08                	and    (%eax),%ecx$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	89 c8                	mov    %ecx,%eax$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103955	obj/kern/kernel.asm	/^f0103955:	8d 99 ff 0f 00 00    	lea    0xfff(%ecx),%ebx$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	39 c6                	cmp    %eax,%esi$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	74 3f                	je     f01039a4 <user_mem_check+0x91>$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	a3 3c 92 2b f0       	mov    %eax,0xf02b923c$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	eb 44                	jmp    f01039b8 <user_mem_check+0xa5>$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	00 $/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103980	obj/kern/kernel.asm	/^f0103980:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103986	obj/kern/kernel.asm	/^f0103986:	e8 9d dc ff ff       	call   f0101628 <pgdir_walk>$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	85 c0                	test   %eax,%eax$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	74 08                	je     f0103997 <user_mem_check+0x84>$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	89 f2                	mov    %esi,%edx$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	23 10                	and    (%eax),%edx$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	39 d6                	cmp    %edx,%esi$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	74 19                	je     f01039b0 <user_mem_check+0x9d>$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	89 1d 3c 92 2b f0    	mov    %ebx,0xf02b923c$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	eb 14                	jmp    f01039b8 <user_mem_check+0xa5>$/;"	l
f01039a4	obj/kern/kernel.asm	/^f01039a4:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	72 cb                	jb     f0103974 <user_mem_check+0x61>$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	eb 08                	jmp    f01039b8 <user_mem_check+0xa5>$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	eb ec                	jmp    f01039a4 <user_mem_check+0x91>$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	5b                   	pop    %ebx$/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	5e                   	pop    %esi$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	5f                   	pop    %edi$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	5d                   	pop    %ebp$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	c3                   	ret    $/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0 <user_mem_assert>:$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	55                   	push   %ebp$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	53                   	push   %ebx$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	83 c8 04             	or     $0x4,%eax$/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	e8 29 ff ff ff       	call   f0103913 <user_mem_check>$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	85 c0                	test   %eax,%eax$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	79 24                	jns    f0103a12 <user_mem_assert+0x52>$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	a1 3c 92 2b f0       	mov    0xf02b923c,%eax$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01039fa	obj/kern/kernel.asm	/^f01039fa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	c7 04 24 04 93 10 f0 	movl   $0xf0109304,(%esp)$/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	e8 b4 09 00 00       	call   f01043be <cprintf>$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	e8 b1 06 00 00       	call   f01040c3 <env_destroy>$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	5b                   	pop    %ebx$/;"	l
f0103a16	obj/kern/kernel.asm	/^f0103a16:	5d                   	pop    %ebp$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	c3                   	ret    $/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18 <region_alloc>:$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	55                   	push   %ebp$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	57                   	push   %edi$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	56                   	push   %esi$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	53                   	push   %ebx$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	89 c6                	mov    %eax,%esi$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	89 d3                	mov    %edx,%ebx$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	8d 84 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%eax$/;"	l
f0103a32	obj/kern/kernel.asm	/^f0103a32:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	3d 00 00 c0 ee       	cmp    $0xeec00000,%eax$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	77 08                	ja     f0103a49 <region_alloc+0x31>$/;"	l
f0103a41	obj/kern/kernel.asm	/^f0103a41:	8d 7d e4             	lea    -0x1c(%ebp),%edi$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	e9 a0 00 00 00       	jmp    f0103ae9 <region_alloc+0xd1>$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	c7 44 24 08 7c 96 10 	movl   $0xf010967c,0x8(%esp)$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	f0 $/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)$/;"	l
f0103a58	obj/kern/kernel.asm	/^f0103a58:	00 $/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	e8 db c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0103a69	obj/kern/kernel.asm	/^f0103a69:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	e8 a4 dc ff ff       	call   f010171c <page_lookup>$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	85 c0                	test   %eax,%eax$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	75 67                	jne    f0103ae3 <region_alloc+0xcb>$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	e8 65 da ff ff       	call   f01014ed <page_alloc>$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	85 c0                	test   %eax,%eax$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	75 1c                	jne    f0103aa8 <region_alloc+0x90>$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	c7 44 24 08 bc 96 10 	movl   $0xf01096bc,0x8(%esp)$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	f0 $/;"	l
f0103a94	obj/kern/kernel.asm	/^f0103a94:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	00 $/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	e8 98 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	00 $/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	e8 5a dd ff ff       	call   f010181d <page_insert>$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	85 c0                	test   %eax,%eax$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	79 1c                	jns    f0103ae3 <region_alloc+0xcb>$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	c7 44 24 08 e0 96 10 	movl   $0xf01096e0,0x8(%esp)$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	f0 $/;"	l
f0103acf	obj/kern/kernel.asm	/^f0103acf:	c7 44 24 04 33 01 00 	movl   $0x133,0x4(%esp)$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	00 $/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	e8 5d c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	0f 82 73 ff ff ff    	jb     f0103a65 <region_alloc+0x4d>$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	5b                   	pop    %ebx$/;"	l
f0103af6	obj/kern/kernel.asm	/^f0103af6:	5e                   	pop    %esi$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	5f                   	pop    %edi$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	5d                   	pop    %ebp$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	c3                   	ret    $/;"	l
f0103afa	obj/kern/kernel.asm	/^f0103afa <envid2env>:$/;"	l
f0103afa	obj/kern/kernel.asm	/^f0103afa:	55                   	push   %ebp$/;"	l
f0103afb	obj/kern/kernel.asm	/^f0103afb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	56                   	push   %esi$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	53                   	push   %ebx$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	85 c0                	test   %eax,%eax$/;"	l
f0103b07	obj/kern/kernel.asm	/^f0103b07:	75 1a                	jne    f0103b23 <envid2env+0x29>$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	e8 2e 36 00 00       	call   f010713c <cpunum>$/;"	l
f0103b0e	obj/kern/kernel.asm	/^f0103b0e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	eb 70                	jmp    f0103b93 <envid2env+0x99>$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	89 c3                	mov    %eax,%ebx$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	03 1d 48 92 2b f0    	add    0xf02b9248,%ebx$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	74 05                	je     f0103b3f <envid2env+0x45>$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	74 10                	je     f0103b4f <envid2env+0x55>$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103b42	obj/kern/kernel.asm	/^f0103b42:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	eb 44                	jmp    f0103b93 <envid2env+0x99>$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	84 d2                	test   %dl,%dl$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	74 36                	je     f0103b89 <envid2env+0x8f>$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	e8 e4 35 00 00       	call   f010713c <cpunum>$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	39 98 28 10 30 f0    	cmp    %ebx,-0xfcfefd8(%eax)$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	74 26                	je     f0103b89 <envid2env+0x8f>$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	e8 d1 35 00 00       	call   f010713c <cpunum>$/;"	l
f0103b6b	obj/kern/kernel.asm	/^f0103b6b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	74 10                	je     f0103b89 <envid2env+0x8f>$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	eb 0a                	jmp    f0103b93 <envid2env+0x99>$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b93	obj/kern/kernel.asm	/^f0103b93:	5b                   	pop    %ebx$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	5e                   	pop    %esi$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	5d                   	pop    %ebp$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	c3                   	ret    $/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97 <env_init_percpu>:$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	55                   	push   %ebp$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b9a	obj/kern/kernel.asm	/^f0103b9a:	b8 20 63 12 f0       	mov    $0xf0126320,%eax$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	8e e8                	mov    %eax,%gs$/;"	l
f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	8e e0                	mov    %eax,%fs$/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	b0 10                	mov    $0x10,%al$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	8e c0                	mov    %eax,%es$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	8e d8                	mov    %eax,%ds$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	8e d0                	mov    %eax,%ss$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	ea ba 3b 10 f0 08 00 	ljmp   $0x8,$0xf0103bba$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	b0 00                	mov    $0x0,%al$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	0f 00 d0             	lldt   %ax$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	5d                   	pop    %ebp$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	c3                   	ret    $/;"	l
f0103bc1	obj/kern/kernel.asm	/^f0103bc1 <env_init>:$/;"	l
f0103bc1	obj/kern/kernel.asm	/^f0103bc1:	55                   	push   %ebp$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bc4	obj/kern/kernel.asm	/^f0103bc4:	56                   	push   %esi$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	53                   	push   %ebx$/;"	l
f0103bc6	obj/kern/kernel.asm	/^f0103bc6:	8b 35 48 92 2b f0    	mov    0xf02b9248,%esi$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	8b 0d 4c 92 2b f0    	mov    0xf02b924c,%ecx$/;"	l
f0103bd2	obj/kern/kernel.asm	/^f0103bd2:	8d 86 00 f0 01 00    	lea    0x1f000(%esi),%eax$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	ba 01 04 00 00       	mov    $0x401,%edx$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	89 c3                	mov    %eax,%ebx$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103bf0	obj/kern/kernel.asm	/^f0103bf0:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	74 04                	je     f0103bfc <env_init+0x3b>$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	eb e1                	jmp    f0103bdd <env_init+0x1c>$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	89 35 4c 92 2b f0    	mov    %esi,0xf02b924c$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	e8 90 ff ff ff       	call   f0103b97 <env_init_percpu>$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	5b                   	pop    %ebx$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	5e                   	pop    %esi$/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	5d                   	pop    %ebp$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	c3                   	ret    $/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b <env_alloc>:$/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b:	55                   	push   %ebp$/;"	l
f0103c0c	obj/kern/kernel.asm	/^f0103c0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c0e	obj/kern/kernel.asm	/^f0103c0e:	53                   	push   %ebx$/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	8b 1d 4c 92 2b f0    	mov    0xf02b924c,%ebx$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	85 db                	test   %ebx,%ebx$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	0f 84 57 01 00 00    	je     f0103d77 <env_alloc+0x16c>$/;"	l
f0103c20	obj/kern/kernel.asm	/^f0103c20:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	e8 c1 d8 ff ff       	call   f01014ed <page_alloc>$/;"	l
f0103c2c	obj/kern/kernel.asm	/^f0103c2c:	85 c0                	test   %eax,%eax$/;"	l
f0103c2e	obj/kern/kernel.asm	/^f0103c2e:	0f 84 4a 01 00 00    	je     f0103d7e <env_alloc+0x173>$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	89 c2                	mov    %eax,%edx$/;"	l
f0103c36	obj/kern/kernel.asm	/^f0103c36:	2b 15 7c 06 30 f0    	sub    0xf030067c,%edx$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103c42	obj/kern/kernel.asm	/^f0103c42:	89 d1                	mov    %edx,%ecx$/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	3b 0d 74 06 30 f0    	cmp    0xf0300674,%ecx$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	72 20                	jb     f0103c6f <env_alloc+0x64>$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	f0 $/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103c62	obj/kern/kernel.asm	/^f0103c62:	00 $/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	e8 d1 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	b8 ec 0e 00 00       	mov    $0xeec,%eax$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	8b 15 78 06 30 f0    	mov    0xf0300678,%edx$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f0103c91	obj/kern/kernel.asm	/^f0103c91:	83 c0 04             	add    $0x4,%eax$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	75 e7                	jne    f0103c82 <env_alloc+0x77>$/;"	l
f0103c9b	obj/kern/kernel.asm	/^f0103c9b:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	77 20                	ja     f0103cc5 <env_alloc+0xba>$/;"	l
f0103ca5	obj/kern/kernel.asm	/^f0103ca5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	f0 $/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	c7 44 24 04 c5 00 00 	movl   $0xc5,0x4(%esp)$/;"	l
f0103cb8	obj/kern/kernel.asm	/^f0103cb8:	00 $/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103cc0	obj/kern/kernel.asm	/^f0103cc0:	e8 7b c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103ce6	obj/kern/kernel.asm	/^f0103ce6:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	89 da                	mov    %ebx,%edx$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	2b 15 48 92 2b f0    	sub    0xf02b9248,%edx$/;"	l
f0103cf1	obj/kern/kernel.asm	/^f0103cf1:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	09 d0                	or     %edx,%eax$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	00 $/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	00 $/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	e8 b5 2d 00 00       	call   f0106ae7 <memset>$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	c7 43 38 00 02 00 00 	movl   $0x200,0x38(%ebx)$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	a3 4c 92 2b f0       	mov    %eax,0xf02b924c$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	eb 0c                	jmp    f0103d83 <env_alloc+0x178>$/;"	l
f0103d77	obj/kern/kernel.asm	/^f0103d77:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	eb 05                	jmp    f0103d83 <env_alloc+0x178>$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	5b                   	pop    %ebx$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	5d                   	pop    %ebp$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	c3                   	ret    $/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89 <env_create>:$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	55                   	push   %ebp$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	57                   	push   %edi$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	56                   	push   %esi$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	53                   	push   %ebx$/;"	l
f0103d8f	obj/kern/kernel.asm	/^f0103d8f:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	00 $/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	e8 63 fe ff ff       	call   f0103c0b <env_alloc>$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	85 c0                	test   %eax,%eax$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	78 0a                	js     f0103db6 <env_create+0x2d>$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	85 c0                	test   %eax,%eax$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	75 1c                	jne    f0103dd2 <env_create+0x49>$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	c7 44 24 08 04 97 10 	movl   $0xf0109704,0x8(%esp)$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	f0 $/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	c7 44 24 04 9a 01 00 	movl   $0x19a,0x4(%esp)$/;"	l
f0103dc5	obj/kern/kernel.asm	/^f0103dc5:	00 $/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd:	e8 6e c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	77 20                	ja     f0103e05 <env_create+0x7c>$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	f0 $/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	c7 44 24 04 70 01 00 	movl   $0x170,0x4(%esp)$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	00 $/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	e8 3b c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	74 24                	je     f0103e39 <env_create+0xb0>$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	c7 44 24 0c 41 97 10 	movl   $0xf0109741,0xc(%esp)$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	f0 $/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	f0 $/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	c7 44 24 04 74 01 00 	movl   $0x174,0x4(%esp)$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	00 $/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	e8 07 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	89 fb                	mov    %edi,%ebx$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	01 de                	add    %ebx,%esi$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	eb 79                	jmp    f0103ec2 <env_create+0x139>$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	75 71                	jne    f0103ebf <env_create+0x136>$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	39 4b 10             	cmp    %ecx,0x10(%ebx)$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	76 24                	jbe    f0103e7a <env_create+0xf1>$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	c7 44 24 0c 5f 97 10 	movl   $0xf010975f,0xc(%esp)$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	f0 $/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	f0 $/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	c7 44 24 04 7d 01 00 	movl   $0x17d,0x4(%esp)$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	00 $/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	e8 c6 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	e8 93 fb ff ff       	call   f0103a18 <region_alloc>$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	89 f8                	mov    %edi,%eax$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	e8 fc 2c 00 00       	call   f0106b9c <memcpy>$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	29 c2                	sub    %eax,%edx$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	00 $/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	e8 28 2c 00 00       	call   f0106ae7 <memset>$/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	39 de                	cmp    %ebx,%esi$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	77 83                	ja     f0103e49 <env_create+0xc0>$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	89 f8                	mov    %edi,%eax$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	e8 38 fb ff ff       	call   f0103a18 <region_alloc>$/;"	l
f0103ee0	obj/kern/kernel.asm	/^f0103ee0:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	75 0a                	jne    f0103ef0 <env_create+0x167>$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	5b                   	pop    %ebx$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	5e                   	pop    %esi$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	5f                   	pop    %edi$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	5d                   	pop    %ebp$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	c3                   	ret    $/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8 <env_free>:$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	55                   	push   %ebp$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	57                   	push   %edi$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	56                   	push   %esi$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	53                   	push   %ebx$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	e8 33 32 00 00       	call   f010713c <cpunum>$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	39 b8 28 10 30 f0    	cmp    %edi,-0xfcfefd8(%eax)$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	74 09                	je     f0103f1d <env_free+0x25>$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	eb 36                	jmp    f0103f53 <env_free+0x5b>$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	77 20                	ja     f0103f49 <env_free+0x51>$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	f0 $/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	c7 44 24 04 b2 01 00 	movl   $0x1b2,0x4(%esp)$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	00 $/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	e8 f7 c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	eb c1                	jmp    f0103f14 <env_free+0x1c>$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	89 c8                	mov    %ecx,%eax$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	0f 84 b7 00 00 00    	je     f0104027 <env_free+0x12f>$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	89 f0                	mov    %esi,%eax$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	3b 05 74 06 30 f0    	cmp    0xf0300674,%eax$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	72 20                	jb     f0103fa6 <env_free+0xae>$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	f0 $/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	c7 44 24 04 c1 01 00 	movl   $0x1c1,0x4(%esp)$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	00 $/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	e8 9a c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103fb4	obj/kern/kernel.asm	/^f0103fb4:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	01 $/;"	l
f0103fbc	obj/kern/kernel.asm	/^f0103fbc:	74 17                	je     f0103fd5 <env_free+0xdd>$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	89 d8                	mov    %ebx,%eax$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	e8 f4 d7 ff ff       	call   f01017c9 <page_remove>$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	75 d4                	jne    f0103fb4 <env_free+0xbc>$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	3b 05 74 06 30 f0    	cmp    0xf0300674,%eax$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	72 1c                	jb     f0104014 <env_free+0x11c>$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	c7 44 24 08 d8 8a 10 	movl   $0xf0108ad8,0x8(%esp)$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	f0 $/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0104007	obj/kern/kernel.asm	/^f0104007:	00 $/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	e8 2c c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	a1 7c 06 30 f0       	mov    0xf030067c,%eax$/;"	l
f0104019	obj/kern/kernel.asm	/^f0104019:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f010401f	obj/kern/kernel.asm	/^f010401f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	e8 de d5 ff ff       	call   f0101605 <page_decref>$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	0f 85 1b ff ff ff    	jne    f0103f53 <env_free+0x5b>$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	77 20                	ja     f0104062 <env_free+0x16a>$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	f0 $/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	c7 44 24 04 cf 01 00 	movl   $0x1cf,0x4(%esp)$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	00 $/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	e8 de bf ff ff       	call   f0100040 <_panic>$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	3b 05 74 06 30 f0    	cmp    0xf0300674,%eax$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	72 1c                	jb     f0104095 <env_free+0x19d>$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	c7 44 24 08 d8 8a 10 	movl   $0xf0108ad8,0x8(%esp)$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	f0 $/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	00 $/;"	l
f0104089	obj/kern/kernel.asm	/^f0104089:	c7 04 24 39 93 10 f0 	movl   $0xf0109339,(%esp)$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	e8 ab bf ff ff       	call   f0100040 <_panic>$/;"	l
f0104095	obj/kern/kernel.asm	/^f0104095:	8b 15 7c 06 30 f0    	mov    0xf030067c,%edx$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	e8 5f d5 ff ff       	call   f0101605 <page_decref>$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	a1 4c 92 2b f0       	mov    0xf02b924c,%eax$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	89 3d 4c 92 2b f0    	mov    %edi,0xf02b924c$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	5b                   	pop    %ebx$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	5e                   	pop    %esi$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	5f                   	pop    %edi$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	5d                   	pop    %ebp$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	c3                   	ret    $/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3 <env_destroy>:$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	55                   	push   %ebp$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	53                   	push   %ebx$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	75 19                	jne    f01040ec <env_destroy+0x29>$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	e8 64 30 00 00       	call   f010713c <cpunum>$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	39 98 28 10 30 f0    	cmp    %ebx,-0xfcfefd8(%eax)$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	74 09                	je     f01040ec <env_destroy+0x29>$/;"	l
f01040e3	obj/kern/kernel.asm	/^f01040e3:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	eb 2f                	jmp    f010411b <env_destroy+0x58>$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	e8 04 fe ff ff       	call   f0103ef8 <env_free>$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	e8 43 30 00 00       	call   f010713c <cpunum>$/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	39 98 28 10 30 f0    	cmp    %ebx,-0xfcfefd8(%eax)$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	75 17                	jne    f010411b <env_destroy+0x58>$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	e8 33 30 00 00       	call   f010713c <cpunum>$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	c7 80 28 10 30 f0 00 	movl   $0x0,-0xfcfefd8(%eax)$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	00 00 00 $/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	e8 77 16 00 00       	call   f0105792 <sched_yield>$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	5b                   	pop    %ebx$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	5d                   	pop    %ebp$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	c3                   	ret    $/;"	l
f0104121	obj/kern/kernel.asm	/^f0104121 <env_pop_tf>:$/;"	l
f0104121	obj/kern/kernel.asm	/^f0104121:	55                   	push   %ebp$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	89 e5                	mov    %esp,%ebp$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	53                   	push   %ebx$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	e8 0f 30 00 00       	call   f010713c <cpunum>$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	8b 98 28 10 30 f0    	mov    -0xfcfefd8(%eax),%ebx$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	e8 01 30 00 00       	call   f010713c <cpunum>$/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	61                   	popa   $/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	07                   	pop    %es$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	1f                   	pop    %ds$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	cf                   	iret   $/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	c7 44 24 08 7b 97 10 	movl   $0xf010977b,0x8(%esp)$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	f0 $/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	c7 44 24 04 05 02 00 	movl   $0x205,0x4(%esp)$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	00 $/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	e8 dc be ff ff       	call   f0100040 <_panic>$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164 <env_run>:$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	55                   	push   %ebp$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	89 e5                	mov    %esp,%ebp$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	e8 cd 2f 00 00       	call   f010713c <cpunum>$/;"	l
f010416f	obj/kern/kernel.asm	/^f010416f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	83 b8 28 10 30 f0 00 	cmpl   $0x0,-0xfcfefd8(%eax)$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	74 29                	je     f01041a4 <env_run+0x40>$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	e8 bc 2f 00 00       	call   f010713c <cpunum>$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	75 15                	jne    f01041a4 <env_run+0x40>$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	e8 a8 2f 00 00       	call   f010713c <cpunum>$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	e8 93 2f 00 00       	call   f010713c <cpunum>$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	89 90 28 10 30 f0    	mov    %edx,-0xfcfefd8(%eax)$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	e8 82 2f 00 00       	call   f010713c <cpunum>$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01041c3	obj/kern/kernel.asm	/^f01041c3:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	e8 6d 2f 00 00       	call   f010713c <cpunum>$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	e8 5b 2f 00 00       	call   f010713c <cpunum>$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	77 20                	ja     f0104214 <env_run+0xb0>$/;"	l
f01041f4	obj/kern/kernel.asm	/^f01041f4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	f0 $/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	c7 44 24 04 27 02 00 	movl   $0x227,0x4(%esp)$/;"	l
f0104207	obj/kern/kernel.asm	/^f0104207:	00 $/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	c7 04 24 36 97 10 f0 	movl   $0xf0109736,(%esp)$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	e8 2c be ff ff       	call   f0100040 <_panic>$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	c7 04 24 c0 67 12 f0 	movl   $0xf01267c0,(%esp)$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	e8 3f 32 00 00       	call   f0107467 <spin_unlock>$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	f3 90                	pause  $/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	e8 0d 2f 00 00       	call   f010713c <cpunum>$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104232	obj/kern/kernel.asm	/^f0104232:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	e8 e1 fe ff ff       	call   f0104121 <env_pop_tf>$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240 <mc146818_read>:$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	55                   	push   %ebp$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	89 e5                	mov    %esp,%ebp$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	ee                   	out    %al,(%dx)$/;"	l
f010424d	obj/kern/kernel.asm	/^f010424d:	b2 71                	mov    $0x71,%dl$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	ec                   	in     (%dx),%al$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	5d                   	pop    %ebp$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	c3                   	ret    $/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255 <mc146818_write>:$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	55                   	push   %ebp$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	89 e5                	mov    %esp,%ebp$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	ee                   	out    %al,(%dx)$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	b2 71                	mov    $0x71,%dl$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	ee                   	out    %al,(%dx)$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	5d                   	pop    %ebp$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	c3                   	ret    $/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	66 90                	xchg   %ax,%ax$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c <irq_setmask_8259A>:$/;"	l
f010426c	obj/kern/kernel.asm	/^f010426c:	55                   	push   %ebp$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	89 e5                	mov    %esp,%ebp$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	56                   	push   %esi$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	53                   	push   %ebx$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	66 a3 a8 63 12 f0    	mov    %ax,0xf01263a8$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	80 3d 50 92 2b f0 00 	cmpb   $0x0,0xf02b9250$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	74 4e                	je     f01042d4 <irq_setmask_8259A+0x68>$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	89 c6                	mov    %eax,%esi$/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010428d	obj/kern/kernel.asm	/^f010428d:	ee                   	out    %al,(%dx)$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	ee                   	out    %al,(%dx)$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	c7 04 24 87 97 10 f0 	movl   $0xf0109787,(%esp)$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	e8 1d 01 00 00       	call   f01043be <cprintf>$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	f7 d6                	not    %esi$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	0f a3 de             	bt     %ebx,%esi$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	73 10                	jae    f01042c0 <irq_setmask_8259A+0x54>$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	c7 04 24 5f 9c 10 f0 	movl   $0xf0109c5f,(%esp)$/;"	l
f01042bb	obj/kern/kernel.asm	/^f01042bb:	e8 fe 00 00 00       	call   f01043be <cprintf>$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	75 e3                	jne    f01042ab <irq_setmask_8259A+0x3f>$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	c7 04 24 48 96 10 f0 	movl   $0xf0109648,(%esp)$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	e8 ea 00 00 00       	call   f01043be <cprintf>$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	5b                   	pop    %ebx$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	5e                   	pop    %esi$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	5d                   	pop    %ebp$/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	c3                   	ret    $/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db <pic_init>:$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	c6 05 50 92 2b f0 01 	movb   $0x1,0xf02b9250$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	ee                   	out    %al,(%dx)$/;"	l
f01042ed	obj/kern/kernel.asm	/^f01042ed:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	ee                   	out    %al,(%dx)$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	b2 20                	mov    $0x20,%dl$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	ee                   	out    %al,(%dx)$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	b2 21                	mov    $0x21,%dl$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	ee                   	out    %al,(%dx)$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	ee                   	out    %al,(%dx)$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	ee                   	out    %al,(%dx)$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	b2 a0                	mov    $0xa0,%dl$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0104313	obj/kern/kernel.asm	/^f0104313:	ee                   	out    %al,(%dx)$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	ee                   	out    %al,(%dx)$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	ee                   	out    %al,(%dx)$/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	ee                   	out    %al,(%dx)$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	b2 20                	mov    $0x20,%dl$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	ee                   	out    %al,(%dx)$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	ee                   	out    %al,(%dx)$/;"	l
f0104336	obj/kern/kernel.asm	/^f0104336:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	ee                   	out    %al,(%dx)$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	ee                   	out    %al,(%dx)$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	0f b7 05 a8 63 12 f0 	movzwl 0xf01263a8,%eax$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f010434f	obj/kern/kernel.asm	/^f010434f:	74 12                	je     f0104363 <pic_init+0x88>$/;"	l
f0104351	obj/kern/kernel.asm	/^f0104351:	55                   	push   %ebp$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	89 e5                	mov    %esp,%ebp$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	e8 0a ff ff ff       	call   f010426c <irq_setmask_8259A>$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	c9                   	leave  $/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	f3 c3                	repz ret $/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365 <irq_eoi>:$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	55                   	push   %ebp$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	89 e5                	mov    %esp,%ebp$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	ee                   	out    %al,(%dx)$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	ee                   	out    %al,(%dx)$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	5d                   	pop    %ebp$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	c3                   	ret    $/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378 <putch>:$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	55                   	push   %ebp$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	89 e5                	mov    %esp,%ebp$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010437e	obj/kern/kernel.asm	/^f010437e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104381	obj/kern/kernel.asm	/^f0104381:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	e8 3e c4 ff ff       	call   f01007c7 <cputchar>$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	c9                   	leave  $/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	c3                   	ret    $/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b <vcprintf>:$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	55                   	push   %ebp$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	89 e5                	mov    %esp,%ebp$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	c7 04 24 78 43 10 f0 	movl   $0xf0104378,(%esp)$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	e8 65 20 00 00       	call   f010641e <vprintfmt>$/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	c9                   	leave  $/;"	l
f01043bd	obj/kern/kernel.asm	/^f01043bd:	c3                   	ret    $/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be <cprintf>:$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	55                   	push   %ebp$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043cb	obj/kern/kernel.asm	/^f01043cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	e8 b5 ff ff ff       	call   f010438b <vcprintf>$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	c9                   	leave  $/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	c3                   	ret    $/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	66 90                	xchg   %ax,%ax$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	66 90                	xchg   %ax,%ax$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	66 90                	xchg   %ax,%ax$/;"	l
f01043de	obj/kern/kernel.asm	/^f01043de:	66 90                	xchg   %ax,%ax$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0 <trap_init_percpu>:$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	55                   	push   %ebp$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	57                   	push   %edi$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	56                   	push   %esi$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	53                   	push   %ebx$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	e8 4e 2d 00 00       	call   f010713c <cpunum>$/;"	l
f01043ee	obj/kern/kernel.asm	/^f01043ee:	89 c3                	mov    %eax,%ebx$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	e8 47 2d 00 00       	call   f010713c <cpunum>$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	89 da                	mov    %ebx,%edx$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	f7 da                	neg    %edx$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	89 90 30 10 30 f0    	mov    %edx,-0xfcfefd0(%eax)$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	e8 2c 2d 00 00       	call   f010713c <cpunum>$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	66 c7 80 34 10 30 f0 	movw   $0x10,-0xfcfefcc(%eax)$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	10 00 $/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	83 c3 05             	add    $0x5,%ebx$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	e8 18 2d 00 00       	call   f010713c <cpunum>$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	89 c7                	mov    %eax,%edi$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	e8 11 2d 00 00       	call   f010713c <cpunum>$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	89 c6                	mov    %eax,%esi$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	e8 0a 2d 00 00       	call   f010713c <cpunum>$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	66 c7 04 dd 40 63 12 	movw   $0x67,-0xfed9cc0(,%ebx,8)$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	f0 67 00 $/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f010443f	obj/kern/kernel.asm	/^f010443f:	81 c7 2c 10 30 f0    	add    $0xf030102c,%edi$/;"	l
f0104445	obj/kern/kernel.asm	/^f0104445:	66 89 3c dd 42 63 12 	mov    %di,-0xfed9cbe(,%ebx,8)$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	f0 $/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	6b d6 74             	imul   $0x74,%esi,%edx$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	81 c2 2c 10 30 f0    	add    $0xf030102c,%edx$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	88 14 dd 44 63 12 f0 	mov    %dl,-0xfed9cbc(,%ebx,8)$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	c6 04 dd 46 63 12 f0 	movb   $0x40,-0xfed9cba(,%ebx,8)$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	40 $/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	05 2c 10 30 f0       	add    $0xf030102c,%eax$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	88 04 dd 47 63 12 f0 	mov    %al,-0xfed9cb9(,%ebx,8)$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	c6 04 dd 45 63 12 f0 	movb   $0x89,-0xfed9cbb(,%ebx,8)$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	89 $/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	0f 00 db             	ltr    %bx$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	b8 ac 63 12 f0       	mov    $0xf01263ac,%eax$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	0f 01 18             	lidtl  (%eax)$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	5b                   	pop    %ebx$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	5e                   	pop    %esi$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	5f                   	pop    %edi$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	5d                   	pop    %ebp$/;"	l
f0104497	obj/kern/kernel.asm	/^f0104497:	c3                   	ret    $/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498 <trap_init>:$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	8b 14 85 b4 63 12 f0 	mov    -0xfed9c4c(,%eax,4),%edx$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	66 89 14 c5 60 92 2b 	mov    %dx,-0xfd46da0(,%eax,8)$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	f0 $/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	66 c7 04 c5 62 92 2b 	movw   $0x8,-0xfd46d9e(,%eax,8)$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	f0 08 00 $/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	c6 04 c5 64 92 2b f0 	movb   $0x0,-0xfd46d9c(,%eax,8)$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	00 $/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	c6 04 c5 65 92 2b f0 	movb   $0x8e,-0xfd46d9b(,%eax,8)$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	8e $/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	66 89 14 c5 66 92 2b 	mov    %dx,-0xfd46d9a(,%eax,8)$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	f0 $/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	3d 00 01 00 00       	cmp    $0x100,%eax$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	75 c2                	jne    f010449d <trap_init+0x5>$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	55                   	push   %ebp$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	a1 c0 63 12 f0       	mov    0xf01263c0,%eax$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	66 a3 78 92 2b f0    	mov    %ax,0xf02b9278$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	66 c7 05 7a 92 2b f0 	movw   $0x8,0xf02b927a$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	08 00 $/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	c6 05 7c 92 2b f0 00 	movb   $0x0,0xf02b927c$/;"	l
f01044fc	obj/kern/kernel.asm	/^f01044fc:	c6 05 7d 92 2b f0 ee 	movb   $0xee,0xf02b927d$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	66 a3 7e 92 2b f0    	mov    %ax,0xf02b927e$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	a1 74 64 12 f0       	mov    0xf0126474,%eax$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	66 a3 e0 93 2b f0    	mov    %ax,0xf02b93e0$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	66 c7 05 e2 93 2b f0 	movw   $0x8,0xf02b93e2$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	08 00 $/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	c6 05 e4 93 2b f0 00 	movb   $0x0,0xf02b93e4$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	c6 05 e5 93 2b f0 ee 	movb   $0xee,0xf02b93e5$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	66 a3 e6 93 2b f0    	mov    %ax,0xf02b93e6$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	e8 a4 fe ff ff       	call   f01043e0 <trap_init_percpu>$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	c9                   	leave  $/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	c3                   	ret    $/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e <print_regs>:$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	55                   	push   %ebp$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	53                   	push   %ebx$/;"	l
f0104542	obj/kern/kernel.asm	/^f0104542:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	8b 03                	mov    (%ebx),%eax$/;"	l
f010454a	obj/kern/kernel.asm	/^f010454a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	c7 04 24 9b 97 10 f0 	movl   $0xf010979b,(%esp)$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	e8 64 fe ff ff       	call   f01043be <cprintf>$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	c7 04 24 aa 97 10 f0 	movl   $0xf01097aa,(%esp)$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	e8 51 fe ff ff       	call   f01043be <cprintf>$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	c7 04 24 b9 97 10 f0 	movl   $0xf01097b9,(%esp)$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	e8 3e fe ff ff       	call   f01043be <cprintf>$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	c7 04 24 c8 97 10 f0 	movl   $0xf01097c8,(%esp)$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	e8 2b fe ff ff       	call   f01043be <cprintf>$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	c7 04 24 d7 97 10 f0 	movl   $0xf01097d7,(%esp)$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	e8 18 fe ff ff       	call   f01043be <cprintf>$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045ad	obj/kern/kernel.asm	/^f01045ad:	c7 04 24 e6 97 10 f0 	movl   $0xf01097e6,(%esp)$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	e8 05 fe ff ff       	call   f01043be <cprintf>$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	c7 04 24 f5 97 10 f0 	movl   $0xf01097f5,(%esp)$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	e8 f2 fd ff ff       	call   f01043be <cprintf>$/;"	l
f01045cc	obj/kern/kernel.asm	/^f01045cc:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	c7 04 24 04 98 10 f0 	movl   $0xf0109804,(%esp)$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	e8 df fd ff ff       	call   f01043be <cprintf>$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	83 c4 14             	add    $0x14,%esp$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	5b                   	pop    %ebx$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	5d                   	pop    %ebp$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	c3                   	ret    $/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5 <print_trapframe>:$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	55                   	push   %ebp$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01045e8	obj/kern/kernel.asm	/^f01045e8:	56                   	push   %esi$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	53                   	push   %ebx$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01045ed	obj/kern/kernel.asm	/^f01045ed:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	e8 47 2b 00 00       	call   f010713c <cpunum>$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	c7 04 24 68 98 10 f0 	movl   $0xf0109868,(%esp)$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	e8 b5 fd ff ff       	call   f01043be <cprintf>$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	e8 2d ff ff ff       	call   f010453e <print_regs>$/;"	l
f0104611	obj/kern/kernel.asm	/^f0104611:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	c7 04 24 86 98 10 f0 	movl   $0xf0109886,(%esp)$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	e8 99 fd ff ff       	call   f01043be <cprintf>$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	c7 04 24 99 98 10 f0 	movl   $0xf0109899,(%esp)$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	e8 85 fd ff ff       	call   f01043be <cprintf>$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	77 09                	ja     f010464a <print_trapframe+0x65>$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	8b 14 85 40 9b 10 f0 	mov    -0xfef64c0(,%eax,4),%edx$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	eb 1f                	jmp    f0104669 <print_trapframe+0x84>$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	74 15                	je     f0104664 <print_trapframe+0x7f>$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	ba 1f 98 10 f0       	mov    $0xf010981f,%edx$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	b9 32 98 10 f0       	mov    $0xf0109832,%ecx$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	eb 05                	jmp    f0104669 <print_trapframe+0x84>$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664:	ba 13 98 10 f0       	mov    $0xf0109813,%edx$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	c7 04 24 ac 98 10 f0 	movl   $0xf01098ac,(%esp)$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	e8 41 fd ff ff       	call   f01043be <cprintf>$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	3b 1d 60 9a 2b f0    	cmp    0xf02b9a60,%ebx$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	75 19                	jne    f010469e <print_trapframe+0xb9>$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	75 13                	jne    f010469e <print_trapframe+0xb9>$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	c7 04 24 be 98 10 f0 	movl   $0xf01098be,(%esp)$/;"	l
f0104699	obj/kern/kernel.asm	/^f0104699:	e8 20 fd ff ff       	call   f01043be <cprintf>$/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	c7 04 24 cd 98 10 f0 	movl   $0xf01098cd,(%esp)$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	e8 0d fd ff ff       	call   f01043be <cprintf>$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01046b5	obj/kern/kernel.asm	/^f01046b5:	75 51                	jne    f0104708 <print_trapframe+0x123>$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	89 c2                	mov    %eax,%edx$/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	83 e2 01             	and    $0x1,%edx$/;"	l
f01046bf	obj/kern/kernel.asm	/^f01046bf:	ba 41 98 10 f0       	mov    $0xf0109841,%edx$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	b9 4c 98 10 f0       	mov    $0xf010984c,%ecx$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	89 c2                	mov    %eax,%edx$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	83 e2 02             	and    $0x2,%edx$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	ba 58 98 10 f0       	mov    $0xf0109858,%edx$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	be 5e 98 10 f0       	mov    $0xf010985e,%esi$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	83 e0 04             	and    $0x4,%eax$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	b8 63 98 10 f0       	mov    $0xf0109863,%eax$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	be 98 99 10 f0       	mov    $0xf0109998,%esi$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01046f6	obj/kern/kernel.asm	/^f01046f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	c7 04 24 db 98 10 f0 	movl   $0xf01098db,(%esp)$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	e8 b8 fc ff ff       	call   f01043be <cprintf>$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	eb 0c                	jmp    f0104714 <print_trapframe+0x12f>$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	c7 04 24 48 96 10 f0 	movl   $0xf0109648,(%esp)$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	e8 aa fc ff ff       	call   f01043be <cprintf>$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b:	c7 04 24 ea 98 10 f0 	movl   $0xf01098ea,(%esp)$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	e8 97 fc ff ff       	call   f01043be <cprintf>$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010472f	obj/kern/kernel.asm	/^f010472f:	c7 04 24 f9 98 10 f0 	movl   $0xf01098f9,(%esp)$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	e8 83 fc ff ff       	call   f01043be <cprintf>$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	c7 04 24 0c 99 10 f0 	movl   $0xf010990c,(%esp)$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	e8 70 fc ff ff       	call   f01043be <cprintf>$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	74 27                	je     f010477b <print_trapframe+0x196>$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	c7 04 24 1b 99 10 f0 	movl   $0xf010991b,(%esp)$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	e8 57 fc ff ff       	call   f01043be <cprintf>$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	c7 04 24 2a 99 10 f0 	movl   $0xf010992a,(%esp)$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	e8 43 fc ff ff       	call   f01043be <cprintf>$/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	5b                   	pop    %ebx$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	5e                   	pop    %esi$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	5d                   	pop    %ebp$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	c3                   	ret    $/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782 <page_fault_handler>:$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	55                   	push   %ebp$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	89 e5                	mov    %esp,%ebp$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	57                   	push   %edi$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	56                   	push   %esi$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	53                   	push   %ebx$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	75 1c                	jne    f01047b3 <page_fault_handler+0x31>$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	c7 44 24 08 e4 9a 10 	movl   $0xf0109ae4,0x8(%esp)$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	f0 $/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	c7 44 24 04 43 01 00 	movl   $0x143,0x4(%esp)$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	00 $/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	c7 04 24 3d 99 10 f0 	movl   $0xf010993d,(%esp)$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	e8 8d b8 ff ff       	call   f0100040 <_panic>$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	e8 84 29 00 00       	call   f010713c <cpunum>$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	0f 84 0d 01 00 00    	je     f01048d8 <page_fault_handler+0x156>$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	8b 03                	mov    (%ebx),%eax$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	8b 7b 3c             	mov    0x3c(%ebx),%edi$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	8d 87 00 10 40 11    	lea    0x11401000(%edi),%eax$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
f010481a	obj/kern/kernel.asm	/^f010481a:	77 08                	ja     f0104824 <page_fault_handler+0xa2>$/;"	l
f010481c	obj/kern/kernel.asm	/^f010481c:	8d 47 fc             	lea    -0x4(%edi),%eax$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	89 43 3c             	mov    %eax,0x3c(%ebx)$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	eb 07                	jmp    f010482b <page_fault_handler+0xa9>$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	c7 43 3c 00 00 c0 ee 	movl   $0xeec00000,0x3c(%ebx)$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	83 e8 34             	sub    $0x34,%eax$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	89 43 3c             	mov    %eax,0x3c(%ebx)$/;"	l
f0104837	obj/kern/kernel.asm	/^f0104837:	e8 00 29 00 00       	call   f010713c <cpunum>$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	00 $/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f010484b	obj/kern/kernel.asm	/^f010484b:	00 $/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	e8 5c f1 ff ff       	call   f01039c0 <user_mem_assert>$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	89 30                	mov    %esi,(%eax)$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010487e	obj/kern/kernel.asm	/^f010487e:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	89 48 1c             	mov    %ecx,0x1c(%eax)$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	89 48 24             	mov    %ecx,0x24(%eax)$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	89 48 2c             	mov    %ecx,0x2c(%eax)$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	89 78 30             	mov    %edi,0x30(%eax)$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	e8 89 28 00 00       	call   f010713c <cpunum>$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	e8 75 28 00 00       	call   f010713c <cpunum>$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	e8 8c f8 ff ff       	call   f0104164 <env_run>$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	e8 5c 28 00 00       	call   f010713c <cpunum>$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	c7 04 24 14 9b 10 f0 	movl   $0xf0109b14,(%esp)$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	e8 ba fa ff ff       	call   f01043be <cprintf>$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	e8 d9 fc ff ff       	call   f01045e5 <print_trapframe>$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	e8 2b 28 00 00       	call   f010713c <cpunum>$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	e8 a1 f7 ff ff       	call   f01040c3 <env_destroy>$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	5b                   	pop    %ebx$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	5e                   	pop    %esi$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	5f                   	pop    %edi$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	5d                   	pop    %ebp$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	c3                   	ret    $/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a <trap>:$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	55                   	push   %ebp$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	89 e5                	mov    %esp,%ebp$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	57                   	push   %edi$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	56                   	push   %esi$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104932	obj/kern/kernel.asm	/^f0104932:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	fc                   	cld    $/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	83 3d 6c 06 30 f0 00 	cmpl   $0x0,0xf030066c$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	74 01                	je     f0104940 <trap+0x16>$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	f4                   	hlt    $/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	e8 f7 27 00 00       	call   f010713c <cpunum>$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	81 c2 20 10 30 f0    	add    $0xf0301020,%edx$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	75 0c                	jne    f0104968 <trap+0x3e>$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	c7 04 24 c0 67 12 f0 	movl   $0xf01267c0,(%esp)$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	e8 53 2a 00 00       	call   f01073bb <spin_lock>$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	9c                   	pushf  $/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	58                   	pop    %eax$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	f6 c4 02             	test   $0x2,%ah$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	74 24                	je     f0104993 <trap+0x69>$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	c7 44 24 0c 49 99 10 	movl   $0xf0109949,0xc(%esp)$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	f0 $/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	f0 $/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	c7 44 24 04 0f 01 00 	movl   $0x10f,0x4(%esp)$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	00 $/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	c7 04 24 3d 99 10 f0 	movl   $0xf010993d,(%esp)$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	e8 ad b6 ff ff       	call   f0100040 <_panic>$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104997	obj/kern/kernel.asm	/^f0104997:	83 e0 03             	and    $0x3,%eax$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	0f 85 a7 00 00 00    	jne    f0104a4b <trap+0x121>$/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	c7 04 24 c0 67 12 f0 	movl   $0xf01267c0,(%esp)$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	e8 0b 2a 00 00       	call   f01073bb <spin_lock>$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	e8 87 27 00 00       	call   f010713c <cpunum>$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	83 b8 28 10 30 f0 00 	cmpl   $0x0,-0xfcfefd8(%eax)$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	75 24                	jne    f01049e5 <trap+0xbb>$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	c7 44 24 0c 62 99 10 	movl   $0xf0109962,0xc(%esp)$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	f0 $/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	f0 $/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	c7 44 24 04 17 01 00 	movl   $0x117,0x4(%esp)$/;"	l
f01049d8	obj/kern/kernel.asm	/^f01049d8:	00 $/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	c7 04 24 3d 99 10 f0 	movl   $0xf010993d,(%esp)$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	e8 5b b6 ff ff       	call   f0100040 <_panic>$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	e8 52 27 00 00       	call   f010713c <cpunum>$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	75 2d                	jne    f0104a26 <trap+0xfc>$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	e8 3e 27 00 00       	call   f010713c <cpunum>$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	e8 e9 f4 ff ff       	call   f0103ef8 <env_free>$/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	e8 28 27 00 00       	call   f010713c <cpunum>$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	c7 80 28 10 30 f0 00 	movl   $0x0,-0xfcfefd8(%eax)$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	00 00 00 $/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	e8 6c 0d 00 00       	call   f0105792 <sched_yield>$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	e8 11 27 00 00       	call   f010713c <cpunum>$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	89 c7                	mov    %eax,%edi$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	e8 fa 26 00 00       	call   f010713c <cpunum>$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	8b b0 28 10 30 f0    	mov    -0xfcfefd8(%eax),%esi$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	89 35 60 9a 2b f0    	mov    %esi,0xf02b9a60$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	74 2c                	je     f0104a85 <trap+0x15b>$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	77 07                	ja     f0104a65 <trap+0x13b>$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104a61	obj/kern/kernel.asm	/^f0104a61:	74 32                	je     f0104a95 <trap+0x16b>$/;"	l
f0104a63	obj/kern/kernel.asm	/^f0104a63:	eb 75                	jmp    f0104ada <trap+0x1b0>$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	74 0a                	je     f0104a74 <trap+0x14a>$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	74 33                	je     f0104aa5 <trap+0x17b>$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	eb 66                	jmp    f0104ada <trap+0x1b0>$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	e8 06 fd ff ff       	call   f0104782 <page_fault_handler>$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	e9 f3 00 00 00       	jmp    f0104b78 <trap+0x24e>$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	e8 8e c3 ff ff       	call   f0100e1b <monitor>$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	e9 e3 00 00 00       	jmp    f0104b78 <trap+0x24e>$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	e8 7e c3 ff ff       	call   f0100e1b <monitor>$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	e9 d3 00 00 00       	jmp    f0104b78 <trap+0x24e>$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	8b 06                	mov    (%esi),%eax$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ac7	obj/kern/kernel.asm	/^f0104ac7:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	e8 7e 0d 00 00       	call   f0105850 <syscall>$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	e9 9e 00 00 00       	jmp    f0104b78 <trap+0x24e>$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	75 19                	jne    f0104af8 <trap+0x1ce>$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	c7 04 24 69 99 10 f0 	movl   $0xf0109969,(%esp)$/;"	l
f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	e8 d3 f8 ff ff       	call   f01043be <cprintf>$/;"	l
f0104aeb	obj/kern/kernel.asm	/^f0104aeb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	e8 f2 fa ff ff       	call   f01045e5 <print_trapframe>$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	e9 80 00 00 00       	jmp    f0104b78 <trap+0x24e>$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	75 1d                	jne    f0104b1a <trap+0x1f0>$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	e8 84 27 00 00       	call   f0107289 <lapic_eoi>$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	e8 32 26 00 00       	call   f010713c <cpunum>$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	85 c0                	test   %eax,%eax$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	75 07                	jne    f0104b15 <trap+0x1eb>$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	66 90                	xchg   %ax,%ax$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	e8 7a 34 00 00       	call   f0107f8f <time_tick>$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	e8 78 0c 00 00       	call   f0105792 <sched_yield>$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	75 08                	jne    f0104b27 <trap+0x1fd>$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	90                   	nop$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	e8 1e bb ff ff       	call   f0100643 <kbd_intr>$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	eb 51                	jmp    f0104b78 <trap+0x24e>$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	75 0b                	jne    f0104b37 <trap+0x20d>$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	e8 f2 ba ff ff       	call   f0100627 <serial_intr>$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	eb 41                	jmp    f0104b78 <trap+0x24e>$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	e8 a6 fa ff ff       	call   f01045e5 <print_trapframe>$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	75 1c                	jne    f0104b62 <trap+0x238>$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	c7 44 24 08 86 99 10 	movl   $0xf0109986,0x8(%esp)$/;"	l
f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	f0 $/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	c7 44 24 04 f5 00 00 	movl   $0xf5,0x4(%esp)$/;"	l
f0104b55	obj/kern/kernel.asm	/^f0104b55:	00 $/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	c7 04 24 3d 99 10 f0 	movl   $0xf010993d,(%esp)$/;"	l
f0104b5d	obj/kern/kernel.asm	/^f0104b5d:	e8 de b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	e8 d5 25 00 00       	call   f010713c <cpunum>$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	e8 4b f5 ff ff       	call   f01040c3 <env_destroy>$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	e8 bf 25 00 00       	call   f010713c <cpunum>$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	83 b8 28 10 30 f0 00 	cmpl   $0x0,-0xfcfefd8(%eax)$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	74 2a                	je     f0104bb3 <trap+0x289>$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	e8 ae 25 00 00       	call   f010713c <cpunum>$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	75 16                	jne    f0104bb3 <trap+0x289>$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	e8 9a 25 00 00       	call   f010713c <cpunum>$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104bae	obj/kern/kernel.asm	/^f0104bae:	e8 b1 f5 ff ff       	call   f0104164 <env_run>$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	e8 da 0b 00 00       	call   f0105792 <sched_yield>$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8 <vector0>:$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	6a 00                	push   $0x0$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	6a 00                	push   $0x0$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	e9 e9 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	90                   	nop$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2 <vector1>:$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	6a 00                	push   $0x0$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	6a 01                	push   $0x1$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	e9 df 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	90                   	nop$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc <vector2>:$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	6a 00                	push   $0x0$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	6a 02                	push   $0x2$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	e9 d5 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	90                   	nop$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6 <vector3>:$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	6a 00                	push   $0x0$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	6a 03                	push   $0x3$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	e9 cb 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	90                   	nop$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0 <vector4>:$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	6a 00                	push   $0x0$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	6a 04                	push   $0x4$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	e9 c1 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	90                   	nop$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea <vector5>:$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	6a 00                	push   $0x0$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	6a 05                	push   $0x5$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	e9 b7 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	90                   	nop$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4 <vector6>:$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	6a 00                	push   $0x0$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	6a 06                	push   $0x6$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	e9 ad 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	90                   	nop$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe <vector7>:$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	6a 00                	push   $0x0$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	6a 07                	push   $0x7$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	e9 a3 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	90                   	nop$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08 <vector8>:$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	6a 08                	push   $0x8$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	e9 9b 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c0f	obj/kern/kernel.asm	/^f0104c0f:	90                   	nop$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10 <vector9>:$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	6a 00                	push   $0x0$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	6a 09                	push   $0x9$/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	e9 91 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	90                   	nop$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a <vector10>:$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	6a 0a                	push   $0xa$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	e9 89 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	90                   	nop$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22 <vector11>:$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	6a 0b                	push   $0xb$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	e9 81 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	90                   	nop$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a <vector12>:$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	6a 0c                	push   $0xc$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	e9 79 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	90                   	nop$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32 <vector13>:$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	6a 0d                	push   $0xd$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	e9 71 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	90                   	nop$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a <vector14>:$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	6a 0e                	push   $0xe$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	e9 69 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	90                   	nop$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42 <vector15>:$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	6a 00                	push   $0x0$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	6a 0f                	push   $0xf$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	e9 5f 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	90                   	nop$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c <vector16>:$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	6a 00                	push   $0x0$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	6a 10                	push   $0x10$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	e9 55 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	90                   	nop$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56 <vector17>:$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	6a 11                	push   $0x11$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	e9 4d 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	90                   	nop$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e <vector18>:$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	6a 00                	push   $0x0$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	6a 12                	push   $0x12$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	e9 43 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	90                   	nop$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68 <vector19>:$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	6a 00                	push   $0x0$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	6a 13                	push   $0x13$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	e9 39 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	90                   	nop$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72 <vector20>:$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	6a 00                	push   $0x0$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	6a 14                	push   $0x14$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	e9 2f 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	90                   	nop$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c <vector21>:$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	6a 00                	push   $0x0$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	6a 15                	push   $0x15$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	e9 25 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	90                   	nop$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86 <vector22>:$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	6a 00                	push   $0x0$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	6a 16                	push   $0x16$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	e9 1b 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	90                   	nop$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90 <vector23>:$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	6a 00                	push   $0x0$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	6a 17                	push   $0x17$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	e9 11 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	90                   	nop$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a <vector24>:$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	6a 00                	push   $0x0$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	6a 18                	push   $0x18$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	e9 07 0a 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	90                   	nop$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4 <vector25>:$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	6a 00                	push   $0x0$/;"	l
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	6a 19                	push   $0x19$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	e9 fd 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	90                   	nop$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae <vector26>:$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	6a 00                	push   $0x0$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	6a 1a                	push   $0x1a$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	e9 f3 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	90                   	nop$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8 <vector27>:$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	6a 00                	push   $0x0$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	6a 1b                	push   $0x1b$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	e9 e9 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	90                   	nop$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2 <vector28>:$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	6a 00                	push   $0x0$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	6a 1c                	push   $0x1c$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	e9 df 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	90                   	nop$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc <vector29>:$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	6a 00                	push   $0x0$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	6a 1d                	push   $0x1d$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	e9 d5 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	90                   	nop$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6 <vector30>:$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	6a 00                	push   $0x0$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	6a 1e                	push   $0x1e$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	e9 cb 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	90                   	nop$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0 <vector31>:$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	6a 00                	push   $0x0$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	6a 1f                	push   $0x1f$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	e9 c1 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	90                   	nop$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea <vector32>:$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	6a 00                	push   $0x0$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	6a 20                	push   $0x20$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	e9 b7 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	90                   	nop$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4 <vector33>:$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	6a 00                	push   $0x0$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	6a 21                	push   $0x21$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	e9 ad 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	90                   	nop$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe <vector34>:$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	6a 00                	push   $0x0$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	6a 22                	push   $0x22$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	e9 a3 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	90                   	nop$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08 <vector35>:$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	6a 00                	push   $0x0$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	6a 23                	push   $0x23$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	e9 99 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	90                   	nop$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12 <vector36>:$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	6a 00                	push   $0x0$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	6a 24                	push   $0x24$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	e9 8f 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	90                   	nop$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c <vector37>:$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	6a 00                	push   $0x0$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	6a 25                	push   $0x25$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	e9 85 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	90                   	nop$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26 <vector38>:$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	6a 00                	push   $0x0$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	6a 26                	push   $0x26$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	e9 7b 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	90                   	nop$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30 <vector39>:$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	6a 00                	push   $0x0$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	6a 27                	push   $0x27$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	e9 71 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	90                   	nop$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a <vector40>:$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	6a 00                	push   $0x0$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	6a 28                	push   $0x28$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	e9 67 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	90                   	nop$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44 <vector41>:$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	6a 00                	push   $0x0$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	6a 29                	push   $0x29$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	e9 5d 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	90                   	nop$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e <vector42>:$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	6a 00                	push   $0x0$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	6a 2a                	push   $0x2a$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	e9 53 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	90                   	nop$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58 <vector43>:$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	6a 00                	push   $0x0$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	6a 2b                	push   $0x2b$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	e9 49 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	90                   	nop$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62 <vector44>:$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	6a 00                	push   $0x0$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	6a 2c                	push   $0x2c$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	e9 3f 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	90                   	nop$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c <vector45>:$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	6a 00                	push   $0x0$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	6a 2d                	push   $0x2d$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	e9 35 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	90                   	nop$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76 <vector46>:$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	6a 00                	push   $0x0$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	6a 2e                	push   $0x2e$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	e9 2b 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	90                   	nop$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80 <vector47>:$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	6a 00                	push   $0x0$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	6a 2f                	push   $0x2f$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	e9 21 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	90                   	nop$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a <vector48>:$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	6a 00                	push   $0x0$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	6a 30                	push   $0x30$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	e9 17 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	90                   	nop$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94 <vector49>:$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	6a 00                	push   $0x0$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	6a 31                	push   $0x31$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	e9 0d 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	90                   	nop$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e <vector50>:$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	6a 00                	push   $0x0$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	6a 32                	push   $0x32$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	e9 03 09 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	90                   	nop$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8 <vector51>:$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	6a 00                	push   $0x0$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	6a 33                	push   $0x33$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	e9 f9 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	90                   	nop$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2 <vector52>:$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	6a 00                	push   $0x0$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	6a 34                	push   $0x34$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	e9 ef 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	90                   	nop$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc <vector53>:$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	6a 00                	push   $0x0$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6a 35                	push   $0x35$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	e9 e5 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	90                   	nop$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6 <vector54>:$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	6a 00                	push   $0x0$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	6a 36                	push   $0x36$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	e9 db 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	90                   	nop$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0 <vector55>:$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	6a 00                	push   $0x0$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	6a 37                	push   $0x37$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	e9 d1 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	90                   	nop$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda <vector56>:$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	6a 00                	push   $0x0$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	6a 38                	push   $0x38$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	e9 c7 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	90                   	nop$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4 <vector57>:$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	6a 00                	push   $0x0$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	6a 39                	push   $0x39$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	e9 bd 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	90                   	nop$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee <vector58>:$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	6a 00                	push   $0x0$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	6a 3a                	push   $0x3a$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	e9 b3 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	90                   	nop$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8 <vector59>:$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	6a 00                	push   $0x0$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	6a 3b                	push   $0x3b$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	e9 a9 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e01	obj/kern/kernel.asm	/^f0104e01:	90                   	nop$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02 <vector60>:$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	6a 00                	push   $0x0$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	6a 3c                	push   $0x3c$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	e9 9f 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	90                   	nop$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c <vector61>:$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	6a 00                	push   $0x0$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	6a 3d                	push   $0x3d$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	e9 95 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	90                   	nop$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16 <vector62>:$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	6a 00                	push   $0x0$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	6a 3e                	push   $0x3e$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	e9 8b 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	90                   	nop$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20 <vector63>:$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	6a 00                	push   $0x0$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	6a 3f                	push   $0x3f$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	e9 81 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	90                   	nop$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a <vector64>:$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	6a 00                	push   $0x0$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	6a 40                	push   $0x40$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	e9 77 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	90                   	nop$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34 <vector65>:$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	6a 00                	push   $0x0$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	6a 41                	push   $0x41$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	e9 6d 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	90                   	nop$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e <vector66>:$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	6a 00                	push   $0x0$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	6a 42                	push   $0x42$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	e9 63 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	90                   	nop$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48 <vector67>:$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	6a 00                	push   $0x0$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	6a 43                	push   $0x43$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	e9 59 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	90                   	nop$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52 <vector68>:$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	6a 00                	push   $0x0$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	6a 44                	push   $0x44$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	e9 4f 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	90                   	nop$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c <vector69>:$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	6a 00                	push   $0x0$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	6a 45                	push   $0x45$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	e9 45 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	90                   	nop$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66 <vector70>:$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	6a 00                	push   $0x0$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	6a 46                	push   $0x46$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	e9 3b 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	90                   	nop$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70 <vector71>:$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	6a 00                	push   $0x0$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	6a 47                	push   $0x47$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	e9 31 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	90                   	nop$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a <vector72>:$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	6a 00                	push   $0x0$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	6a 48                	push   $0x48$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	e9 27 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	90                   	nop$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84 <vector73>:$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	6a 00                	push   $0x0$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	6a 49                	push   $0x49$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	e9 1d 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	90                   	nop$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e <vector74>:$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	6a 00                	push   $0x0$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	6a 4a                	push   $0x4a$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	e9 13 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	90                   	nop$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98 <vector75>:$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	6a 00                	push   $0x0$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	6a 4b                	push   $0x4b$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	e9 09 08 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	90                   	nop$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2 <vector76>:$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	6a 00                	push   $0x0$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	6a 4c                	push   $0x4c$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	e9 ff 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	90                   	nop$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac <vector77>:$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	6a 00                	push   $0x0$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	6a 4d                	push   $0x4d$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	e9 f5 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	90                   	nop$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6 <vector78>:$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	6a 00                	push   $0x0$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	6a 4e                	push   $0x4e$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	e9 eb 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	90                   	nop$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0 <vector79>:$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	6a 00                	push   $0x0$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	6a 4f                	push   $0x4f$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	e9 e1 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	90                   	nop$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca <vector80>:$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	6a 00                	push   $0x0$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	6a 50                	push   $0x50$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	e9 d7 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	90                   	nop$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4 <vector81>:$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	6a 00                	push   $0x0$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	6a 51                	push   $0x51$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	e9 cd 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	90                   	nop$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede <vector82>:$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	6a 00                	push   $0x0$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	6a 52                	push   $0x52$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	e9 c3 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	90                   	nop$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8 <vector83>:$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	6a 00                	push   $0x0$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	6a 53                	push   $0x53$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	e9 b9 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	90                   	nop$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2 <vector84>:$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	6a 00                	push   $0x0$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	6a 54                	push   $0x54$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	e9 af 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	90                   	nop$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc <vector85>:$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	6a 00                	push   $0x0$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	6a 55                	push   $0x55$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	e9 a5 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	90                   	nop$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06 <vector86>:$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	6a 00                	push   $0x0$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	6a 56                	push   $0x56$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	e9 9b 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	90                   	nop$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10 <vector87>:$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	6a 00                	push   $0x0$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	6a 57                	push   $0x57$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	e9 91 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	90                   	nop$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a <vector88>:$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	6a 00                	push   $0x0$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	6a 58                	push   $0x58$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	e9 87 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	90                   	nop$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24 <vector89>:$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	6a 00                	push   $0x0$/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	6a 59                	push   $0x59$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	e9 7d 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	90                   	nop$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e <vector90>:$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	6a 00                	push   $0x0$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	6a 5a                	push   $0x5a$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	e9 73 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	90                   	nop$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38 <vector91>:$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	6a 00                	push   $0x0$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	6a 5b                	push   $0x5b$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	e9 69 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	90                   	nop$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42 <vector92>:$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	6a 00                	push   $0x0$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	6a 5c                	push   $0x5c$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	e9 5f 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	90                   	nop$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c <vector93>:$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	6a 00                	push   $0x0$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	6a 5d                	push   $0x5d$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	e9 55 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	90                   	nop$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56 <vector94>:$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	6a 00                	push   $0x0$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	6a 5e                	push   $0x5e$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	e9 4b 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	90                   	nop$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60 <vector95>:$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	6a 00                	push   $0x0$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	6a 5f                	push   $0x5f$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	e9 41 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f69	obj/kern/kernel.asm	/^f0104f69:	90                   	nop$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a <vector96>:$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	6a 00                	push   $0x0$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	6a 60                	push   $0x60$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	e9 37 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	90                   	nop$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74 <vector97>:$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	6a 00                	push   $0x0$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	6a 61                	push   $0x61$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	e9 2d 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	90                   	nop$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e <vector98>:$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	6a 00                	push   $0x0$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	6a 62                	push   $0x62$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	e9 23 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	90                   	nop$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88 <vector99>:$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	6a 00                	push   $0x0$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	6a 63                	push   $0x63$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	e9 19 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	90                   	nop$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92 <vector100>:$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	6a 00                	push   $0x0$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	6a 64                	push   $0x64$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	e9 0f 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	90                   	nop$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c <vector101>:$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	6a 00                	push   $0x0$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	6a 65                	push   $0x65$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	e9 05 07 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	90                   	nop$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6 <vector102>:$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	6a 00                	push   $0x0$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	6a 66                	push   $0x66$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	e9 fb 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	90                   	nop$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0 <vector103>:$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	6a 00                	push   $0x0$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	6a 67                	push   $0x67$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	e9 f1 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	90                   	nop$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba <vector104>:$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	6a 00                	push   $0x0$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	6a 68                	push   $0x68$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	e9 e7 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	90                   	nop$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4 <vector105>:$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	6a 00                	push   $0x0$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	6a 69                	push   $0x69$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	e9 dd 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	90                   	nop$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce <vector106>:$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	6a 00                	push   $0x0$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	6a 6a                	push   $0x6a$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	e9 d3 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	90                   	nop$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8 <vector107>:$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	6a 00                	push   $0x0$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	6a 6b                	push   $0x6b$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	e9 c9 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	90                   	nop$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2 <vector108>:$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	6a 00                	push   $0x0$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	6a 6c                	push   $0x6c$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	e9 bf 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	90                   	nop$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec <vector109>:$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	6a 00                	push   $0x0$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	6a 6d                	push   $0x6d$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	e9 b5 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	90                   	nop$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6 <vector110>:$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	6a 00                	push   $0x0$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	6a 6e                	push   $0x6e$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	e9 ab 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	90                   	nop$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000 <vector111>:$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	6a 00                	push   $0x0$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	6a 6f                	push   $0x6f$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	e9 a1 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	90                   	nop$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a <vector112>:$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	6a 00                	push   $0x0$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	6a 70                	push   $0x70$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	e9 97 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	90                   	nop$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014 <vector113>:$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	6a 00                	push   $0x0$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	6a 71                	push   $0x71$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	e9 8d 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	90                   	nop$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e <vector114>:$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	6a 00                	push   $0x0$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	6a 72                	push   $0x72$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	e9 83 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	90                   	nop$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028 <vector115>:$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	6a 00                	push   $0x0$/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a:	6a 73                	push   $0x73$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	e9 79 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	90                   	nop$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032 <vector116>:$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	6a 00                	push   $0x0$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	6a 74                	push   $0x74$/;"	l
f0105036	obj/kern/kernel.asm	/^f0105036:	e9 6f 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	90                   	nop$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c <vector117>:$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	6a 00                	push   $0x0$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	6a 75                	push   $0x75$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	e9 65 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	90                   	nop$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046 <vector118>:$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	6a 00                	push   $0x0$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	6a 76                	push   $0x76$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	e9 5b 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	90                   	nop$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050 <vector119>:$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050:	6a 00                	push   $0x0$/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	6a 77                	push   $0x77$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	e9 51 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	90                   	nop$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a <vector120>:$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a:	6a 00                	push   $0x0$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	6a 78                	push   $0x78$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	e9 47 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	90                   	nop$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064 <vector121>:$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	6a 00                	push   $0x0$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	6a 79                	push   $0x79$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	e9 3d 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	90                   	nop$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e <vector122>:$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	6a 00                	push   $0x0$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	6a 7a                	push   $0x7a$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	e9 33 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	90                   	nop$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078 <vector123>:$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	6a 00                	push   $0x0$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	6a 7b                	push   $0x7b$/;"	l
f010507c	obj/kern/kernel.asm	/^f010507c:	e9 29 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105081	obj/kern/kernel.asm	/^f0105081:	90                   	nop$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082 <vector124>:$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	6a 00                	push   $0x0$/;"	l
f0105084	obj/kern/kernel.asm	/^f0105084:	6a 7c                	push   $0x7c$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	e9 1f 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	90                   	nop$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c <vector125>:$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	6a 00                	push   $0x0$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	6a 7d                	push   $0x7d$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	e9 15 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	90                   	nop$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096 <vector126>:$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	6a 00                	push   $0x0$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	6a 7e                	push   $0x7e$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	e9 0b 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	90                   	nop$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0 <vector127>:$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	6a 00                	push   $0x0$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	6a 7f                	push   $0x7f$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	e9 01 06 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	90                   	nop$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa <vector128>:$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	6a 00                	push   $0x0$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	68 80 00 00 00       	push   $0x80$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	e9 f4 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6 <vector129>:$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	6a 00                	push   $0x0$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	68 81 00 00 00       	push   $0x81$/;"	l
f01050bd	obj/kern/kernel.asm	/^f01050bd:	e9 e8 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2 <vector130>:$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	6a 00                	push   $0x0$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	68 82 00 00 00       	push   $0x82$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	e9 dc 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce <vector131>:$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	6a 00                	push   $0x0$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	68 83 00 00 00       	push   $0x83$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	e9 d0 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da <vector132>:$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	6a 00                	push   $0x0$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	68 84 00 00 00       	push   $0x84$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	e9 c4 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6 <vector133>:$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	6a 00                	push   $0x0$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	68 85 00 00 00       	push   $0x85$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	e9 b8 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2 <vector134>:$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	6a 00                	push   $0x0$/;"	l
f01050f4	obj/kern/kernel.asm	/^f01050f4:	68 86 00 00 00       	push   $0x86$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	e9 ac 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe <vector135>:$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	6a 00                	push   $0x0$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	68 87 00 00 00       	push   $0x87$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	e9 a0 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a <vector136>:$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	6a 00                	push   $0x0$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	68 88 00 00 00       	push   $0x88$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	e9 94 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116 <vector137>:$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	6a 00                	push   $0x0$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	68 89 00 00 00       	push   $0x89$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	e9 88 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105122	obj/kern/kernel.asm	/^f0105122 <vector138>:$/;"	l
f0105122	obj/kern/kernel.asm	/^f0105122:	6a 00                	push   $0x0$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	68 8a 00 00 00       	push   $0x8a$/;"	l
f0105129	obj/kern/kernel.asm	/^f0105129:	e9 7c 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e <vector139>:$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	6a 00                	push   $0x0$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	68 8b 00 00 00       	push   $0x8b$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	e9 70 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a <vector140>:$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	6a 00                	push   $0x0$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	68 8c 00 00 00       	push   $0x8c$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	e9 64 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146 <vector141>:$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	6a 00                	push   $0x0$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	68 8d 00 00 00       	push   $0x8d$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	e9 58 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152 <vector142>:$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	6a 00                	push   $0x0$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	68 8e 00 00 00       	push   $0x8e$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	e9 4c 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e <vector143>:$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	6a 00                	push   $0x0$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	68 8f 00 00 00       	push   $0x8f$/;"	l
f0105165	obj/kern/kernel.asm	/^f0105165:	e9 40 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a <vector144>:$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	6a 00                	push   $0x0$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	68 90 00 00 00       	push   $0x90$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	e9 34 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176 <vector145>:$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	6a 00                	push   $0x0$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	68 91 00 00 00       	push   $0x91$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	e9 28 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182 <vector146>:$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	6a 00                	push   $0x0$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	68 92 00 00 00       	push   $0x92$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	e9 1c 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e <vector147>:$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	6a 00                	push   $0x0$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	68 93 00 00 00       	push   $0x93$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	e9 10 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a <vector148>:$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	6a 00                	push   $0x0$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	68 94 00 00 00       	push   $0x94$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	e9 04 05 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6 <vector149>:$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	6a 00                	push   $0x0$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	68 95 00 00 00       	push   $0x95$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	e9 f8 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2 <vector150>:$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	6a 00                	push   $0x0$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	68 96 00 00 00       	push   $0x96$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	e9 ec 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be <vector151>:$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	6a 00                	push   $0x0$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	68 97 00 00 00       	push   $0x97$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	e9 e0 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca <vector152>:$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	6a 00                	push   $0x0$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	68 98 00 00 00       	push   $0x98$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	e9 d4 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6 <vector153>:$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	6a 00                	push   $0x0$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	68 99 00 00 00       	push   $0x99$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	e9 c8 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2 <vector154>:$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	6a 00                	push   $0x0$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	68 9a 00 00 00       	push   $0x9a$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	e9 bc 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee <vector155>:$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	6a 00                	push   $0x0$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	68 9b 00 00 00       	push   $0x9b$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	e9 b0 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa <vector156>:$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	6a 00                	push   $0x0$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	68 9c 00 00 00       	push   $0x9c$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	e9 a4 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206 <vector157>:$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	6a 00                	push   $0x0$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	68 9d 00 00 00       	push   $0x9d$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	e9 98 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212 <vector158>:$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	6a 00                	push   $0x0$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	68 9e 00 00 00       	push   $0x9e$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	e9 8c 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e <vector159>:$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	6a 00                	push   $0x0$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	68 9f 00 00 00       	push   $0x9f$/;"	l
f0105225	obj/kern/kernel.asm	/^f0105225:	e9 80 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a <vector160>:$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	6a 00                	push   $0x0$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	68 a0 00 00 00       	push   $0xa0$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	e9 74 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105236	obj/kern/kernel.asm	/^f0105236 <vector161>:$/;"	l
f0105236	obj/kern/kernel.asm	/^f0105236:	6a 00                	push   $0x0$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	68 a1 00 00 00       	push   $0xa1$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	e9 68 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242 <vector162>:$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	6a 00                	push   $0x0$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	68 a2 00 00 00       	push   $0xa2$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	e9 5c 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e <vector163>:$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	6a 00                	push   $0x0$/;"	l
f0105250	obj/kern/kernel.asm	/^f0105250:	68 a3 00 00 00       	push   $0xa3$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	e9 50 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a <vector164>:$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	6a 00                	push   $0x0$/;"	l
f010525c	obj/kern/kernel.asm	/^f010525c:	68 a4 00 00 00       	push   $0xa4$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	e9 44 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266 <vector165>:$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	6a 00                	push   $0x0$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	68 a5 00 00 00       	push   $0xa5$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	e9 38 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272 <vector166>:$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	6a 00                	push   $0x0$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	68 a6 00 00 00       	push   $0xa6$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	e9 2c 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e <vector167>:$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	6a 00                	push   $0x0$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	68 a7 00 00 00       	push   $0xa7$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	e9 20 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a <vector168>:$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	6a 00                	push   $0x0$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	68 a8 00 00 00       	push   $0xa8$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	e9 14 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296 <vector169>:$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	6a 00                	push   $0x0$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	68 a9 00 00 00       	push   $0xa9$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	e9 08 04 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2 <vector170>:$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	6a 00                	push   $0x0$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	68 aa 00 00 00       	push   $0xaa$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	e9 fc 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae <vector171>:$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	6a 00                	push   $0x0$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	68 ab 00 00 00       	push   $0xab$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	e9 f0 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba <vector172>:$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	6a 00                	push   $0x0$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	68 ac 00 00 00       	push   $0xac$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	e9 e4 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6 <vector173>:$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	6a 00                	push   $0x0$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	68 ad 00 00 00       	push   $0xad$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	e9 d8 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2 <vector174>:$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	6a 00                	push   $0x0$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	68 ae 00 00 00       	push   $0xae$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	e9 cc 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de <vector175>:$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	6a 00                	push   $0x0$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	68 af 00 00 00       	push   $0xaf$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	e9 c0 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea <vector176>:$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	6a 00                	push   $0x0$/;"	l
f01052ec	obj/kern/kernel.asm	/^f01052ec:	68 b0 00 00 00       	push   $0xb0$/;"	l
f01052f1	obj/kern/kernel.asm	/^f01052f1:	e9 b4 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6 <vector177>:$/;"	l
f01052f6	obj/kern/kernel.asm	/^f01052f6:	6a 00                	push   $0x0$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	68 b1 00 00 00       	push   $0xb1$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	e9 a8 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302 <vector178>:$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	6a 00                	push   $0x0$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	68 b2 00 00 00       	push   $0xb2$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	e9 9c 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e <vector179>:$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e:	6a 00                	push   $0x0$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	68 b3 00 00 00       	push   $0xb3$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	e9 90 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a <vector180>:$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	6a 00                	push   $0x0$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	68 b4 00 00 00       	push   $0xb4$/;"	l
f0105321	obj/kern/kernel.asm	/^f0105321:	e9 84 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326 <vector181>:$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	6a 00                	push   $0x0$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	68 b5 00 00 00       	push   $0xb5$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	e9 78 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332 <vector182>:$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	6a 00                	push   $0x0$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	68 b6 00 00 00       	push   $0xb6$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	e9 6c 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e <vector183>:$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	6a 00                	push   $0x0$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	68 b7 00 00 00       	push   $0xb7$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	e9 60 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a <vector184>:$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a:	6a 00                	push   $0x0$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	68 b8 00 00 00       	push   $0xb8$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	e9 54 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356 <vector185>:$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	6a 00                	push   $0x0$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	68 b9 00 00 00       	push   $0xb9$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	e9 48 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362 <vector186>:$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	6a 00                	push   $0x0$/;"	l
f0105364	obj/kern/kernel.asm	/^f0105364:	68 ba 00 00 00       	push   $0xba$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	e9 3c 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e <vector187>:$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	6a 00                	push   $0x0$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	68 bb 00 00 00       	push   $0xbb$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	e9 30 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a <vector188>:$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	6a 00                	push   $0x0$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	68 bc 00 00 00       	push   $0xbc$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	e9 24 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386 <vector189>:$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	6a 00                	push   $0x0$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	68 bd 00 00 00       	push   $0xbd$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	e9 18 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392 <vector190>:$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	6a 00                	push   $0x0$/;"	l
f0105394	obj/kern/kernel.asm	/^f0105394:	68 be 00 00 00       	push   $0xbe$/;"	l
f0105399	obj/kern/kernel.asm	/^f0105399:	e9 0c 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e <vector191>:$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	6a 00                	push   $0x0$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	68 bf 00 00 00       	push   $0xbf$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	e9 00 03 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa <vector192>:$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	6a 00                	push   $0x0$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	68 c0 00 00 00       	push   $0xc0$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	e9 f4 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6 <vector193>:$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	6a 00                	push   $0x0$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	68 c1 00 00 00       	push   $0xc1$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	e9 e8 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2 <vector194>:$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	6a 00                	push   $0x0$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	68 c2 00 00 00       	push   $0xc2$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	e9 dc 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce <vector195>:$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	6a 00                	push   $0x0$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	68 c3 00 00 00       	push   $0xc3$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	e9 d0 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da <vector196>:$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	6a 00                	push   $0x0$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	68 c4 00 00 00       	push   $0xc4$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	e9 c4 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6 <vector197>:$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	6a 00                	push   $0x0$/;"	l
f01053e8	obj/kern/kernel.asm	/^f01053e8:	68 c5 00 00 00       	push   $0xc5$/;"	l
f01053ed	obj/kern/kernel.asm	/^f01053ed:	e9 b8 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2 <vector198>:$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	6a 00                	push   $0x0$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	68 c6 00 00 00       	push   $0xc6$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	e9 ac 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe <vector199>:$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	6a 00                	push   $0x0$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	68 c7 00 00 00       	push   $0xc7$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	e9 a0 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a <vector200>:$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a:	6a 00                	push   $0x0$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	68 c8 00 00 00       	push   $0xc8$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	e9 94 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416 <vector201>:$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	6a 00                	push   $0x0$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	68 c9 00 00 00       	push   $0xc9$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	e9 88 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422 <vector202>:$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	6a 00                	push   $0x0$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	68 ca 00 00 00       	push   $0xca$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	e9 7c 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e <vector203>:$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	6a 00                	push   $0x0$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	68 cb 00 00 00       	push   $0xcb$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	e9 70 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a <vector204>:$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	6a 00                	push   $0x0$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	68 cc 00 00 00       	push   $0xcc$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	e9 64 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446 <vector205>:$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	6a 00                	push   $0x0$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	68 cd 00 00 00       	push   $0xcd$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	e9 58 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452 <vector206>:$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	6a 00                	push   $0x0$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	68 ce 00 00 00       	push   $0xce$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	e9 4c 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e <vector207>:$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	6a 00                	push   $0x0$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	68 cf 00 00 00       	push   $0xcf$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	e9 40 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010546a	obj/kern/kernel.asm	/^f010546a <vector208>:$/;"	l
f010546a	obj/kern/kernel.asm	/^f010546a:	6a 00                	push   $0x0$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	68 d0 00 00 00       	push   $0xd0$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	e9 34 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476 <vector209>:$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	6a 00                	push   $0x0$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	68 d1 00 00 00       	push   $0xd1$/;"	l
f010547d	obj/kern/kernel.asm	/^f010547d:	e9 28 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482 <vector210>:$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	6a 00                	push   $0x0$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	68 d2 00 00 00       	push   $0xd2$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	e9 1c 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e <vector211>:$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	6a 00                	push   $0x0$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	68 d3 00 00 00       	push   $0xd3$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	e9 10 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a <vector212>:$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	6a 00                	push   $0x0$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	68 d4 00 00 00       	push   $0xd4$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	e9 04 02 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6 <vector213>:$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	6a 00                	push   $0x0$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	68 d5 00 00 00       	push   $0xd5$/;"	l
f01054ad	obj/kern/kernel.asm	/^f01054ad:	e9 f8 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2 <vector214>:$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	6a 00                	push   $0x0$/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	68 d6 00 00 00       	push   $0xd6$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	e9 ec 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be <vector215>:$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	6a 00                	push   $0x0$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	68 d7 00 00 00       	push   $0xd7$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	e9 e0 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca <vector216>:$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	6a 00                	push   $0x0$/;"	l
f01054cc	obj/kern/kernel.asm	/^f01054cc:	68 d8 00 00 00       	push   $0xd8$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	e9 d4 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6 <vector217>:$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	6a 00                	push   $0x0$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	68 d9 00 00 00       	push   $0xd9$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	e9 c8 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2 <vector218>:$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	6a 00                	push   $0x0$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	68 da 00 00 00       	push   $0xda$/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	e9 bc 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee <vector219>:$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	6a 00                	push   $0x0$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	68 db 00 00 00       	push   $0xdb$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	e9 b0 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa <vector220>:$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	6a 00                	push   $0x0$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	68 dc 00 00 00       	push   $0xdc$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	e9 a4 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506 <vector221>:$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	6a 00                	push   $0x0$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	68 dd 00 00 00       	push   $0xdd$/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	e9 98 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512 <vector222>:$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	6a 00                	push   $0x0$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	68 de 00 00 00       	push   $0xde$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	e9 8c 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e <vector223>:$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	6a 00                	push   $0x0$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	68 df 00 00 00       	push   $0xdf$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	e9 80 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a <vector224>:$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	6a 00                	push   $0x0$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	68 e0 00 00 00       	push   $0xe0$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	e9 74 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536 <vector225>:$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	6a 00                	push   $0x0$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	68 e1 00 00 00       	push   $0xe1$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	e9 68 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542 <vector226>:$/;"	l
f0105542	obj/kern/kernel.asm	/^f0105542:	6a 00                	push   $0x0$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	68 e2 00 00 00       	push   $0xe2$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	e9 5c 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e <vector227>:$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	6a 00                	push   $0x0$/;"	l
f0105550	obj/kern/kernel.asm	/^f0105550:	68 e3 00 00 00       	push   $0xe3$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	e9 50 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a <vector228>:$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	6a 00                	push   $0x0$/;"	l
f010555c	obj/kern/kernel.asm	/^f010555c:	68 e4 00 00 00       	push   $0xe4$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	e9 44 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566 <vector229>:$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	6a 00                	push   $0x0$/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	68 e5 00 00 00       	push   $0xe5$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	e9 38 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572 <vector230>:$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	6a 00                	push   $0x0$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	68 e6 00 00 00       	push   $0xe6$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	e9 2c 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e <vector231>:$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	6a 00                	push   $0x0$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	68 e7 00 00 00       	push   $0xe7$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	e9 20 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010558a	obj/kern/kernel.asm	/^f010558a <vector232>:$/;"	l
f010558a	obj/kern/kernel.asm	/^f010558a:	6a 00                	push   $0x0$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	68 e8 00 00 00       	push   $0xe8$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	e9 14 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596 <vector233>:$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	6a 00                	push   $0x0$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	68 e9 00 00 00       	push   $0xe9$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	e9 08 01 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2 <vector234>:$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	6a 00                	push   $0x0$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	68 ea 00 00 00       	push   $0xea$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	e9 fc 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae <vector235>:$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	6a 00                	push   $0x0$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	68 eb 00 00 00       	push   $0xeb$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	e9 f0 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba <vector236>:$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	6a 00                	push   $0x0$/;"	l
f01055bc	obj/kern/kernel.asm	/^f01055bc:	68 ec 00 00 00       	push   $0xec$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	e9 e4 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6 <vector237>:$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	6a 00                	push   $0x0$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	68 ed 00 00 00       	push   $0xed$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	e9 d8 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2 <vector238>:$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	6a 00                	push   $0x0$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	68 ee 00 00 00       	push   $0xee$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	e9 cc 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de <vector239>:$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	6a 00                	push   $0x0$/;"	l
f01055e0	obj/kern/kernel.asm	/^f01055e0:	68 ef 00 00 00       	push   $0xef$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	e9 c0 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea <vector240>:$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	6a 00                	push   $0x0$/;"	l
f01055ec	obj/kern/kernel.asm	/^f01055ec:	68 f0 00 00 00       	push   $0xf0$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	e9 b4 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6 <vector241>:$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	6a 00                	push   $0x0$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	68 f1 00 00 00       	push   $0xf1$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	e9 a8 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602 <vector242>:$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	6a 00                	push   $0x0$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	68 f2 00 00 00       	push   $0xf2$/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	e9 9c 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010560e	obj/kern/kernel.asm	/^f010560e <vector243>:$/;"	l
f010560e	obj/kern/kernel.asm	/^f010560e:	6a 00                	push   $0x0$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	68 f3 00 00 00       	push   $0xf3$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	e9 90 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a <vector244>:$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	6a 00                	push   $0x0$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	68 f4 00 00 00       	push   $0xf4$/;"	l
f0105621	obj/kern/kernel.asm	/^f0105621:	e9 84 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626 <vector245>:$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	6a 00                	push   $0x0$/;"	l
f0105628	obj/kern/kernel.asm	/^f0105628:	68 f5 00 00 00       	push   $0xf5$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	e9 78 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632 <vector246>:$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	6a 00                	push   $0x0$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	68 f6 00 00 00       	push   $0xf6$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	e9 6c 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e <vector247>:$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	6a 00                	push   $0x0$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	68 f7 00 00 00       	push   $0xf7$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	e9 60 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a <vector248>:$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	6a 00                	push   $0x0$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	68 f8 00 00 00       	push   $0xf8$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	e9 54 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656 <vector249>:$/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656:	6a 00                	push   $0x0$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	68 f9 00 00 00       	push   $0xf9$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	e9 48 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662 <vector250>:$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	6a 00                	push   $0x0$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	68 fa 00 00 00       	push   $0xfa$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	e9 3c 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e <vector251>:$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	6a 00                	push   $0x0$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	68 fb 00 00 00       	push   $0xfb$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	e9 30 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a <vector252>:$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	6a 00                	push   $0x0$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	68 fc 00 00 00       	push   $0xfc$/;"	l
f0105681	obj/kern/kernel.asm	/^f0105681:	e9 24 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686 <vector253>:$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	6a 00                	push   $0x0$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	68 fd 00 00 00       	push   $0xfd$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	e9 18 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692 <vector254>:$/;"	l
f0105692	obj/kern/kernel.asm	/^f0105692:	6a 00                	push   $0x0$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	68 fe 00 00 00       	push   $0xfe$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	e9 0c 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e <vector255>:$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	6a 00                	push   $0x0$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	68 ff 00 00 00       	push   $0xff$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	e9 00 00 00 00       	jmp    f01056aa <_alltraps>$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa <_alltraps>:$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	1e                   	push   %ds$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	06                   	push   %es$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	60                   	pusha  $/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	8e d8                	mov    %eax,%ds$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	8e c0                	mov    %eax,%es$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	54                   	push   %esp$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	e8 6f f2 ff ff       	call   f010492a <trap>$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	90                   	nop$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc <sched_halt>:$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	55                   	push   %ebp$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	8b 15 48 92 2b f0    	mov    0xf02b9248,%edx$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f01056d0	obj/kern/kernel.asm	/^f01056d0:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	76 0f                	jbe    f01056e7 <sched_halt+0x2b>$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	75 e8                	jne    f01056cd <sched_halt+0x11>$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	eb 07                	jmp    f01056ee <sched_halt+0x32>$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	75 1a                	jne    f0105708 <sched_halt+0x4c>$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	c7 04 24 90 9b 10 f0 	movl   $0xf0109b90,(%esp)$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	e8 c4 ec ff ff       	call   f01043be <cprintf>$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	e8 15 b7 ff ff       	call   f0100e1b <monitor>$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	eb f2                	jmp    f01056fa <sched_halt+0x3e>$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	e8 2f 1a 00 00       	call   f010713c <cpunum>$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	c7 80 28 10 30 f0 00 	movl   $0x0,-0xfcfefd8(%eax)$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	00 00 00 $/;"	l
f010571a	obj/kern/kernel.asm	/^f010571a:	a1 78 06 30 f0       	mov    0xf0300678,%eax$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	77 20                	ja     f0105746 <sched_halt+0x8a>$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	f0 $/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%esp)$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	00 $/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	c7 04 24 b9 9b 10 f0 	movl   $0xf0109bb9,(%esp)$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	e8 fa a8 ff ff       	call   f0100040 <_panic>$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	e8 e9 19 00 00       	call   f010713c <cpunum>$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	81 c2 20 10 30 f0    	add    $0xf0301020,%edx$/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	c7 04 24 c0 67 12 f0 	movl   $0xf01267c0,(%esp)$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	e8 f6 1c 00 00       	call   f0107467 <spin_unlock>$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	f3 90                	pause  $/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	e8 c4 19 00 00       	call   f010713c <cpunum>$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	8b 80 30 10 30 f0    	mov    -0xfcfefd0(%eax),%eax$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	89 c4                	mov    %eax,%esp$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	6a 00                	push   $0x0$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	6a 00                	push   $0x0$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	fb                   	sti    $/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	f4                   	hlt    $/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	eb fd                	jmp    f010578d <sched_halt+0xd1>$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	c9                   	leave  $/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	c3                   	ret    $/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792 <sched_yield>:$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	55                   	push   %ebp$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	89 e5                	mov    %esp,%ebp$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	53                   	push   %ebx$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	e8 9e 19 00 00       	call   f010713c <cpunum>$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	83 ba 28 10 30 f0 00 	cmpl   $0x0,-0xfcfefd8(%edx)$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	74 19                	je     f01057c8 <sched_yield+0x36>$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	e8 88 19 00 00       	call   f010713c <cpunum>$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	8d 40 01             	lea    0x1(%eax),%eax$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	8b 1d 48 92 2b f0    	mov    0xf02b9248,%ebx$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	6b c8 7c             	imul   $0x7c,%eax,%ecx$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	01 d9                	add    %ebx,%ecx$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	75 08                	jne    f01057e6 <sched_yield+0x54>$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	e8 7e e9 ff ff       	call   f0104164 <env_run>$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01057e9	obj/kern/kernel.asm	/^f01057e9:	89 c1                	mov    %eax,%ecx$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	01 c8                	add    %ecx,%eax$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	29 c8                	sub    %ecx,%eax$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	75 d4                	jne    f01057d3 <sched_yield+0x41>$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	e8 38 19 00 00       	call   f010713c <cpunum>$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	83 b8 28 10 30 f0 00 	cmpl   $0x0,-0xfcfefd8(%eax)$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	74 2a                	je     f010583a <sched_yield+0xa8>$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	e8 27 19 00 00       	call   f010713c <cpunum>$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	75 16                	jne    f010583a <sched_yield+0xa8>$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	e8 13 19 00 00       	call   f010713c <cpunum>$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	e8 2a e9 ff ff       	call   f0104164 <env_run>$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	e8 7d fe ff ff       	call   f01056bc <sched_halt>$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	5b                   	pop    %ebx$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	5d                   	pop    %ebp$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	c3                   	ret    $/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	66 90                	xchg   %ax,%ax$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	66 90                	xchg   %ax,%ax$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	66 90                	xchg   %ax,%ax$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	66 90                	xchg   %ax,%ax$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	66 90                	xchg   %ax,%ax$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	90                   	nop$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850 <syscall>:$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	55                   	push   %ebp$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	89 e5                	mov    %esp,%ebp$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	57                   	push   %edi$/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	56                   	push   %esi$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	53                   	push   %ebx$/;"	l
f0105856	obj/kern/kernel.asm	/^f0105856:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105859	obj/kern/kernel.asm	/^f0105859:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010585c	obj/kern/kernel.asm	/^f010585c:	83 f8 10             	cmp    $0x10,%eax$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	0f 87 20 06 00 00    	ja     f0105e85 <syscall+0x635>$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	ff 24 85 f4 9b 10 f0 	jmp    *-0xfef640c(,%eax,4)$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	e8 cb 18 00 00       	call   f010713c <cpunum>$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	00 $/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	e8 28 e1 ff ff       	call   f01039c0 <user_mem_assert>$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010589b	obj/kern/kernel.asm	/^f010589b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	c7 04 24 c6 9b 10 f0 	movl   $0xf0109bc6,(%esp)$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	e8 0c eb ff ff       	call   f01043be <cprintf>$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	e9 d5 05 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	e8 94 ad ff ff       	call   f0100655 <cons_getc>$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	e9 cb 05 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	00 $/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	e8 1a e2 ff ff       	call   f0103afa <envid2env>$/;"	l
f01058e0	obj/kern/kernel.asm	/^f01058e0:	89 c2                	mov    %eax,%edx$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	85 c0                	test   %eax,%eax$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	78 10                	js     f01058f6 <syscall+0xa6>$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01058e9	obj/kern/kernel.asm	/^f01058e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	e8 d2 e7 ff ff       	call   f01040c3 <env_destroy>$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	89 d0                	mov    %edx,%eax$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	e9 94 05 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	e8 3a 18 00 00       	call   f010713c <cpunum>$/;"	l
f0105902	obj/kern/kernel.asm	/^f0105902:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	e9 7e 05 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	e8 7a fe ff ff       	call   f0105792 <sched_yield>$/;"	l
f0105918	obj/kern/kernel.asm	/^f0105918:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	00 $/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	e8 c8 e1 ff ff       	call   f0103afa <envid2env>$/;"	l
f0105932	obj/kern/kernel.asm	/^f0105932:	85 c0                	test   %eax,%eax$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	78 68                	js     f010599e <syscall+0x14e>$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	77 63                	ja     f01059a2 <syscall+0x152>$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	75 61                	jne    f01059a9 <syscall+0x159>$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	75 5b                	jne    f01059b0 <syscall+0x160>$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	e8 8c bb ff ff       	call   f01014ed <page_alloc>$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	89 c3                	mov    %eax,%ebx$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	85 c0                	test   %eax,%eax$/;"	l
f0105965	obj/kern/kernel.asm	/^f0105965:	74 50                	je     f01059b7 <syscall+0x167>$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010596e	obj/kern/kernel.asm	/^f010596e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105975	obj/kern/kernel.asm	/^f0105975:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010597c	obj/kern/kernel.asm	/^f010597c:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010597f	obj/kern/kernel.asm	/^f010597f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	e8 96 be ff ff       	call   f010181d <page_insert>$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	89 c6                	mov    %eax,%esi$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	85 c0                	test   %eax,%eax$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	79 2a                	jns    f01059bc <syscall+0x16c>$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	e8 d7 bb ff ff       	call   f0101571 <page_free>$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	89 f2                	mov    %esi,%edx$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	eb 1e                	jmp    f01059bc <syscall+0x16c>$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	89 c2                	mov    %eax,%edx$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	eb 1a                	jmp    f01059bc <syscall+0x16c>$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	eb 13                	jmp    f01059bc <syscall+0x16c>$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	eb 0c                	jmp    f01059bc <syscall+0x16c>$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	eb 05                	jmp    f01059bc <syscall+0x16c>$/;"	l
f01059b7	obj/kern/kernel.asm	/^f01059b7:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f01059bc	obj/kern/kernel.asm	/^f01059bc:	89 d0                	mov    %edx,%eax$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	e9 ce 04 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	00 $/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01059ce	obj/kern/kernel.asm	/^f01059ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	e8 1d e1 ff ff       	call   f0103afa <envid2env>$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	89 c2                	mov    %eax,%edx$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	85 c0                	test   %eax,%eax$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	0f 88 e6 00 00 00    	js     f0105acd <syscall+0x27d>$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	00 $/;"	l
f01059ef	obj/kern/kernel.asm	/^f01059ef:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01059f9	obj/kern/kernel.asm	/^f01059f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	e8 f9 e0 ff ff       	call   f0103afa <envid2env>$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	85 c0                	test   %eax,%eax$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	0f 88 91 00 00 00    	js     f0105a9a <syscall+0x24a>$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	0f 87 88 00 00 00    	ja     f0105a9e <syscall+0x24e>$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	0f 85 82 00 00 00    	jne    f0105aa5 <syscall+0x255>$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	77 7e                	ja     f0105aac <syscall+0x25c>$/;"	l
f0105a2e	obj/kern/kernel.asm	/^f0105a2e:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	75 7d                	jne    f0105ab3 <syscall+0x263>$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	75 77                	jne    f0105aba <syscall+0x26a>$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105a57	obj/kern/kernel.asm	/^f0105a57:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a5a	obj/kern/kernel.asm	/^f0105a5a:	e8 bd bc ff ff       	call   f010171c <page_lookup>$/;"	l
f0105a5f	obj/kern/kernel.asm	/^f0105a5f:	85 c0                	test   %eax,%eax$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	74 5e                	je     f0105ac1 <syscall+0x271>$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0105a67	obj/kern/kernel.asm	/^f0105a67:	74 08                	je     f0105a71 <syscall+0x221>$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105a6c	obj/kern/kernel.asm	/^f0105a6c:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	74 57                	je     f0105ac8 <syscall+0x278>$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	8b 4d 1c             	mov    0x1c(%ebp),%ecx$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	e8 8f bd ff ff       	call   f010181d <page_insert>$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	85 c0                	test   %eax,%eax$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	0f 4e d0             	cmovle %eax,%edx$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	eb 33                	jmp    f0105acd <syscall+0x27d>$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	89 c2                	mov    %eax,%edx$/;"	l
f0105a9c	obj/kern/kernel.asm	/^f0105a9c:	eb 2f                	jmp    f0105acd <syscall+0x27d>$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	eb 28                	jmp    f0105acd <syscall+0x27d>$/;"	l
f0105aa5	obj/kern/kernel.asm	/^f0105aa5:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	eb 21                	jmp    f0105acd <syscall+0x27d>$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	eb 1a                	jmp    f0105acd <syscall+0x27d>$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	eb 13                	jmp    f0105acd <syscall+0x27d>$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf:	eb 0c                	jmp    f0105acd <syscall+0x27d>$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	eb 05                	jmp    f0105acd <syscall+0x27d>$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	89 d0                	mov    %edx,%eax$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	e9 bd 03 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	00 $/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	e8 0c e0 ff ff       	call   f0103afa <envid2env>$/;"	l
f0105aee	obj/kern/kernel.asm	/^f0105aee:	85 c0                	test   %eax,%eax$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	0f 88 9b 03 00 00    	js     f0105e91 <syscall+0x641>$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	77 28                	ja     f0105b27 <syscall+0x2d7>$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	75 29                	jne    f0105b31 <syscall+0x2e1>$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b12	obj/kern/kernel.asm	/^f0105b12:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	e8 ac bc ff ff       	call   f01017c9 <page_remove>$/;"	l
f0105b1d	obj/kern/kernel.asm	/^f0105b1d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	e9 6a 03 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	e9 60 03 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	e9 56 03 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	e8 fc 15 00 00       	call   f010713c <cpunum>$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	e8 b0 e0 ff ff       	call   f0103c0b <env_alloc>$/;"	l
f0105b5b	obj/kern/kernel.asm	/^f0105b5b:	89 c2                	mov    %eax,%edx$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	85 c0                	test   %eax,%eax$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	78 2e                	js     f0105b8f <syscall+0x33f>$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0105b6b	obj/kern/kernel.asm	/^f0105b6b:	e8 cc 15 00 00       	call   f010713c <cpunum>$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	8b b0 28 10 30 f0    	mov    -0xfcfefd8(%eax),%esi$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	89 df                	mov    %ebx,%edi$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f:	89 d0                	mov    %edx,%eax$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	e9 fb 02 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	00 $/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	e8 4a df ff ff       	call   f0103afa <envid2env>$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	85 c0                	test   %eax,%eax$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	0f 88 d9 02 00 00    	js     f0105e91 <syscall+0x641>$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	83 7d 10 04          	cmpl   $0x4,0x10(%ebp)$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	74 06                	je     f0105bc4 <syscall+0x374>$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	75 13                	jne    f0105bd7 <syscall+0x387>$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	89 48 54             	mov    %ecx,0x54(%eax)$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	e9 ba 02 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	e9 b0 02 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	00 $/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	e8 ff de ff ff       	call   f0103afa <envid2env>$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	85 c0                	test   %eax,%eax$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	0f 88 8e 02 00 00    	js     f0105e91 <syscall+0x641>$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105c09	obj/kern/kernel.asm	/^f0105c09:	89 78 64             	mov    %edi,0x64(%eax)$/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c11	obj/kern/kernel.asm	/^f0105c11:	e9 7b 02 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105c16	obj/kern/kernel.asm	/^f0105c16:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	00 $/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	e8 ca de ff ff       	call   f0103afa <envid2env>$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	85 c0                	test   %eax,%eax$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	0f 88 59 02 00 00    	js     f0105e91 <syscall+0x641>$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	0f 84 da 00 00 00    	je     f0105d1f <syscall+0x4cf>$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	81 78 6c ff ff bf ee 	cmpl   $0xeebfffff,0x6c(%eax)$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	77 7f                	ja     f0105ccd <syscall+0x47d>$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	77 7f                	ja     f0105cd6 <syscall+0x486>$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	0f 85 c5 00 00 00    	jne    f0105d29 <syscall+0x4d9>$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	0f 85 be 00 00 00    	jne    f0105d33 <syscall+0x4e3>$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	e8 c2 14 00 00       	call   f010713c <cpunum>$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105c81	obj/kern/kernel.asm	/^f0105c81:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	e8 80 ba ff ff       	call   f010171c <page_lookup>$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	85 c0                	test   %eax,%eax$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	0f 84 99 00 00 00    	je     f0105d3d <syscall+0x4ed>$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105ca7	obj/kern/kernel.asm	/^f0105ca7:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cbf	obj/kern/kernel.asm	/^f0105cbf:	e8 59 bb ff ff       	call   f010181d <page_insert>$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	85 c0                	test   %eax,%eax$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	79 15                	jns    f0105cdd <syscall+0x48d>$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	e9 c4 01 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	c7 45 18 00 00 00 00 	movl   $0x0,0x18(%ebp)$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	eb 07                	jmp    f0105cdd <syscall+0x48d>$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	c7 45 18 00 00 00 00 	movl   $0x0,0x18(%ebp)$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	e8 53 14 00 00       	call   f010713c <cpunum>$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	89 43 74             	mov    %eax,0x74(%ebx)$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	89 78 70             	mov    %edi,0x70(%eax)$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	89 58 78             	mov    %ebx,0x78(%eax)$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	e9 72 01 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	e9 68 01 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	e9 5e 01 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	e9 54 01 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	e9 4a 01 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	77 0d                	ja     f0105d5d <syscall+0x50d>$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	0f 85 2f 01 00 00    	jne    f0105e8c <syscall+0x63c>$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	e8 da 13 00 00       	call   f010713c <cpunum>$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f0105d6f	obj/kern/kernel.asm	/^f0105d6f:	e8 c8 13 00 00       	call   f010713c <cpunum>$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	89 70 6c             	mov    %esi,0x6c(%eax)$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	e8 b4 13 00 00       	call   f010713c <cpunum>$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	e8 f5 f9 ff ff       	call   f0105792 <sched_yield>$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	81 fe ff ff bf ee    	cmp    $0xeebfffff,%esi$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	76 24                	jbe    f0105dcc <syscall+0x57c>$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	c7 44 24 0c cb 9b 10 	movl   $0xf0109bcb,0xc(%esp)$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	f0 $/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	f0 $/;"	l
f0105db8	obj/kern/kernel.asm	/^f0105db8:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	00 $/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	c7 04 24 e5 9b 10 f0 	movl   $0xf0109be5,(%esp)$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	e8 74 a2 ff ff       	call   f0100040 <_panic>$/;"	l
f0105dcc	obj/kern/kernel.asm	/^f0105dcc:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	00 $/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	e8 14 dd ff ff       	call   f0103afa <envid2env>$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	85 c0                	test   %eax,%eax$/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8:	0f 88 a3 00 00 00    	js     f0105e91 <syscall+0x641>$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	66 83 4e 34 03       	orw    $0x3,0x34(%esi)$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	81 4e 38 00 02 00 00 	orl    $0x200,0x38(%esi)$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	e9 83 00 00 00       	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	e8 b6 21 00 00       	call   f0107fc9 <time_msec>$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	eb 7c                	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e15	obj/kern/kernel.asm	/^f0105e15:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	77 21                	ja     f0105e3f <syscall+0x5ef>$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	3d 00 00 c0 ee       	cmp    $0xeec00000,%eax$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	77 1b                	ja     f0105e46 <syscall+0x5f6>$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e32	obj/kern/kernel.asm	/^f0105e32:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	e8 84 19 00 00       	call   f01077c1 <e1000_transmit>$/;"	l
f0105e3d	obj/kern/kernel.asm	/^f0105e3d:	eb 52                	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	eb 4b                	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	eb 44                	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	77 21                	ja     f0105e77 <syscall+0x627>$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	3d 00 00 c0 ee       	cmp    $0xeec00000,%eax$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	77 1b                	ja     f0105e7e <syscall+0x62e>$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	e8 e8 19 00 00       	call   f010785d <e1000_receive>$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	eb 1a                	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	eb 13                	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	eb 0c                	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	eb 05                	jmp    f0105e91 <syscall+0x641>$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	5b                   	pop    %ebx$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	5e                   	pop    %esi$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	5f                   	pop    %edi$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	5d                   	pop    %ebp$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	c3                   	ret    $/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	66 90                	xchg   %ax,%ax$/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b:	90                   	nop$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c <stab_binsearch>:$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	55                   	push   %ebp$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	57                   	push   %edi$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	56                   	push   %esi$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	53                   	push   %ebx$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105ea8	obj/kern/kernel.asm	/^f0105ea8:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	e9 88 00 00 00       	jmp    f0105f4c <stab_binsearch+0xb0>$/;"	l
f0105ec4	obj/kern/kernel.asm	/^f0105ec4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	01 d8                	add    %ebx,%eax$/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	89 c7                	mov    %eax,%edi$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	01 c7                	add    %eax,%edi$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	d1 ff                	sar    %edi$/;"	d
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	89 f8                	mov    %edi,%eax$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	eb 03                	jmp    f0105ee2 <stab_binsearch+0x46>$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	7f 1f                	jg     f0105f05 <stab_binsearch+0x69>$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	75 ee                	jne    f0105edf <stab_binsearch+0x43>$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	76 18                	jbe    f0105f1b <stab_binsearch+0x7f>$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	eb 05                	jmp    f0105f0a <stab_binsearch+0x6e>$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	eb 42                	jmp    f0105f4c <stab_binsearch+0xb0>$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	eb 31                	jmp    f0105f4c <stab_binsearch+0xb0>$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	73 17                	jae    f0105f37 <stab_binsearch+0x9b>$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	89 07                	mov    %eax,(%edi)$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	eb 15                	jmp    f0105f4c <stab_binsearch+0xb0>$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0105f3d	obj/kern/kernel.asm	/^f0105f3d:	89 1f                	mov    %ebx,(%edi)$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	89 c3                	mov    %eax,%ebx$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	0f 8e 6f ff ff ff    	jle    f0105ec4 <stab_binsearch+0x28>$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	75 0f                	jne    f0105f6a <stab_binsearch+0xce>$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	8b 00                	mov    (%eax),%eax$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	89 07                	mov    %eax,(%edi)$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	eb 2c                	jmp    f0105f96 <stab_binsearch+0xfa>$/;"	l
f0105f6a	obj/kern/kernel.asm	/^f0105f6a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	8b 00                	mov    (%eax),%eax$/;"	l
f0105f6f	obj/kern/kernel.asm	/^f0105f6f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	eb 03                	jmp    f0105f82 <stab_binsearch+0xe6>$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	7e 0b                	jle    f0105f91 <stab_binsearch+0xf5>$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	75 ee                	jne    f0105f7f <stab_binsearch+0xe3>$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	89 07                	mov    %eax,(%edi)$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	5b                   	pop    %ebx$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	5e                   	pop    %esi$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	5f                   	pop    %edi$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	5d                   	pop    %ebp$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	c3                   	ret    $/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e <debuginfo_eip>:$/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e:	55                   	push   %ebp$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fa1	obj/kern/kernel.asm	/^f0105fa1:	57                   	push   %edi$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	56                   	push   %esi$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	53                   	push   %ebx$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	c7 07 38 9c 10 f0    	movl   $0xf0109c38,(%edi)$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	c7 47 08 38 9c 10 f0 	movl   $0xf0109c38,0x8(%edi)$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	0f 87 c1 00 00 00    	ja     f010609f <debuginfo_eip+0x101>$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	e8 59 11 00 00       	call   f010713c <cpunum>$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	00 $/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105ff2	obj/kern/kernel.asm	/^f0105ff2:	00 $/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	00 $/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106007	obj/kern/kernel.asm	/^f0106007:	e8 07 d9 ff ff       	call   f0103913 <user_mem_check>$/;"	l
f010600c	obj/kern/kernel.asm	/^f010600c:	85 c0                	test   %eax,%eax$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	0f 88 51 02 00 00    	js     f0106265 <debuginfo_eip+0x2c7>$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f0106022	obj/kern/kernel.asm	/^f0106022:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	e8 04 11 00 00       	call   f010713c <cpunum>$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f:	00 $/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	89 da                	mov    %ebx,%edx$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	29 ca                	sub    %ecx,%edx$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	e8 b3 d8 ff ff       	call   f0103913 <user_mem_check>$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	85 c0                	test   %eax,%eax$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	0f 88 04 02 00 00    	js     f010626c <debuginfo_eip+0x2ce>$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	e8 cf 10 00 00       	call   f010713c <cpunum>$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	00 $/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0106078	obj/kern/kernel.asm	/^f0106078:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	29 ca                	sub    %ecx,%edx$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	8b 80 28 10 30 f0    	mov    -0xfcfefd8(%eax),%eax$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	e8 7d d8 ff ff       	call   f0103913 <user_mem_check>$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	85 c0                	test   %eax,%eax$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	79 1f                	jns    f01060b9 <debuginfo_eip+0x11b>$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	e9 d4 01 00 00       	jmp    f0106273 <debuginfo_eip+0x2d5>$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	c7 45 bc db b5 11 f0 	movl   $0xf011b5db,-0x44(%ebp)$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	c7 45 c0 f1 70 11 f0 	movl   $0xf01170f1,-0x40(%ebp)$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	bb f0 70 11 f0       	mov    $0xf01170f0,%ebx$/;"	l
f01060b2	obj/kern/kernel.asm	/^f01060b2:	c7 45 c4 d8 a4 10 f0 	movl   $0xf010a4d8,-0x3c(%ebp)$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	39 45 c0             	cmp    %eax,-0x40(%ebp)$/;"	l
f01060bf	obj/kern/kernel.asm	/^f01060bf:	0f 83 b5 01 00 00    	jae    f010627a <debuginfo_eip+0x2dc>$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	0f 85 b2 01 00 00    	jne    f0106281 <debuginfo_eip+0x2e3>$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	2b 5d c4             	sub    -0x3c(%ebp),%ebx$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f01060e2	obj/kern/kernel.asm	/^f01060e2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f01060f6	obj/kern/kernel.asm	/^f01060f6:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	89 d8                	mov    %ebx,%eax$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	e8 99 fd ff ff       	call   f0105e9c <stab_binsearch>$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	85 c0                	test   %eax,%eax$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	0f 84 7a 01 00 00    	je     f0106288 <debuginfo_eip+0x2ea>$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0106117	obj/kern/kernel.asm	/^f0106117:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0106128	obj/kern/kernel.asm	/^f0106128:	89 d8                	mov    %ebx,%eax$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	e8 6d fd ff ff       	call   f0105e9c <stab_binsearch>$/;"	l
f010612f	obj/kern/kernel.asm	/^f010612f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	7f 32                	jg     f010616b <debuginfo_eip+0x1cd>$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	8d 14 91             	lea    (%ecx,%edx,4),%edx$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	2b 4d c0             	sub    -0x40(%ebp),%ecx$/;"	l
f010614d	obj/kern/kernel.asm	/^f010614d:	39 4d b8             	cmp    %ecx,-0x48(%ebp)$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	73 09                	jae    f010615b <debuginfo_eip+0x1bd>$/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	89 4f 08             	mov    %ecx,0x8(%edi)$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f010615e	obj/kern/kernel.asm	/^f010615e:	89 57 10             	mov    %edx,0x10(%edi)$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	29 d6                	sub    %edx,%esi$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	eb 0f                	jmp    f010617a <debuginfo_eip+0x1dc>$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010617a	obj/kern/kernel.asm	/^f010617a:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	00 $/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	e8 3e 09 00 00       	call   f0106acb <strfind>$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f010619e	obj/kern/kernel.asm	/^f010619e:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	89 f0                	mov    %esi,%eax$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	e8 ee fc ff ff       	call   f0105e9c <stab_binsearch>$/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	0f 8f d5 00 00 00    	jg     f010628f <debuginfo_eip+0x2f1>$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	89 c3                	mov    %eax,%ebx$/;"	l
f01061ca	obj/kern/kernel.asm	/^f01061ca:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01061cd	obj/kern/kernel.asm	/^f01061cd:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	89 df                	mov    %ebx,%edi$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	eb 06                	jmp    f01061e0 <debuginfo_eip+0x242>$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	89 c6                	mov    %eax,%esi$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	39 c7                	cmp    %eax,%edi$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	7f 3c                	jg     f0106222 <debuginfo_eip+0x284>$/;"	l
f01061e6	obj/kern/kernel.asm	/^f01061e6:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f01061ea	obj/kern/kernel.asm	/^f01061ea:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	75 08                	jne    f01061f7 <debuginfo_eip+0x259>$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	eb 11                	jmp    f0106208 <debuginfo_eip+0x26a>$/;"	l
f01061f7	obj/kern/kernel.asm	/^f01061f7:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	75 de                	jne    f01061da <debuginfo_eip+0x23c>$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0106200	obj/kern/kernel.asm	/^f0106200:	74 d8                	je     f01061da <debuginfo_eip+0x23c>$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f010620b	obj/kern/kernel.asm	/^f010620b:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f010620e	obj/kern/kernel.asm	/^f010620e:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	39 d0                	cmp    %edx,%eax$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	73 0a                	jae    f0106225 <debuginfo_eip+0x287>$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	89 07                	mov    %eax,(%edi)$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	eb 03                	jmp    f0106225 <debuginfo_eip+0x287>$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	39 da                	cmp    %ebx,%edx$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	7d 67                	jge    f010629b <debuginfo_eip+0x2fd>$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010623a	obj/kern/kernel.asm	/^f010623a:	89 d0                	mov    %edx,%eax$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f010623f	obj/kern/kernel.asm	/^f010623f:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	eb 04                	jmp    f010624b <debuginfo_eip+0x2ad>$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	7e 47                	jle    f0106296 <debuginfo_eip+0x2f8>$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	74 e9                	je     f0106247 <debuginfo_eip+0x2a9>$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	eb 36                	jmp    f010629b <debuginfo_eip+0x2fd>$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	eb 2f                	jmp    f010629b <debuginfo_eip+0x2fd>$/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106271	obj/kern/kernel.asm	/^f0106271:	eb 28                	jmp    f010629b <debuginfo_eip+0x2fd>$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	eb 21                	jmp    f010629b <debuginfo_eip+0x2fd>$/;"	l
f010627a	obj/kern/kernel.asm	/^f010627a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	eb 1a                	jmp    f010629b <debuginfo_eip+0x2fd>$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	eb 13                	jmp    f010629b <debuginfo_eip+0x2fd>$/;"	l
f0106288	obj/kern/kernel.asm	/^f0106288:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	eb 0c                	jmp    f010629b <debuginfo_eip+0x2fd>$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	eb 05                	jmp    f010629b <debuginfo_eip+0x2fd>$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	5b                   	pop    %ebx$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	5e                   	pop    %esi$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	5f                   	pop    %edi$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	5d                   	pop    %ebp$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	c3                   	ret    $/;"	l
f01062a3	obj/kern/kernel.asm	/^f01062a3:	66 90                	xchg   %ax,%ax$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	66 90                	xchg   %ax,%ax$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	66 90                	xchg   %ax,%ax$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	66 90                	xchg   %ax,%ax$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	66 90                	xchg   %ax,%ax$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	66 90                	xchg   %ax,%ax$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	90                   	nop$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0 <printnum>:$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	55                   	push   %ebp$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	57                   	push   %edi$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	56                   	push   %esi$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	53                   	push   %ebx$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01062bc	obj/kern/kernel.asm	/^f01062bc:	89 d7                	mov    %edx,%edi$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01062c4	obj/kern/kernel.asm	/^f01062c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	89 c3                	mov    %eax,%ebx$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01062d2	obj/kern/kernel.asm	/^f01062d2:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	39 d9                	cmp    %ebx,%ecx$/;"	l
f01062df	obj/kern/kernel.asm	/^f01062df:	72 05                	jb     f01062e6 <printnum+0x36>$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	77 69                	ja     f010634f <printnum+0x9f>$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01062f8	obj/kern/kernel.asm	/^f01062f8:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	89 c3                	mov    %eax,%ebx$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	89 d6                	mov    %edx,%esi$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0106312	obj/kern/kernel.asm	/^f0106312:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010631f	obj/kern/kernel.asm	/^f010631f:	e8 bc 1c 00 00       	call   f0107fe0 <__udivdi3>$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010632e	obj/kern/kernel.asm	/^f010632e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	89 fa                	mov    %edi,%edx$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	e8 71 ff ff ff       	call   f01062b0 <printnum>$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	eb 1b                	jmp    f010635c <printnum+0xac>$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106345	obj/kern/kernel.asm	/^f0106345:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	ff d3                	call   *%ebx$/;"	l
f010634d	obj/kern/kernel.asm	/^f010634d:	eb 03                	jmp    f0106352 <printnum+0xa2>$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106355	obj/kern/kernel.asm	/^f0106355:	85 f6                	test   %esi,%esi$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	7f e8                	jg     f0106341 <printnum+0x91>$/;"	l
f0106359	obj/kern/kernel.asm	/^f0106359:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106364	obj/kern/kernel.asm	/^f0106364:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f:	e8 8c 1d 00 00       	call   f0108110 <__umoddi3>$/;"	l
f0106384	obj/kern/kernel.asm	/^f0106384:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	0f be 80 42 9c 10 f0 	movsbl -0xfef63be(%eax),%eax$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106392	obj/kern/kernel.asm	/^f0106392:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	ff d0                	call   *%eax$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010639a	obj/kern/kernel.asm	/^f010639a:	5b                   	pop    %ebx$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	5e                   	pop    %esi$/;"	l
f010639c	obj/kern/kernel.asm	/^f010639c:	5f                   	pop    %edi$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	5d                   	pop    %ebp$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	c3                   	ret    $/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f <getuint>:$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f:	55                   	push   %ebp$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	7e 0e                	jle    f01063b5 <getuint+0x16>$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	8b 10                	mov    (%eax),%edx$/;"	l
f01063a9	obj/kern/kernel.asm	/^f01063a9:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f01063ac	obj/kern/kernel.asm	/^f01063ac:	89 08                	mov    %ecx,(%eax)$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	8b 02                	mov    (%edx),%eax$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	eb 22                	jmp    f01063d7 <getuint+0x38>$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	85 d2                	test   %edx,%edx$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	74 10                	je     f01063c9 <getuint+0x2a>$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	8b 10                	mov    (%eax),%edx$/;"	l
f01063bb	obj/kern/kernel.asm	/^f01063bb:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	89 08                	mov    %ecx,(%eax)$/;"	l
f01063c0	obj/kern/kernel.asm	/^f01063c0:	8b 02                	mov    (%edx),%eax$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	eb 0e                	jmp    f01063d7 <getuint+0x38>$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	8b 10                	mov    (%eax),%edx$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01063ce	obj/kern/kernel.asm	/^f01063ce:	89 08                	mov    %ecx,(%eax)$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	8b 02                	mov    (%edx),%eax$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01063d7	obj/kern/kernel.asm	/^f01063d7:	5d                   	pop    %ebp$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	c3                   	ret    $/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9 <sprintputch>:$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	55                   	push   %ebp$/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	89 e5                	mov    %esp,%ebp$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	8b 10                	mov    (%eax),%edx$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f01063e8	obj/kern/kernel.asm	/^f01063e8:	73 0a                	jae    f01063f4 <sprintputch+0x1b>$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	89 08                	mov    %ecx,(%eax)$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	88 02                	mov    %al,(%edx)$/;"	l
f01063f4	obj/kern/kernel.asm	/^f01063f4:	5d                   	pop    %ebp$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	c3                   	ret    $/;"	l
f01063f6	obj/kern/kernel.asm	/^f01063f6 <printfmt>:$/;"	l
f01063f6	obj/kern/kernel.asm	/^f01063f6:	55                   	push   %ebp$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	89 e5                	mov    %esp,%ebp$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01063fc	obj/kern/kernel.asm	/^f01063fc:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	e8 02 00 00 00       	call   f010641e <vprintfmt>$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	c9                   	leave  $/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	c3                   	ret    $/;"	l
f010641e	obj/kern/kernel.asm	/^f010641e <vprintfmt>:$/;"	l
f010641e	obj/kern/kernel.asm	/^f010641e:	55                   	push   %ebp$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421:	57                   	push   %edi$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	56                   	push   %esi$/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423:	53                   	push   %ebx$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	eb 14                	jmp    f0106443 <vprintfmt+0x25>$/;"	l
f010642f	obj/kern/kernel.asm	/^f010642f:	85 c0                	test   %eax,%eax$/;"	l
f0106431	obj/kern/kernel.asm	/^f0106431:	0f 84 b3 03 00 00    	je     f01067ea <vprintfmt+0x3cc>$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441:	89 f3                	mov    %esi,%ebx$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0106446	obj/kern/kernel.asm	/^f0106446:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106449	obj/kern/kernel.asm	/^f0106449:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	75 e1                	jne    f010642f <vprintfmt+0x11>$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	eb 1d                	jmp    f010648b <vprintfmt+0x6d>$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	89 de                	mov    %ebx,%esi$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	eb 15                	jmp    f010648b <vprintfmt+0x6d>$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	89 de                	mov    %ebx,%esi$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	eb 0d                	jmp    f010648b <vprintfmt+0x6d>$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	83 e9 23             	sub    $0x23,%ecx$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	80 f9 55             	cmp    $0x55,%cl$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	0f 87 2a 03 00 00    	ja     f01067ca <vprintfmt+0x3ac>$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01064a3	obj/kern/kernel.asm	/^f01064a3:	ff 24 8d c0 9d 10 f0 	jmp    *-0xfef6240(,%ecx,4)$/;"	l
f01064aa	obj/kern/kernel.asm	/^f01064aa:	89 de                	mov    %ebx,%esi$/;"	l
f01064ac	obj/kern/kernel.asm	/^f01064ac:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	8d 0c 89             	lea    (%ecx,%ecx,4),%ecx$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	8d 4c 48 d0          	lea    -0x30(%eax,%ecx,2),%ecx$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	0f be 06             	movsbl (%esi),%eax$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	8d 58 d0             	lea    -0x30(%eax),%ebx$/;"	l
f01064be	obj/kern/kernel.asm	/^f01064be:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f01064c1	obj/kern/kernel.asm	/^f01064c1:	77 36                	ja     f01064f9 <vprintfmt+0xdb>$/;"	l
f01064c3	obj/kern/kernel.asm	/^f01064c3:	83 c6 01             	add    $0x1,%esi$/;"	l
f01064c6	obj/kern/kernel.asm	/^f01064c6:	eb e9                	jmp    f01064b1 <vprintfmt+0x93>$/;"	l
f01064c8	obj/kern/kernel.asm	/^f01064c8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01064cb	obj/kern/kernel.asm	/^f01064cb:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	8b 00                	mov    (%eax),%eax$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	89 de                	mov    %ebx,%esi$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	eb 22                	jmp    f01064fc <vprintfmt+0xde>$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	85 c9                	test   %ecx,%ecx$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f01064e7	obj/kern/kernel.asm	/^f01064e7:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	89 de                	mov    %ebx,%esi$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	eb 9d                	jmp    f010648b <vprintfmt+0x6d>$/;"	l
f01064ee	obj/kern/kernel.asm	/^f01064ee:	89 de                	mov    %ebx,%esi$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f01064f7	obj/kern/kernel.asm	/^f01064f7:	eb 92                	jmp    f010648b <vprintfmt+0x6d>$/;"	l
f01064f9	obj/kern/kernel.asm	/^f01064f9:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	79 89                	jns    f010648b <vprintfmt+0x6d>$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	e9 77 ff ff ff       	jmp    f010647e <vprintfmt+0x60>$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	83 c2 01             	add    $0x1,%edx$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	89 de                	mov    %ebx,%esi$/;"	l
f010650c	obj/kern/kernel.asm	/^f010650c:	e9 7a ff ff ff       	jmp    f010648b <vprintfmt+0x6d>$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106517	obj/kern/kernel.asm	/^f0106517:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	8b 00                	mov    (%eax),%eax$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	e9 18 ff ff ff       	jmp    f0106443 <vprintfmt+0x25>$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106534	obj/kern/kernel.asm	/^f0106534:	8b 00                	mov    (%eax),%eax$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	99                   	cltd   $/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	31 d0                	xor    %edx,%eax$/;"	l
f0106539	obj/kern/kernel.asm	/^f0106539:	29 d0                	sub    %edx,%eax$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	83 f8 12             	cmp    $0x12,%eax$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	7f 0b                	jg     f010654b <vprintfmt+0x12d>$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	8b 14 85 20 9f 10 f0 	mov    -0xfef60e0(,%eax,4),%edx$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	85 d2                	test   %edx,%edx$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	75 20                	jne    f010656b <vprintfmt+0x14d>$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	c7 44 24 08 5a 9c 10 	movl   $0xf0109c5a,0x8(%esp)$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	f0 $/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010655e	obj/kern/kernel.asm	/^f010655e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	e8 90 fe ff ff       	call   f01063f6 <printfmt>$/;"	l
f0106566	obj/kern/kernel.asm	/^f0106566:	e9 d8 fe ff ff       	jmp    f0106443 <vprintfmt+0x25>$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010656f	obj/kern/kernel.asm	/^f010656f:	c7 44 24 08 71 93 10 	movl   $0xf0109371,0x8(%esp)$/;"	l
f0106576	obj/kern/kernel.asm	/^f0106576:	f0 $/;"	l
f0106577	obj/kern/kernel.asm	/^f0106577:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010657e	obj/kern/kernel.asm	/^f010657e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	e8 70 fe ff ff       	call   f01063f6 <printfmt>$/;"	l
f0106586	obj/kern/kernel.asm	/^f0106586:	e9 b8 fe ff ff       	jmp    f0106443 <vprintfmt+0x25>$/;"	l
f010658b	obj/kern/kernel.asm	/^f010658b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010658e	obj/kern/kernel.asm	/^f010658e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0106594	obj/kern/kernel.asm	/^f0106594:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	8b 30                	mov    (%eax),%esi$/;"	l
f010659f	obj/kern/kernel.asm	/^f010659f:	85 f6                	test   %esi,%esi$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	b8 53 9c 10 f0       	mov    $0xf0109c53,%eax$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f01065a9	obj/kern/kernel.asm	/^f01065a9:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	0f 84 97 00 00 00    	je     f010664a <vprintfmt+0x22c>$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	0f 8e 9b 00 00 00    	jle    f0106658 <vprintfmt+0x23a>$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01065c1	obj/kern/kernel.asm	/^f01065c1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	e8 af 03 00 00       	call   f0106978 <strnlen>$/;"	l
f01065c9	obj/kern/kernel.asm	/^f01065c9:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01065cc	obj/kern/kernel.asm	/^f01065cc:	29 c2                	sub    %eax,%edx$/;"	l
f01065ce	obj/kern/kernel.asm	/^f01065ce:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f01065d5	obj/kern/kernel.asm	/^f01065d5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01065d8	obj/kern/kernel.asm	/^f01065d8:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	89 d3                	mov    %edx,%ebx$/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	eb 0f                	jmp    f01065f4 <vprintfmt+0x1d6>$/;"	l
f01065e5	obj/kern/kernel.asm	/^f01065e5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01065e9	obj/kern/kernel.asm	/^f01065e9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	ff d6                	call   *%esi$/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	85 db                	test   %ebx,%ebx$/;"	l
f01065f6	obj/kern/kernel.asm	/^f01065f6:	7f ed                	jg     f01065e5 <vprintfmt+0x1c7>$/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01065fe	obj/kern/kernel.asm	/^f01065fe:	85 d2                	test   %edx,%edx$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106605	obj/kern/kernel.asm	/^f0106605:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	29 c2                	sub    %eax,%edx$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f010660d	obj/kern/kernel.asm	/^f010660d:	89 d7                	mov    %edx,%edi$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0106612	obj/kern/kernel.asm	/^f0106612:	eb 50                	jmp    f0106664 <vprintfmt+0x246>$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0106618	obj/kern/kernel.asm	/^f0106618:	74 1e                	je     f0106638 <vprintfmt+0x21a>$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	0f be d2             	movsbl %dl,%edx$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	83 ea 20             	sub    $0x20,%edx$/;"	l
f0106620	obj/kern/kernel.asm	/^f0106620:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0106623	obj/kern/kernel.asm	/^f0106623:	76 13                	jbe    f0106638 <vprintfmt+0x21a>$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010662c	obj/kern/kernel.asm	/^f010662c:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	eb 0d                	jmp    f0106645 <vprintfmt+0x227>$/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010663b	obj/kern/kernel.asm	/^f010663b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106642	obj/kern/kernel.asm	/^f0106642:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	eb 1a                	jmp    f0106664 <vprintfmt+0x246>$/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0106656	obj/kern/kernel.asm	/^f0106656:	eb 0c                	jmp    f0106664 <vprintfmt+0x246>$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f010665b	obj/kern/kernel.asm	/^f010665b:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0106664	obj/kern/kernel.asm	/^f0106664:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f010666b	obj/kern/kernel.asm	/^f010666b:	0f be c2             	movsbl %dl,%eax$/;"	l
f010666e	obj/kern/kernel.asm	/^f010666e:	85 c0                	test   %eax,%eax$/;"	l
f0106670	obj/kern/kernel.asm	/^f0106670:	74 27                	je     f0106699 <vprintfmt+0x27b>$/;"	l
f0106672	obj/kern/kernel.asm	/^f0106672:	85 db                	test   %ebx,%ebx$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	78 9e                	js     f0106614 <vprintfmt+0x1f6>$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	79 99                	jns    f0106614 <vprintfmt+0x1f6>$/;"	l
f010667b	obj/kern/kernel.asm	/^f010667b:	89 f8                	mov    %edi,%eax$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106683	obj/kern/kernel.asm	/^f0106683:	89 c3                	mov    %eax,%ebx$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	eb 1a                	jmp    f01066a1 <vprintfmt+0x283>$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0106692	obj/kern/kernel.asm	/^f0106692:	ff d6                	call   *%esi$/;"	l
f0106694	obj/kern/kernel.asm	/^f0106694:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	eb 08                	jmp    f01066a1 <vprintfmt+0x283>$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	89 fb                	mov    %edi,%ebx$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01066a1	obj/kern/kernel.asm	/^f01066a1:	85 db                	test   %ebx,%ebx$/;"	l
f01066a3	obj/kern/kernel.asm	/^f01066a3:	7f e2                	jg     f0106687 <vprintfmt+0x269>$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f01066a8	obj/kern/kernel.asm	/^f01066a8:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	e9 93 fd ff ff       	jmp    f0106443 <vprintfmt+0x25>$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01066b3	obj/kern/kernel.asm	/^f01066b3:	7e 16                	jle    f01066cb <vprintfmt+0x2ad>$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01066bb	obj/kern/kernel.asm	/^f01066bb:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	8b 00                	mov    (%eax),%eax$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01066c6	obj/kern/kernel.asm	/^f01066c6:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	eb 32                	jmp    f01066fd <vprintfmt+0x2df>$/;"	l
f01066cb	obj/kern/kernel.asm	/^f01066cb:	85 d2                	test   %edx,%edx$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	74 18                	je     f01066e7 <vprintfmt+0x2c9>$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01066d5	obj/kern/kernel.asm	/^f01066d5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	8b 30                	mov    (%eax),%esi$/;"	l
f01066da	obj/kern/kernel.asm	/^f01066da:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	89 f0                	mov    %esi,%eax$/;"	l
f01066df	obj/kern/kernel.asm	/^f01066df:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f01066e2	obj/kern/kernel.asm	/^f01066e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	eb 16                	jmp    f01066fd <vprintfmt+0x2df>$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01066ea	obj/kern/kernel.asm	/^f01066ea:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01066ed	obj/kern/kernel.asm	/^f01066ed:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01066f0	obj/kern/kernel.asm	/^f01066f0:	8b 30                	mov    (%eax),%esi$/;"	l
f01066f2	obj/kern/kernel.asm	/^f01066f2:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f01066f5	obj/kern/kernel.asm	/^f01066f5:	89 f0                	mov    %esi,%eax$/;"	l
f01066f7	obj/kern/kernel.asm	/^f01066f7:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106700	obj/kern/kernel.asm	/^f0106700:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010670c	obj/kern/kernel.asm	/^f010670c:	0f 89 80 00 00 00    	jns    f0106792 <vprintfmt+0x374>$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106723	obj/kern/kernel.asm	/^f0106723:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	f7 d8                	neg    %eax$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	83 d2 00             	adc    $0x0,%edx$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	f7 da                	neg    %edx$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	eb 5e                	jmp    f0106792 <vprintfmt+0x374>$/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106737	obj/kern/kernel.asm	/^f0106737:	e8 63 fc ff ff       	call   f010639f <getuint>$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0106741	obj/kern/kernel.asm	/^f0106741:	eb 4f                	jmp    f0106792 <vprintfmt+0x374>$/;"	l
f0106743	obj/kern/kernel.asm	/^f0106743:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	e8 54 fc ff ff       	call   f010639f <getuint>$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	eb 40                	jmp    f0106792 <vprintfmt+0x374>$/;"	l
f0106752	obj/kern/kernel.asm	/^f0106752:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106756	obj/kern/kernel.asm	/^f0106756:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f010675d	obj/kern/kernel.asm	/^f010675d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106760	obj/kern/kernel.asm	/^f0106760:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106764	obj/kern/kernel.asm	/^f0106764:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010676e	obj/kern/kernel.asm	/^f010676e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106774	obj/kern/kernel.asm	/^f0106774:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106777	obj/kern/kernel.asm	/^f0106777:	8b 00                	mov    (%eax),%eax$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010677e	obj/kern/kernel.asm	/^f010677e:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106783	obj/kern/kernel.asm	/^f0106783:	eb 0d                	jmp    f0106792 <vprintfmt+0x374>$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788:	e8 12 fc ff ff       	call   f010639f <getuint>$/;"	l
f010678d	obj/kern/kernel.asm	/^f010678d:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01067a1	obj/kern/kernel.asm	/^f01067a1:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01067a8	obj/kern/kernel.asm	/^f01067a8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01067ac	obj/kern/kernel.asm	/^f01067ac:	89 fa                	mov    %edi,%edx$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01067b1	obj/kern/kernel.asm	/^f01067b1:	e8 fa fa ff ff       	call   f01062b0 <printnum>$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	e9 88 fc ff ff       	jmp    f0106443 <vprintfmt+0x25>$/;"	l
f01067bb	obj/kern/kernel.asm	/^f01067bb:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01067bf	obj/kern/kernel.asm	/^f01067bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01067c5	obj/kern/kernel.asm	/^f01067c5:	e9 79 fc ff ff       	jmp    f0106443 <vprintfmt+0x25>$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f01067d5	obj/kern/kernel.asm	/^f01067d5:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01067d8	obj/kern/kernel.asm	/^f01067d8:	89 f3                	mov    %esi,%ebx$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	eb 03                	jmp    f01067df <vprintfmt+0x3c1>$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01067df	obj/kern/kernel.asm	/^f01067df:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	75 f7                	jne    f01067dc <vprintfmt+0x3be>$/;"	l
f01067e5	obj/kern/kernel.asm	/^f01067e5:	e9 59 fc ff ff       	jmp    f0106443 <vprintfmt+0x25>$/;"	l
f01067ea	obj/kern/kernel.asm	/^f01067ea:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	5b                   	pop    %ebx$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	5e                   	pop    %esi$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	5f                   	pop    %edi$/;"	l
f01067f0	obj/kern/kernel.asm	/^f01067f0:	5d                   	pop    %ebp$/;"	l
f01067f1	obj/kern/kernel.asm	/^f01067f1:	c3                   	ret    $/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2 <vsnprintf>:$/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2:	55                   	push   %ebp$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0106805	obj/kern/kernel.asm	/^f0106805:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	85 c0                	test   %eax,%eax$/;"	l
f0106811	obj/kern/kernel.asm	/^f0106811:	74 30                	je     f0106843 <vsnprintf+0x51>$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	85 d2                	test   %edx,%edx$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	7e 2c                	jle    f0106843 <vsnprintf+0x51>$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010681a	obj/kern/kernel.asm	/^f010681a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106825	obj/kern/kernel.asm	/^f0106825:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	c7 04 24 d9 63 10 f0 	movl   $0xf01063d9,(%esp)$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	e8 e6 fb ff ff       	call   f010641e <vprintfmt>$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010683e	obj/kern/kernel.asm	/^f010683e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106841	obj/kern/kernel.asm	/^f0106841:	eb 05                	jmp    f0106848 <vsnprintf+0x56>$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106848	obj/kern/kernel.asm	/^f0106848:	c9                   	leave  $/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	c3                   	ret    $/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a <snprintf>:$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	55                   	push   %ebp$/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	89 e5                	mov    %esp,%ebp$/;"	l
f010684d	obj/kern/kernel.asm	/^f010684d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106850	obj/kern/kernel.asm	/^f0106850:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106857	obj/kern/kernel.asm	/^f0106857:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010685e	obj/kern/kernel.asm	/^f010685e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106861	obj/kern/kernel.asm	/^f0106861:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106865	obj/kern/kernel.asm	/^f0106865:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010686b	obj/kern/kernel.asm	/^f010686b:	e8 82 ff ff ff       	call   f01067f2 <vsnprintf>$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870:	c9                   	leave  $/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	c3                   	ret    $/;"	l
f0106872	obj/kern/kernel.asm	/^f0106872:	66 90                	xchg   %ax,%ax$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	66 90                	xchg   %ax,%ax$/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	66 90                	xchg   %ax,%ax$/;"	l
f0106878	obj/kern/kernel.asm	/^f0106878:	66 90                	xchg   %ax,%ax$/;"	l
f010687a	obj/kern/kernel.asm	/^f010687a:	66 90                	xchg   %ax,%ax$/;"	l
f010687c	obj/kern/kernel.asm	/^f010687c:	66 90                	xchg   %ax,%ax$/;"	l
f010687e	obj/kern/kernel.asm	/^f010687e:	66 90                	xchg   %ax,%ax$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880 <readline>:$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880:	55                   	push   %ebp$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	89 e5                	mov    %esp,%ebp$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	57                   	push   %edi$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	56                   	push   %esi$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	53                   	push   %ebx$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106889	obj/kern/kernel.asm	/^f0106889:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	85 c0                	test   %eax,%eax$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	74 10                	je     f01068a0 <readline+0x20>$/;"	l
f0106890	obj/kern/kernel.asm	/^f0106890:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106894	obj/kern/kernel.asm	/^f0106894:	c7 04 24 71 93 10 f0 	movl   $0xf0109371,(%esp)$/;"	l
f010689b	obj/kern/kernel.asm	/^f010689b:	e8 1e db ff ff       	call   f01043be <cprintf>$/;"	l
f01068a0	obj/kern/kernel.asm	/^f01068a0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	e8 3c 9f ff ff       	call   f01007e8 <iscons>$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	89 c7                	mov    %eax,%edi$/;"	l
f01068ae	obj/kern/kernel.asm	/^f01068ae:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01068b3	obj/kern/kernel.asm	/^f01068b3:	e8 1f 9f ff ff       	call   f01007d7 <getchar>$/;"	l
f01068b8	obj/kern/kernel.asm	/^f01068b8:	89 c3                	mov    %eax,%ebx$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	85 c0                	test   %eax,%eax$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	79 25                	jns    f01068e3 <readline+0x63>$/;"	l
f01068be	obj/kern/kernel.asm	/^f01068be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f01068c6	obj/kern/kernel.asm	/^f01068c6:	0f 84 89 00 00 00    	je     f0106955 <readline+0xd5>$/;"	l
f01068cc	obj/kern/kernel.asm	/^f01068cc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	c7 04 24 8b 9f 10 f0 	movl   $0xf0109f8b,(%esp)$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	e8 e2 da ff ff       	call   f01043be <cprintf>$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068e1	obj/kern/kernel.asm	/^f01068e1:	eb 72                	jmp    f0106955 <readline+0xd5>$/;"	l
f01068e3	obj/kern/kernel.asm	/^f01068e3:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01068e6	obj/kern/kernel.asm	/^f01068e6:	74 05                	je     f01068ed <readline+0x6d>$/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	75 1a                	jne    f0106907 <readline+0x87>$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	85 f6                	test   %esi,%esi$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	90                   	nop$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	7e 15                	jle    f0106907 <readline+0x87>$/;"	l
f01068f2	obj/kern/kernel.asm	/^f01068f2:	85 ff                	test   %edi,%edi$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	74 0c                	je     f0106902 <readline+0x82>$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	e8 c5 9e ff ff       	call   f01007c7 <cputchar>$/;"	l
f0106902	obj/kern/kernel.asm	/^f0106902:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106905	obj/kern/kernel.asm	/^f0106905:	eb ac                	jmp    f01068b3 <readline+0x33>$/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	7f 1c                	jg     f010692b <readline+0xab>$/;"	l
f010690f	obj/kern/kernel.asm	/^f010690f:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	7e 17                	jle    f010692b <readline+0xab>$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	85 ff                	test   %edi,%edi$/;"	l
f0106916	obj/kern/kernel.asm	/^f0106916:	74 08                	je     f0106920 <readline+0xa0>$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	e8 a7 9e ff ff       	call   f01007c7 <cputchar>$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	88 9e 80 9a 2b f0    	mov    %bl,-0xfd46580(%esi)$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0106929	obj/kern/kernel.asm	/^f0106929:	eb 88                	jmp    f01068b3 <readline+0x33>$/;"	l
f010692b	obj/kern/kernel.asm	/^f010692b:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010692e	obj/kern/kernel.asm	/^f010692e:	74 09                	je     f0106939 <readline+0xb9>$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0106933	obj/kern/kernel.asm	/^f0106933:	0f 85 7a ff ff ff    	jne    f01068b3 <readline+0x33>$/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	85 ff                	test   %edi,%edi$/;"	l
f010693b	obj/kern/kernel.asm	/^f010693b:	74 0c                	je     f0106949 <readline+0xc9>$/;"	l
f010693d	obj/kern/kernel.asm	/^f010693d:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944:	e8 7e 9e ff ff       	call   f01007c7 <cputchar>$/;"	l
f0106949	obj/kern/kernel.asm	/^f0106949:	c6 86 80 9a 2b f0 00 	movb   $0x0,-0xfd46580(%esi)$/;"	l
f0106950	obj/kern/kernel.asm	/^f0106950:	b8 80 9a 2b f0       	mov    $0xf02b9a80,%eax$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106958	obj/kern/kernel.asm	/^f0106958:	5b                   	pop    %ebx$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	5e                   	pop    %esi$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	5f                   	pop    %edi$/;"	l
f010695b	obj/kern/kernel.asm	/^f010695b:	5d                   	pop    %ebp$/;"	l
f010695c	obj/kern/kernel.asm	/^f010695c:	c3                   	ret    $/;"	l
f010695d	obj/kern/kernel.asm	/^f010695d:	66 90                	xchg   %ax,%ax$/;"	l
f010695f	obj/kern/kernel.asm	/^f010695f:	90                   	nop$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960 <strlen>:$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	55                   	push   %ebp$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	89 e5                	mov    %esp,%ebp$/;"	l
f0106963	obj/kern/kernel.asm	/^f0106963:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010696b	obj/kern/kernel.asm	/^f010696b:	eb 03                	jmp    f0106970 <strlen+0x10>$/;"	l
f010696d	obj/kern/kernel.asm	/^f010696d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106970	obj/kern/kernel.asm	/^f0106970:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	75 f7                	jne    f010696d <strlen+0xd>$/;"	l
f0106976	obj/kern/kernel.asm	/^f0106976:	5d                   	pop    %ebp$/;"	l
f0106977	obj/kern/kernel.asm	/^f0106977:	c3                   	ret    $/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978 <strnlen>:$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978:	55                   	push   %ebp$/;"	l
f0106979	obj/kern/kernel.asm	/^f0106979:	89 e5                	mov    %esp,%ebp$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010697e	obj/kern/kernel.asm	/^f010697e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106981	obj/kern/kernel.asm	/^f0106981:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986:	eb 03                	jmp    f010698b <strnlen+0x13>$/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988:	83 c0 01             	add    $0x1,%eax$/;"	l
f010698b	obj/kern/kernel.asm	/^f010698b:	39 d0                	cmp    %edx,%eax$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	74 06                	je     f0106995 <strnlen+0x1d>$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0106993	obj/kern/kernel.asm	/^f0106993:	75 f3                	jne    f0106988 <strnlen+0x10>$/;"	l
f0106995	obj/kern/kernel.asm	/^f0106995:	5d                   	pop    %ebp$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	c3                   	ret    $/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997 <strcpy>:$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997:	55                   	push   %ebp$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	89 e5                	mov    %esp,%ebp$/;"	l
f010699a	obj/kern/kernel.asm	/^f010699a:	53                   	push   %ebx$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	89 c2                	mov    %eax,%edx$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	83 c2 01             	add    $0x1,%edx$/;"	l
f01069a6	obj/kern/kernel.asm	/^f01069a6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	84 db                	test   %bl,%bl$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	75 ef                	jne    f01069a3 <strcpy+0xc>$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	5b                   	pop    %ebx$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	5d                   	pop    %ebp$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	c3                   	ret    $/;"	l
f01069b7	obj/kern/kernel.asm	/^f01069b7 <strcat>:$/;"	l
f01069b7	obj/kern/kernel.asm	/^f01069b7:	55                   	push   %ebp$/;"	l
f01069b8	obj/kern/kernel.asm	/^f01069b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba:	53                   	push   %ebx$/;"	l
f01069bb	obj/kern/kernel.asm	/^f01069bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01069c4	obj/kern/kernel.asm	/^f01069c4:	e8 97 ff ff ff       	call   f0106960 <strlen>$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01069cc	obj/kern/kernel.asm	/^f01069cc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	01 d8                	add    %ebx,%eax$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01069d5	obj/kern/kernel.asm	/^f01069d5:	e8 bd ff ff ff       	call   f0106997 <strcpy>$/;"	l
f01069da	obj/kern/kernel.asm	/^f01069da:	89 d8                	mov    %ebx,%eax$/;"	l
f01069dc	obj/kern/kernel.asm	/^f01069dc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	5b                   	pop    %ebx$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	5d                   	pop    %ebp$/;"	l
f01069e1	obj/kern/kernel.asm	/^f01069e1:	c3                   	ret    $/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2 <strncpy>:$/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	55                   	push   %ebp$/;"	l
f01069e3	obj/kern/kernel.asm	/^f01069e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01069e5	obj/kern/kernel.asm	/^f01069e5:	56                   	push   %esi$/;"	l
f01069e6	obj/kern/kernel.asm	/^f01069e6:	53                   	push   %ebx$/;"	l
f01069e7	obj/kern/kernel.asm	/^f01069e7:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01069ed	obj/kern/kernel.asm	/^f01069ed:	89 f3                	mov    %esi,%ebx$/;"	l
f01069ef	obj/kern/kernel.asm	/^f01069ef:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	89 f2                	mov    %esi,%edx$/;"	l
f01069f4	obj/kern/kernel.asm	/^f01069f4:	eb 0f                	jmp    f0106a05 <strncpy+0x23>$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01069f9	obj/kern/kernel.asm	/^f01069f9:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01069fc	obj/kern/kernel.asm	/^f01069fc:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01069ff	obj/kern/kernel.asm	/^f01069ff:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0106a02	obj/kern/kernel.asm	/^f0106a02:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	39 da                	cmp    %ebx,%edx$/;"	l
f0106a07	obj/kern/kernel.asm	/^f0106a07:	75 ed                	jne    f01069f6 <strncpy+0x14>$/;"	l
f0106a09	obj/kern/kernel.asm	/^f0106a09:	89 f0                	mov    %esi,%eax$/;"	l
f0106a0b	obj/kern/kernel.asm	/^f0106a0b:	5b                   	pop    %ebx$/;"	l
f0106a0c	obj/kern/kernel.asm	/^f0106a0c:	5e                   	pop    %esi$/;"	l
f0106a0d	obj/kern/kernel.asm	/^f0106a0d:	5d                   	pop    %ebp$/;"	l
f0106a0e	obj/kern/kernel.asm	/^f0106a0e:	c3                   	ret    $/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f <strlcpy>:$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	55                   	push   %ebp$/;"	l
f0106a10	obj/kern/kernel.asm	/^f0106a10:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a12	obj/kern/kernel.asm	/^f0106a12:	56                   	push   %esi$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	53                   	push   %ebx$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106a1a	obj/kern/kernel.asm	/^f0106a1a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	89 f0                	mov    %esi,%eax$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23:	85 c9                	test   %ecx,%ecx$/;"	l
f0106a25	obj/kern/kernel.asm	/^f0106a25:	75 0b                	jne    f0106a32 <strlcpy+0x23>$/;"	l
f0106a27	obj/kern/kernel.asm	/^f0106a27:	eb 1d                	jmp    f0106a46 <strlcpy+0x37>$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106a2c	obj/kern/kernel.asm	/^f0106a2c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106a34	obj/kern/kernel.asm	/^f0106a34:	74 0b                	je     f0106a41 <strlcpy+0x32>$/;"	l
f0106a36	obj/kern/kernel.asm	/^f0106a36:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	84 c9                	test   %cl,%cl$/;"	l
f0106a3b	obj/kern/kernel.asm	/^f0106a3b:	75 ec                	jne    f0106a29 <strlcpy+0x1a>$/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	89 c2                	mov    %eax,%edx$/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	eb 02                	jmp    f0106a43 <strlcpy+0x34>$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	89 c2                	mov    %eax,%edx$/;"	l
f0106a43	obj/kern/kernel.asm	/^f0106a43:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0106a46	obj/kern/kernel.asm	/^f0106a46:	29 f0                	sub    %esi,%eax$/;"	l
f0106a48	obj/kern/kernel.asm	/^f0106a48:	5b                   	pop    %ebx$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	5e                   	pop    %esi$/;"	l
f0106a4a	obj/kern/kernel.asm	/^f0106a4a:	5d                   	pop    %ebp$/;"	l
f0106a4b	obj/kern/kernel.asm	/^f0106a4b:	c3                   	ret    $/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c <strcmp>:$/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c:	55                   	push   %ebp$/;"	l
f0106a4d	obj/kern/kernel.asm	/^f0106a4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a4f	obj/kern/kernel.asm	/^f0106a4f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106a52	obj/kern/kernel.asm	/^f0106a52:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	eb 06                	jmp    f0106a5d <strcmp+0x11>$/;"	l
f0106a57	obj/kern/kernel.asm	/^f0106a57:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106a5d	obj/kern/kernel.asm	/^f0106a5d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106a60	obj/kern/kernel.asm	/^f0106a60:	84 c0                	test   %al,%al$/;"	l
f0106a62	obj/kern/kernel.asm	/^f0106a62:	74 04                	je     f0106a68 <strcmp+0x1c>$/;"	l
f0106a64	obj/kern/kernel.asm	/^f0106a64:	3a 02                	cmp    (%edx),%al$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	74 ef                	je     f0106a57 <strcmp+0xb>$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106a6b	obj/kern/kernel.asm	/^f0106a6b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	29 d0                	sub    %edx,%eax$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	5d                   	pop    %ebp$/;"	l
f0106a71	obj/kern/kernel.asm	/^f0106a71:	c3                   	ret    $/;"	l
f0106a72	obj/kern/kernel.asm	/^f0106a72 <strncmp>:$/;"	l
f0106a72	obj/kern/kernel.asm	/^f0106a72:	55                   	push   %ebp$/;"	l
f0106a73	obj/kern/kernel.asm	/^f0106a73:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a75	obj/kern/kernel.asm	/^f0106a75:	53                   	push   %ebx$/;"	l
f0106a76	obj/kern/kernel.asm	/^f0106a76:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a79	obj/kern/kernel.asm	/^f0106a79:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106a7c	obj/kern/kernel.asm	/^f0106a7c:	89 c3                	mov    %eax,%ebx$/;"	l
f0106a7e	obj/kern/kernel.asm	/^f0106a7e:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	eb 06                	jmp    f0106a89 <strncmp+0x17>$/;"	l
f0106a83	obj/kern/kernel.asm	/^f0106a83:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106a86	obj/kern/kernel.asm	/^f0106a86:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106a89	obj/kern/kernel.asm	/^f0106a89:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	74 15                	je     f0106aa2 <strncmp+0x30>$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0106a90	obj/kern/kernel.asm	/^f0106a90:	84 c9                	test   %cl,%cl$/;"	l
f0106a92	obj/kern/kernel.asm	/^f0106a92:	74 04                	je     f0106a98 <strncmp+0x26>$/;"	l
f0106a94	obj/kern/kernel.asm	/^f0106a94:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0106a96	obj/kern/kernel.asm	/^f0106a96:	74 eb                	je     f0106a83 <strncmp+0x11>$/;"	l
f0106a98	obj/kern/kernel.asm	/^f0106a98:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0106a9e	obj/kern/kernel.asm	/^f0106a9e:	29 d0                	sub    %edx,%eax$/;"	l
f0106aa0	obj/kern/kernel.asm	/^f0106aa0:	eb 05                	jmp    f0106aa7 <strncmp+0x35>$/;"	l
f0106aa2	obj/kern/kernel.asm	/^f0106aa2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	5b                   	pop    %ebx$/;"	l
f0106aa8	obj/kern/kernel.asm	/^f0106aa8:	5d                   	pop    %ebp$/;"	l
f0106aa9	obj/kern/kernel.asm	/^f0106aa9:	c3                   	ret    $/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa <strchr>:$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	55                   	push   %ebp$/;"	l
f0106aab	obj/kern/kernel.asm	/^f0106aab:	89 e5                	mov    %esp,%ebp$/;"	l
f0106aad	obj/kern/kernel.asm	/^f0106aad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106ab4	obj/kern/kernel.asm	/^f0106ab4:	eb 07                	jmp    f0106abd <strchr+0x13>$/;"	l
f0106ab6	obj/kern/kernel.asm	/^f0106ab6:	38 ca                	cmp    %cl,%dl$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	74 0f                	je     f0106ac9 <strchr+0x1f>$/;"	l
f0106aba	obj/kern/kernel.asm	/^f0106aba:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106abd	obj/kern/kernel.asm	/^f0106abd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106ac0	obj/kern/kernel.asm	/^f0106ac0:	84 d2                	test   %dl,%dl$/;"	l
f0106ac2	obj/kern/kernel.asm	/^f0106ac2:	75 f2                	jne    f0106ab6 <strchr+0xc>$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	5d                   	pop    %ebp$/;"	l
f0106aca	obj/kern/kernel.asm	/^f0106aca:	c3                   	ret    $/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb <strfind>:$/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb:	55                   	push   %ebp$/;"	l
f0106acc	obj/kern/kernel.asm	/^f0106acc:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ace	obj/kern/kernel.asm	/^f0106ace:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	eb 07                	jmp    f0106ade <strfind+0x13>$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	38 ca                	cmp    %cl,%dl$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	74 0a                	je     f0106ae5 <strfind+0x1a>$/;"	l
f0106adb	obj/kern/kernel.asm	/^f0106adb:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106ade	obj/kern/kernel.asm	/^f0106ade:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	84 d2                	test   %dl,%dl$/;"	l
f0106ae3	obj/kern/kernel.asm	/^f0106ae3:	75 f2                	jne    f0106ad7 <strfind+0xc>$/;"	l
f0106ae5	obj/kern/kernel.asm	/^f0106ae5:	5d                   	pop    %ebp$/;"	l
f0106ae6	obj/kern/kernel.asm	/^f0106ae6:	c3                   	ret    $/;"	l
f0106ae7	obj/kern/kernel.asm	/^f0106ae7 <memset>:$/;"	l
f0106ae7	obj/kern/kernel.asm	/^f0106ae7:	55                   	push   %ebp$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	89 e5                	mov    %esp,%ebp$/;"	l
f0106aea	obj/kern/kernel.asm	/^f0106aea:	57                   	push   %edi$/;"	l
f0106aeb	obj/kern/kernel.asm	/^f0106aeb:	56                   	push   %esi$/;"	l
f0106aec	obj/kern/kernel.asm	/^f0106aec:	53                   	push   %ebx$/;"	l
f0106aed	obj/kern/kernel.asm	/^f0106aed:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106af3	obj/kern/kernel.asm	/^f0106af3:	85 c9                	test   %ecx,%ecx$/;"	l
f0106af5	obj/kern/kernel.asm	/^f0106af5:	74 36                	je     f0106b2d <memset+0x46>$/;"	l
f0106af7	obj/kern/kernel.asm	/^f0106af7:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	75 28                	jne    f0106b27 <memset+0x40>$/;"	l
f0106aff	obj/kern/kernel.asm	/^f0106aff:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106b02	obj/kern/kernel.asm	/^f0106b02:	75 23                	jne    f0106b27 <memset+0x40>$/;"	l
f0106b04	obj/kern/kernel.asm	/^f0106b04:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0106b08	obj/kern/kernel.asm	/^f0106b08:	89 d3                	mov    %edx,%ebx$/;"	l
f0106b0a	obj/kern/kernel.asm	/^f0106b0a:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0106b0d	obj/kern/kernel.asm	/^f0106b0d:	89 d6                	mov    %edx,%esi$/;"	l
f0106b0f	obj/kern/kernel.asm	/^f0106b0f:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0106b12	obj/kern/kernel.asm	/^f0106b12:	89 d0                	mov    %edx,%eax$/;"	l
f0106b14	obj/kern/kernel.asm	/^f0106b14:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106b17	obj/kern/kernel.asm	/^f0106b17:	09 f0                	or     %esi,%eax$/;"	l
f0106b19	obj/kern/kernel.asm	/^f0106b19:	09 c2                	or     %eax,%edx$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	89 d0                	mov    %edx,%eax$/;"	l
f0106b1d	obj/kern/kernel.asm	/^f0106b1d:	09 d8                	or     %ebx,%eax$/;"	l
f0106b1f	obj/kern/kernel.asm	/^f0106b1f:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106b22	obj/kern/kernel.asm	/^f0106b22:	fc                   	cld    $/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0106b25	obj/kern/kernel.asm	/^f0106b25:	eb 06                	jmp    f0106b2d <memset+0x46>$/;"	l
f0106b27	obj/kern/kernel.asm	/^f0106b27:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106b2a	obj/kern/kernel.asm	/^f0106b2a:	fc                   	cld    $/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0106b2d	obj/kern/kernel.asm	/^f0106b2d:	89 f8                	mov    %edi,%eax$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	5b                   	pop    %ebx$/;"	l
f0106b30	obj/kern/kernel.asm	/^f0106b30:	5e                   	pop    %esi$/;"	l
f0106b31	obj/kern/kernel.asm	/^f0106b31:	5f                   	pop    %edi$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	5d                   	pop    %ebp$/;"	l
f0106b33	obj/kern/kernel.asm	/^f0106b33:	c3                   	ret    $/;"	l
f0106b34	obj/kern/kernel.asm	/^f0106b34 <memmove>:$/;"	l
f0106b34	obj/kern/kernel.asm	/^f0106b34:	55                   	push   %ebp$/;"	l
f0106b35	obj/kern/kernel.asm	/^f0106b35:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b37	obj/kern/kernel.asm	/^f0106b37:	57                   	push   %edi$/;"	l
f0106b38	obj/kern/kernel.asm	/^f0106b38:	56                   	push   %esi$/;"	l
f0106b39	obj/kern/kernel.asm	/^f0106b39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106b3c	obj/kern/kernel.asm	/^f0106b3c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106b3f	obj/kern/kernel.asm	/^f0106b3f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106b42	obj/kern/kernel.asm	/^f0106b42:	39 c6                	cmp    %eax,%esi$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	73 35                	jae    f0106b7b <memmove+0x47>$/;"	l
f0106b46	obj/kern/kernel.asm	/^f0106b46:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0106b49	obj/kern/kernel.asm	/^f0106b49:	39 d0                	cmp    %edx,%eax$/;"	l
f0106b4b	obj/kern/kernel.asm	/^f0106b4b:	73 2e                	jae    f0106b7b <memmove+0x47>$/;"	l
f0106b4d	obj/kern/kernel.asm	/^f0106b4d:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106b50	obj/kern/kernel.asm	/^f0106b50:	89 d6                	mov    %edx,%esi$/;"	l
f0106b52	obj/kern/kernel.asm	/^f0106b52:	09 fe                	or     %edi,%esi$/;"	l
f0106b54	obj/kern/kernel.asm	/^f0106b54:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	75 13                	jne    f0106b6f <memmove+0x3b>$/;"	l
f0106b5c	obj/kern/kernel.asm	/^f0106b5c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106b5f	obj/kern/kernel.asm	/^f0106b5f:	75 0e                	jne    f0106b6f <memmove+0x3b>$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106b64	obj/kern/kernel.asm	/^f0106b64:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106b67	obj/kern/kernel.asm	/^f0106b67:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106b6a	obj/kern/kernel.asm	/^f0106b6a:	fd                   	std    $/;"	l
f0106b6b	obj/kern/kernel.asm	/^f0106b6b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	eb 09                	jmp    f0106b78 <memmove+0x44>$/;"	l
f0106b6f	obj/kern/kernel.asm	/^f0106b6f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106b72	obj/kern/kernel.asm	/^f0106b72:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106b75	obj/kern/kernel.asm	/^f0106b75:	fd                   	std    $/;"	l
f0106b76	obj/kern/kernel.asm	/^f0106b76:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106b78	obj/kern/kernel.asm	/^f0106b78:	fc                   	cld    $/;"	l
f0106b79	obj/kern/kernel.asm	/^f0106b79:	eb 1d                	jmp    f0106b98 <memmove+0x64>$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	89 f2                	mov    %esi,%edx$/;"	l
f0106b7d	obj/kern/kernel.asm	/^f0106b7d:	09 c2                	or     %eax,%edx$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106b82	obj/kern/kernel.asm	/^f0106b82:	75 0f                	jne    f0106b93 <memmove+0x5f>$/;"	l
f0106b84	obj/kern/kernel.asm	/^f0106b84:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106b87	obj/kern/kernel.asm	/^f0106b87:	75 0a                	jne    f0106b93 <memmove+0x5f>$/;"	l
f0106b89	obj/kern/kernel.asm	/^f0106b89:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106b8c	obj/kern/kernel.asm	/^f0106b8c:	89 c7                	mov    %eax,%edi$/;"	l
f0106b8e	obj/kern/kernel.asm	/^f0106b8e:	fc                   	cld    $/;"	l
f0106b8f	obj/kern/kernel.asm	/^f0106b8f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106b91	obj/kern/kernel.asm	/^f0106b91:	eb 05                	jmp    f0106b98 <memmove+0x64>$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	89 c7                	mov    %eax,%edi$/;"	l
f0106b95	obj/kern/kernel.asm	/^f0106b95:	fc                   	cld    $/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98:	5e                   	pop    %esi$/;"	l
f0106b99	obj/kern/kernel.asm	/^f0106b99:	5f                   	pop    %edi$/;"	l
f0106b9a	obj/kern/kernel.asm	/^f0106b9a:	5d                   	pop    %ebp$/;"	l
f0106b9b	obj/kern/kernel.asm	/^f0106b9b:	c3                   	ret    $/;"	l
f0106b9c	obj/kern/kernel.asm	/^f0106b9c <memcpy>:$/;"	l
f0106b9c	obj/kern/kernel.asm	/^f0106b9c:	55                   	push   %ebp$/;"	l
f0106b9d	obj/kern/kernel.asm	/^f0106b9d:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b9f	obj/kern/kernel.asm	/^f0106b9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106ba2	obj/kern/kernel.asm	/^f0106ba2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106ba5	obj/kern/kernel.asm	/^f0106ba5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106ba9	obj/kern/kernel.asm	/^f0106ba9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106bac	obj/kern/kernel.asm	/^f0106bac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106bb0	obj/kern/kernel.asm	/^f0106bb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106bb3	obj/kern/kernel.asm	/^f0106bb3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106bb6	obj/kern/kernel.asm	/^f0106bb6:	e8 79 ff ff ff       	call   f0106b34 <memmove>$/;"	l
f0106bbb	obj/kern/kernel.asm	/^f0106bbb:	c9                   	leave  $/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	c3                   	ret    $/;"	l
f0106bbd	obj/kern/kernel.asm	/^f0106bbd <memcmp>:$/;"	l
f0106bbd	obj/kern/kernel.asm	/^f0106bbd:	55                   	push   %ebp$/;"	l
f0106bbe	obj/kern/kernel.asm	/^f0106bbe:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bc0	obj/kern/kernel.asm	/^f0106bc0:	56                   	push   %esi$/;"	l
f0106bc1	obj/kern/kernel.asm	/^f0106bc1:	53                   	push   %ebx$/;"	l
f0106bc2	obj/kern/kernel.asm	/^f0106bc2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106bc5	obj/kern/kernel.asm	/^f0106bc5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106bc8	obj/kern/kernel.asm	/^f0106bc8:	89 d6                	mov    %edx,%esi$/;"	l
f0106bca	obj/kern/kernel.asm	/^f0106bca:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0106bcd	obj/kern/kernel.asm	/^f0106bcd:	eb 1a                	jmp    f0106be9 <memcmp+0x2c>$/;"	l
f0106bcf	obj/kern/kernel.asm	/^f0106bcf:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106bd2	obj/kern/kernel.asm	/^f0106bd2:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0106bd5	obj/kern/kernel.asm	/^f0106bd5:	38 d8                	cmp    %bl,%al$/;"	l
f0106bd7	obj/kern/kernel.asm	/^f0106bd7:	74 0a                	je     f0106be3 <memcmp+0x26>$/;"	l
f0106bd9	obj/kern/kernel.asm	/^f0106bd9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0106bdf	obj/kern/kernel.asm	/^f0106bdf:	29 d8                	sub    %ebx,%eax$/;"	l
f0106be1	obj/kern/kernel.asm	/^f0106be1:	eb 0f                	jmp    f0106bf2 <memcmp+0x35>$/;"	l
f0106be3	obj/kern/kernel.asm	/^f0106be3:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106be6	obj/kern/kernel.asm	/^f0106be6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106be9	obj/kern/kernel.asm	/^f0106be9:	39 f2                	cmp    %esi,%edx$/;"	l
f0106beb	obj/kern/kernel.asm	/^f0106beb:	75 e2                	jne    f0106bcf <memcmp+0x12>$/;"	l
f0106bed	obj/kern/kernel.asm	/^f0106bed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106bf2	obj/kern/kernel.asm	/^f0106bf2:	5b                   	pop    %ebx$/;"	l
f0106bf3	obj/kern/kernel.asm	/^f0106bf3:	5e                   	pop    %esi$/;"	l
f0106bf4	obj/kern/kernel.asm	/^f0106bf4:	5d                   	pop    %ebp$/;"	l
f0106bf5	obj/kern/kernel.asm	/^f0106bf5:	c3                   	ret    $/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6 <memfind>:$/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6:	55                   	push   %ebp$/;"	l
f0106bf7	obj/kern/kernel.asm	/^f0106bf7:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bf9	obj/kern/kernel.asm	/^f0106bf9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106bff	obj/kern/kernel.asm	/^f0106bff:	89 c2                	mov    %eax,%edx$/;"	l
f0106c01	obj/kern/kernel.asm	/^f0106c01:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106c04	obj/kern/kernel.asm	/^f0106c04:	eb 07                	jmp    f0106c0d <memfind+0x17>$/;"	l
f0106c06	obj/kern/kernel.asm	/^f0106c06:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106c08	obj/kern/kernel.asm	/^f0106c08:	74 07                	je     f0106c11 <memfind+0x1b>$/;"	l
f0106c0a	obj/kern/kernel.asm	/^f0106c0a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106c0d	obj/kern/kernel.asm	/^f0106c0d:	39 d0                	cmp    %edx,%eax$/;"	l
f0106c0f	obj/kern/kernel.asm	/^f0106c0f:	72 f5                	jb     f0106c06 <memfind+0x10>$/;"	l
f0106c11	obj/kern/kernel.asm	/^f0106c11:	5d                   	pop    %ebp$/;"	l
f0106c12	obj/kern/kernel.asm	/^f0106c12:	c3                   	ret    $/;"	l
f0106c13	obj/kern/kernel.asm	/^f0106c13 <strtol>:$/;"	l
f0106c13	obj/kern/kernel.asm	/^f0106c13:	55                   	push   %ebp$/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c16	obj/kern/kernel.asm	/^f0106c16:	57                   	push   %edi$/;"	l
f0106c17	obj/kern/kernel.asm	/^f0106c17:	56                   	push   %esi$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	53                   	push   %ebx$/;"	l
f0106c19	obj/kern/kernel.asm	/^f0106c19:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106c1c	obj/kern/kernel.asm	/^f0106c1c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	eb 03                	jmp    f0106c24 <strtol+0x11>$/;"	l
f0106c21	obj/kern/kernel.asm	/^f0106c21:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106c24	obj/kern/kernel.asm	/^f0106c24:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106c27	obj/kern/kernel.asm	/^f0106c27:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f0106c2a	obj/kern/kernel.asm	/^f0106c2a:	74 f5                	je     f0106c21 <strtol+0xe>$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f0106c2f	obj/kern/kernel.asm	/^f0106c2f:	74 f0                	je     f0106c21 <strtol+0xe>$/;"	l
f0106c31	obj/kern/kernel.asm	/^f0106c31:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f0106c34	obj/kern/kernel.asm	/^f0106c34:	75 0a                	jne    f0106c40 <strtol+0x2d>$/;"	l
f0106c36	obj/kern/kernel.asm	/^f0106c36:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106c39	obj/kern/kernel.asm	/^f0106c39:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106c3e	obj/kern/kernel.asm	/^f0106c3e:	eb 11                	jmp    f0106c51 <strtol+0x3e>$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106c45	obj/kern/kernel.asm	/^f0106c45:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f0106c48	obj/kern/kernel.asm	/^f0106c48:	75 07                	jne    f0106c51 <strtol+0x3e>$/;"	l
f0106c4a	obj/kern/kernel.asm	/^f0106c4a:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0106c4d	obj/kern/kernel.asm	/^f0106c4d:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106c51	obj/kern/kernel.asm	/^f0106c51:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f0106c56	obj/kern/kernel.asm	/^f0106c56:	75 15                	jne    f0106c6d <strtol+0x5a>$/;"	l
f0106c58	obj/kern/kernel.asm	/^f0106c58:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106c5b	obj/kern/kernel.asm	/^f0106c5b:	75 10                	jne    f0106c6d <strtol+0x5a>$/;"	l
f0106c5d	obj/kern/kernel.asm	/^f0106c5d:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106c61	obj/kern/kernel.asm	/^f0106c61:	75 0a                	jne    f0106c6d <strtol+0x5a>$/;"	l
f0106c63	obj/kern/kernel.asm	/^f0106c63:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106c66	obj/kern/kernel.asm	/^f0106c66:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0106c6b	obj/kern/kernel.asm	/^f0106c6b:	eb 10                	jmp    f0106c7d <strtol+0x6a>$/;"	l
f0106c6d	obj/kern/kernel.asm	/^f0106c6d:	85 c0                	test   %eax,%eax$/;"	l
f0106c6f	obj/kern/kernel.asm	/^f0106c6f:	75 0c                	jne    f0106c7d <strtol+0x6a>$/;"	l
f0106c71	obj/kern/kernel.asm	/^f0106c71:	b0 0a                	mov    $0xa,%al$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106c76	obj/kern/kernel.asm	/^f0106c76:	75 05                	jne    f0106c7d <strtol+0x6a>$/;"	l
f0106c78	obj/kern/kernel.asm	/^f0106c78:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	b0 08                	mov    $0x8,%al$/;"	l
f0106c7d	obj/kern/kernel.asm	/^f0106c7d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106c82	obj/kern/kernel.asm	/^f0106c82:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f0106c85	obj/kern/kernel.asm	/^f0106c85:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f0106c8b	obj/kern/kernel.asm	/^f0106c8b:	89 f0                	mov    %esi,%eax$/;"	l
f0106c8d	obj/kern/kernel.asm	/^f0106c8d:	3c 09                	cmp    $0x9,%al$/;"	l
f0106c8f	obj/kern/kernel.asm	/^f0106c8f:	77 08                	ja     f0106c99 <strtol+0x86>$/;"	l
f0106c91	obj/kern/kernel.asm	/^f0106c91:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106c94	obj/kern/kernel.asm	/^f0106c94:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0106c97	obj/kern/kernel.asm	/^f0106c97:	eb 20                	jmp    f0106cb9 <strtol+0xa6>$/;"	l
f0106c99	obj/kern/kernel.asm	/^f0106c99:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f0106c9c	obj/kern/kernel.asm	/^f0106c9c:	89 f0                	mov    %esi,%eax$/;"	l
f0106c9e	obj/kern/kernel.asm	/^f0106c9e:	3c 19                	cmp    $0x19,%al$/;"	l
f0106ca0	obj/kern/kernel.asm	/^f0106ca0:	77 08                	ja     f0106caa <strtol+0x97>$/;"	l
f0106ca2	obj/kern/kernel.asm	/^f0106ca2:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106ca5	obj/kern/kernel.asm	/^f0106ca5:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	eb 0f                	jmp    f0106cb9 <strtol+0xa6>$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	89 f0                	mov    %esi,%eax$/;"	l
f0106caf	obj/kern/kernel.asm	/^f0106caf:	3c 19                	cmp    $0x19,%al$/;"	l
f0106cb1	obj/kern/kernel.asm	/^f0106cb1:	77 16                	ja     f0106cc9 <strtol+0xb6>$/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106cb6	obj/kern/kernel.asm	/^f0106cb6:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f0106cbc	obj/kern/kernel.asm	/^f0106cbc:	7d 0f                	jge    f0106ccd <strtol+0xba>$/;"	l
f0106cbe	obj/kern/kernel.asm	/^f0106cbe:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106cc1	obj/kern/kernel.asm	/^f0106cc1:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f0106cc5	obj/kern/kernel.asm	/^f0106cc5:	01 cb                	add    %ecx,%ebx$/;"	l
f0106cc7	obj/kern/kernel.asm	/^f0106cc7:	eb bc                	jmp    f0106c85 <strtol+0x72>$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	89 d8                	mov    %ebx,%eax$/;"	l
f0106ccb	obj/kern/kernel.asm	/^f0106ccb:	eb 02                	jmp    f0106ccf <strtol+0xbc>$/;"	l
f0106ccd	obj/kern/kernel.asm	/^f0106ccd:	89 d8                	mov    %ebx,%eax$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106cd3	obj/kern/kernel.asm	/^f0106cd3:	74 05                	je     f0106cda <strtol+0xc7>$/;"	l
f0106cd5	obj/kern/kernel.asm	/^f0106cd5:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106cd8	obj/kern/kernel.asm	/^f0106cd8:	89 16                	mov    %edx,(%esi)$/;"	l
f0106cda	obj/kern/kernel.asm	/^f0106cda:	f7 d8                	neg    %eax$/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc:	85 ff                	test   %edi,%edi$/;"	l
f0106cde	obj/kern/kernel.asm	/^f0106cde:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0106ce1	obj/kern/kernel.asm	/^f0106ce1:	5b                   	pop    %ebx$/;"	l
f0106ce2	obj/kern/kernel.asm	/^f0106ce2:	5e                   	pop    %esi$/;"	l
f0106ce3	obj/kern/kernel.asm	/^f0106ce3:	5f                   	pop    %edi$/;"	l
f0106ce4	obj/kern/kernel.asm	/^f0106ce4:	5d                   	pop    %ebp$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	c3                   	ret    $/;"	l
f0106ce6	obj/kern/kernel.asm	/^f0106ce6:	66 90                	xchg   %ax,%ax$/;"	l
f0106ce8	obj/kern/kernel.asm	/^f0106ce8 <mpentry_start>:$/;"	l
f0106ce8	obj/kern/kernel.asm	/^f0106ce8:	fa                   	cli    $/;"	l
f0106ce9	obj/kern/kernel.asm	/^f0106ce9:	31 c0                	xor    %eax,%eax$/;"	l
f0106ceb	obj/kern/kernel.asm	/^f0106ceb:	8e d8                	mov    %eax,%ds$/;"	l
f0106ced	obj/kern/kernel.asm	/^f0106ced:	8e c0                	mov    %eax,%es$/;"	l
f0106cef	obj/kern/kernel.asm	/^f0106cef:	8e d0                	mov    %eax,%ss$/;"	l
f0106cf1	obj/kern/kernel.asm	/^f0106cf1:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106cf4	obj/kern/kernel.asm	/^f0106cf4:	74 70                	je     f0106d66 <mpentry_end+0x4>$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106cf9	obj/kern/kernel.asm	/^f0106cf9:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0106cfd	obj/kern/kernel.asm	/^f0106cfd:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106d00	obj/kern/kernel.asm	/^f0106d00:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106d06	obj/kern/kernel.asm	/^f0106d06:	08 00                	or     %al,(%eax)$/;"	l
f0106d08	obj/kern/kernel.asm	/^f0106d08 <start32>:$/;"	l
f0106d08	obj/kern/kernel.asm	/^f0106d08:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	8e d8                	mov    %eax,%ds$/;"	l
f0106d0e	obj/kern/kernel.asm	/^f0106d0e:	8e c0                	mov    %eax,%es$/;"	l
f0106d10	obj/kern/kernel.asm	/^f0106d10:	8e d0                	mov    %eax,%ss$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106d16	obj/kern/kernel.asm	/^f0106d16:	8e e0                	mov    %eax,%fs$/;"	l
f0106d18	obj/kern/kernel.asm	/^f0106d18:	8e e8                	mov    %eax,%gs$/;"	l
f0106d1a	obj/kern/kernel.asm	/^f0106d1a:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f0106d1f	obj/kern/kernel.asm	/^f0106d1f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106d25	obj/kern/kernel.asm	/^f0106d25:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0106d2a	obj/kern/kernel.asm	/^f0106d2a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106d2d	obj/kern/kernel.asm	/^f0106d2d:	8b 25 70 06 30 f0    	mov    0xf0300670,%esp$/;"	l
f0106d33	obj/kern/kernel.asm	/^f0106d33:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106d38	obj/kern/kernel.asm	/^f0106d38:	b8 06 02 10 f0       	mov    $0xf0100206,%eax$/;"	l
f0106d3d	obj/kern/kernel.asm	/^f0106d3d:	ff d0                	call   *%eax$/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f <spin>:$/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f:	eb fe                	jmp    f0106d3f <spin>$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106d44	obj/kern/kernel.asm	/^f0106d44 <gdt>:$/;"	l
f0106d4c	obj/kern/kernel.asm	/^f0106d4c:	ff                   	(bad)  $/;"	l
f0106d4d	obj/kern/kernel.asm	/^f0106d4d:	ff 00                	incl   (%eax)$/;"	l
f0106d4f	obj/kern/kernel.asm	/^f0106d4f:	00 00                	add    %al,(%eax)$/;"	l
f0106d51	obj/kern/kernel.asm	/^f0106d51:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106d58	obj/kern/kernel.asm	/^f0106d58:	00                   	.byte 0x0$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	92                   	xchg   %eax,%edx$/;"	l
f0106d5a	obj/kern/kernel.asm	/^f0106d5a:	cf                   	iret   $/;"	l
f0106d5c	obj/kern/kernel.asm	/^f0106d5c <gdtdesc>:$/;"	l
f0106d5c	obj/kern/kernel.asm	/^f0106d5c:	17                   	pop    %ss$/;"	l
f0106d5d	obj/kern/kernel.asm	/^f0106d5d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106d62	obj/kern/kernel.asm	/^f0106d62 <mpentry_end>:$/;"	l
f0106d62	obj/kern/kernel.asm	/^f0106d62:	90                   	nop$/;"	l
f0106d63	obj/kern/kernel.asm	/^f0106d63:	66 90                	xchg   %ax,%ax$/;"	l
f0106d65	obj/kern/kernel.asm	/^f0106d65:	66 90                	xchg   %ax,%ax$/;"	l
f0106d67	obj/kern/kernel.asm	/^f0106d67:	66 90                	xchg   %ax,%ax$/;"	l
f0106d69	obj/kern/kernel.asm	/^f0106d69:	66 90                	xchg   %ax,%ax$/;"	l
f0106d6b	obj/kern/kernel.asm	/^f0106d6b:	66 90                	xchg   %ax,%ax$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	66 90                	xchg   %ax,%ax$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	90                   	nop$/;"	l
f0106d70	obj/kern/kernel.asm	/^f0106d70 <mpsearch1>:$/;"	l
f0106d70	obj/kern/kernel.asm	/^f0106d70:	55                   	push   %ebp$/;"	l
f0106d71	obj/kern/kernel.asm	/^f0106d71:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d73	obj/kern/kernel.asm	/^f0106d73:	56                   	push   %esi$/;"	l
f0106d74	obj/kern/kernel.asm	/^f0106d74:	53                   	push   %ebx$/;"	l
f0106d75	obj/kern/kernel.asm	/^f0106d75:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106d78	obj/kern/kernel.asm	/^f0106d78:	8b 0d 74 06 30 f0    	mov    0xf0300674,%ecx$/;"	l
f0106d7e	obj/kern/kernel.asm	/^f0106d7e:	89 c3                	mov    %eax,%ebx$/;"	l
f0106d80	obj/kern/kernel.asm	/^f0106d80:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106d83	obj/kern/kernel.asm	/^f0106d83:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0106d85	obj/kern/kernel.asm	/^f0106d85:	72 20                	jb     f0106da7 <mpsearch1+0x37>$/;"	l
f0106d87	obj/kern/kernel.asm	/^f0106d87:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106d8b	obj/kern/kernel.asm	/^f0106d8b:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0106d92	obj/kern/kernel.asm	/^f0106d92:	f0 $/;"	l
f0106d93	obj/kern/kernel.asm	/^f0106d93:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106d9a	obj/kern/kernel.asm	/^f0106d9a:	00 $/;"	l
f0106d9b	obj/kern/kernel.asm	/^f0106d9b:	c7 04 24 29 a1 10 f0 	movl   $0xf010a129,(%esp)$/;"	l
f0106da2	obj/kern/kernel.asm	/^f0106da2:	e8 99 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106da7	obj/kern/kernel.asm	/^f0106da7:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0106dad	obj/kern/kernel.asm	/^f0106dad:	01 d0                	add    %edx,%eax$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	89 c2                	mov    %eax,%edx$/;"	l
f0106db1	obj/kern/kernel.asm	/^f0106db1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106db4	obj/kern/kernel.asm	/^f0106db4:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106db6	obj/kern/kernel.asm	/^f0106db6:	77 20                	ja     f0106dd8 <mpsearch1+0x68>$/;"	l
f0106db8	obj/kern/kernel.asm	/^f0106db8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106dbc	obj/kern/kernel.asm	/^f0106dbc:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0106dc3	obj/kern/kernel.asm	/^f0106dc3:	f0 $/;"	l
f0106dc4	obj/kern/kernel.asm	/^f0106dc4:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106dcb	obj/kern/kernel.asm	/^f0106dcb:	00 $/;"	l
f0106dcc	obj/kern/kernel.asm	/^f0106dcc:	c7 04 24 29 a1 10 f0 	movl   $0xf010a129,(%esp)$/;"	l
f0106dd3	obj/kern/kernel.asm	/^f0106dd3:	e8 68 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0106dde	obj/kern/kernel.asm	/^f0106dde:	eb 36                	jmp    f0106e16 <mpsearch1+0xa6>$/;"	l
f0106de0	obj/kern/kernel.asm	/^f0106de0:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106de7	obj/kern/kernel.asm	/^f0106de7:	00 $/;"	l
f0106de8	obj/kern/kernel.asm	/^f0106de8:	c7 44 24 04 39 a1 10 	movl   $0xf010a139,0x4(%esp)$/;"	l
f0106def	obj/kern/kernel.asm	/^f0106def:	f0 $/;"	l
f0106df0	obj/kern/kernel.asm	/^f0106df0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106df3	obj/kern/kernel.asm	/^f0106df3:	e8 c5 fd ff ff       	call   f0106bbd <memcmp>$/;"	l
f0106df8	obj/kern/kernel.asm	/^f0106df8:	85 c0                	test   %eax,%eax$/;"	l
f0106dfa	obj/kern/kernel.asm	/^f0106dfa:	75 17                	jne    f0106e13 <mpsearch1+0xa3>$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e01	obj/kern/kernel.asm	/^f0106e01:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0106e05	obj/kern/kernel.asm	/^f0106e05:	01 c8                	add    %ecx,%eax$/;"	l
f0106e07	obj/kern/kernel.asm	/^f0106e07:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106e0a	obj/kern/kernel.asm	/^f0106e0a:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0106e0d	obj/kern/kernel.asm	/^f0106e0d:	75 f2                	jne    f0106e01 <mpsearch1+0x91>$/;"	l
f0106e0f	obj/kern/kernel.asm	/^f0106e0f:	84 c0                	test   %al,%al$/;"	l
f0106e11	obj/kern/kernel.asm	/^f0106e11:	74 0e                	je     f0106e21 <mpsearch1+0xb1>$/;"	l
f0106e13	obj/kern/kernel.asm	/^f0106e13:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106e16	obj/kern/kernel.asm	/^f0106e16:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106e18	obj/kern/kernel.asm	/^f0106e18:	72 c6                	jb     f0106de0 <mpsearch1+0x70>$/;"	l
f0106e1a	obj/kern/kernel.asm	/^f0106e1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106e1f	obj/kern/kernel.asm	/^f0106e1f:	eb 02                	jmp    f0106e23 <mpsearch1+0xb3>$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	89 d8                	mov    %ebx,%eax$/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e26	obj/kern/kernel.asm	/^f0106e26:	5b                   	pop    %ebx$/;"	l
f0106e27	obj/kern/kernel.asm	/^f0106e27:	5e                   	pop    %esi$/;"	l
f0106e28	obj/kern/kernel.asm	/^f0106e28:	5d                   	pop    %ebp$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	c3                   	ret    $/;"	l
f0106e2a	obj/kern/kernel.asm	/^f0106e2a <mp_init>:$/;"	l
f0106e2a	obj/kern/kernel.asm	/^f0106e2a:	55                   	push   %ebp$/;"	l
f0106e2b	obj/kern/kernel.asm	/^f0106e2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e2d	obj/kern/kernel.asm	/^f0106e2d:	57                   	push   %edi$/;"	l
f0106e2e	obj/kern/kernel.asm	/^f0106e2e:	56                   	push   %esi$/;"	l
f0106e2f	obj/kern/kernel.asm	/^f0106e2f:	53                   	push   %ebx$/;"	l
f0106e30	obj/kern/kernel.asm	/^f0106e30:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106e33	obj/kern/kernel.asm	/^f0106e33:	c7 05 c0 13 30 f0 20 	movl   $0xf0301020,0xf03013c0$/;"	l
f0106e3a	obj/kern/kernel.asm	/^f0106e3a:	10 30 f0 $/;"	l
f0106e3d	obj/kern/kernel.asm	/^f0106e3d:	83 3d 74 06 30 f0 00 	cmpl   $0x0,0xf0300674$/;"	l
f0106e44	obj/kern/kernel.asm	/^f0106e44:	75 24                	jne    f0106e6a <mp_init+0x40>$/;"	l
f0106e46	obj/kern/kernel.asm	/^f0106e46:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0106e4d	obj/kern/kernel.asm	/^f0106e4d:	00 $/;"	l
f0106e4e	obj/kern/kernel.asm	/^f0106e4e:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0106e55	obj/kern/kernel.asm	/^f0106e55:	f0 $/;"	l
f0106e56	obj/kern/kernel.asm	/^f0106e56:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0106e5d	obj/kern/kernel.asm	/^f0106e5d:	00 $/;"	l
f0106e5e	obj/kern/kernel.asm	/^f0106e5e:	c7 04 24 29 a1 10 f0 	movl   $0xf010a129,(%esp)$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	e8 d6 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106e71	obj/kern/kernel.asm	/^f0106e71:	85 c0                	test   %eax,%eax$/;"	l
f0106e73	obj/kern/kernel.asm	/^f0106e73:	74 16                	je     f0106e8b <mp_init+0x61>$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106e78	obj/kern/kernel.asm	/^f0106e78:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106e7d	obj/kern/kernel.asm	/^f0106e7d:	e8 ee fe ff ff       	call   f0106d70 <mpsearch1>$/;"	l
f0106e82	obj/kern/kernel.asm	/^f0106e82:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106e85	obj/kern/kernel.asm	/^f0106e85:	85 c0                	test   %eax,%eax$/;"	l
f0106e87	obj/kern/kernel.asm	/^f0106e87:	75 3c                	jne    f0106ec5 <mp_init+0x9b>$/;"	l
f0106e89	obj/kern/kernel.asm	/^f0106e89:	eb 20                	jmp    f0106eab <mp_init+0x81>$/;"	l
f0106e8b	obj/kern/kernel.asm	/^f0106e8b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106e92	obj/kern/kernel.asm	/^f0106e92:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106e9f	obj/kern/kernel.asm	/^f0106e9f:	e8 cc fe ff ff       	call   f0106d70 <mpsearch1>$/;"	l
f0106ea4	obj/kern/kernel.asm	/^f0106ea4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	85 c0                	test   %eax,%eax$/;"	l
f0106ea9	obj/kern/kernel.asm	/^f0106ea9:	75 1a                	jne    f0106ec5 <mp_init+0x9b>$/;"	l
f0106eab	obj/kern/kernel.asm	/^f0106eab:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106eb5	obj/kern/kernel.asm	/^f0106eb5:	e8 b6 fe ff ff       	call   f0106d70 <mpsearch1>$/;"	l
f0106eba	obj/kern/kernel.asm	/^f0106eba:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106ebd	obj/kern/kernel.asm	/^f0106ebd:	85 c0                	test   %eax,%eax$/;"	l
f0106ebf	obj/kern/kernel.asm	/^f0106ebf:	0f 84 54 02 00 00    	je     f0107119 <mp_init+0x2ef>$/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106ec8	obj/kern/kernel.asm	/^f0106ec8:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0106ecb	obj/kern/kernel.asm	/^f0106ecb:	85 f6                	test   %esi,%esi$/;"	l
f0106ecd	obj/kern/kernel.asm	/^f0106ecd:	74 06                	je     f0106ed5 <mp_init+0xab>$/;"	l
f0106ecf	obj/kern/kernel.asm	/^f0106ecf:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106ed3	obj/kern/kernel.asm	/^f0106ed3:	74 11                	je     f0106ee6 <mp_init+0xbc>$/;"	l
f0106ed5	obj/kern/kernel.asm	/^f0106ed5:	c7 04 24 9c 9f 10 f0 	movl   $0xf0109f9c,(%esp)$/;"	l
f0106edc	obj/kern/kernel.asm	/^f0106edc:	e8 dd d4 ff ff       	call   f01043be <cprintf>$/;"	l
f0106ee1	obj/kern/kernel.asm	/^f0106ee1:	e9 33 02 00 00       	jmp    f0107119 <mp_init+0x2ef>$/;"	l
f0106ee6	obj/kern/kernel.asm	/^f0106ee6:	89 f0                	mov    %esi,%eax$/;"	l
f0106ee8	obj/kern/kernel.asm	/^f0106ee8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	3b 05 74 06 30 f0    	cmp    0xf0300674,%eax$/;"	l
f0106ef1	obj/kern/kernel.asm	/^f0106ef1:	72 20                	jb     f0106f13 <mp_init+0xe9>$/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106ef7	obj/kern/kernel.asm	/^f0106ef7:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0106efe	obj/kern/kernel.asm	/^f0106efe:	f0 $/;"	l
f0106eff	obj/kern/kernel.asm	/^f0106eff:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106f06	obj/kern/kernel.asm	/^f0106f06:	00 $/;"	l
f0106f07	obj/kern/kernel.asm	/^f0106f07:	c7 04 24 29 a1 10 f0 	movl   $0xf010a129,(%esp)$/;"	l
f0106f0e	obj/kern/kernel.asm	/^f0106f0e:	e8 2d 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106f13	obj/kern/kernel.asm	/^f0106f13:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106f20	obj/kern/kernel.asm	/^f0106f20:	00 $/;"	l
f0106f21	obj/kern/kernel.asm	/^f0106f21:	c7 44 24 04 3e a1 10 	movl   $0xf010a13e,0x4(%esp)$/;"	l
f0106f28	obj/kern/kernel.asm	/^f0106f28:	f0 $/;"	l
f0106f29	obj/kern/kernel.asm	/^f0106f29:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	e8 8c fc ff ff       	call   f0106bbd <memcmp>$/;"	l
f0106f31	obj/kern/kernel.asm	/^f0106f31:	85 c0                	test   %eax,%eax$/;"	l
f0106f33	obj/kern/kernel.asm	/^f0106f33:	74 11                	je     f0106f46 <mp_init+0x11c>$/;"	l
f0106f35	obj/kern/kernel.asm	/^f0106f35:	c7 04 24 cc 9f 10 f0 	movl   $0xf0109fcc,(%esp)$/;"	l
f0106f3c	obj/kern/kernel.asm	/^f0106f3c:	e8 7d d4 ff ff       	call   f01043be <cprintf>$/;"	l
f0106f41	obj/kern/kernel.asm	/^f0106f41:	e9 d3 01 00 00       	jmp    f0107119 <mp_init+0x2ef>$/;"	l
f0106f46	obj/kern/kernel.asm	/^f0106f46:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0106f4a	obj/kern/kernel.asm	/^f0106f4a:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0106f4e	obj/kern/kernel.asm	/^f0106f4e:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106f56	obj/kern/kernel.asm	/^f0106f56:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106f5b	obj/kern/kernel.asm	/^f0106f5b:	eb 0d                	jmp    f0106f6a <mp_init+0x140>$/;"	l
f0106f5d	obj/kern/kernel.asm	/^f0106f5d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106f64	obj/kern/kernel.asm	/^f0106f64:	f0 $/;"	l
f0106f65	obj/kern/kernel.asm	/^f0106f65:	01 ca                	add    %ecx,%edx$/;"	l
f0106f67	obj/kern/kernel.asm	/^f0106f67:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106f6a	obj/kern/kernel.asm	/^f0106f6a:	39 c7                	cmp    %eax,%edi$/;"	l
f0106f6c	obj/kern/kernel.asm	/^f0106f6c:	7f ef                	jg     f0106f5d <mp_init+0x133>$/;"	l
f0106f6e	obj/kern/kernel.asm	/^f0106f6e:	84 d2                	test   %dl,%dl$/;"	l
f0106f70	obj/kern/kernel.asm	/^f0106f70:	74 11                	je     f0106f83 <mp_init+0x159>$/;"	l
f0106f72	obj/kern/kernel.asm	/^f0106f72:	c7 04 24 00 a0 10 f0 	movl   $0xf010a000,(%esp)$/;"	l
f0106f79	obj/kern/kernel.asm	/^f0106f79:	e8 40 d4 ff ff       	call   f01043be <cprintf>$/;"	l
f0106f7e	obj/kern/kernel.asm	/^f0106f7e:	e9 96 01 00 00       	jmp    f0107119 <mp_init+0x2ef>$/;"	l
f0106f83	obj/kern/kernel.asm	/^f0106f83:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0106f87	obj/kern/kernel.asm	/^f0106f87:	3c 04                	cmp    $0x4,%al$/;"	l
f0106f89	obj/kern/kernel.asm	/^f0106f89:	74 1f                	je     f0106faa <mp_init+0x180>$/;"	l
f0106f8b	obj/kern/kernel.asm	/^f0106f8b:	3c 01                	cmp    $0x1,%al$/;"	l
f0106f8d	obj/kern/kernel.asm	/^f0106f8d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106f90	obj/kern/kernel.asm	/^f0106f90:	74 18                	je     f0106faa <mp_init+0x180>$/;"	l
f0106f92	obj/kern/kernel.asm	/^f0106f92:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106f95	obj/kern/kernel.asm	/^f0106f95:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f99	obj/kern/kernel.asm	/^f0106f99:	c7 04 24 24 a0 10 f0 	movl   $0xf010a024,(%esp)$/;"	l
f0106fa0	obj/kern/kernel.asm	/^f0106fa0:	e8 19 d4 ff ff       	call   f01043be <cprintf>$/;"	l
f0106fa5	obj/kern/kernel.asm	/^f0106fa5:	e9 6f 01 00 00       	jmp    f0107119 <mp_init+0x2ef>$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f0106fae	obj/kern/kernel.asm	/^f0106fae:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f0106fb2	obj/kern/kernel.asm	/^f0106fb2:	01 df                	add    %ebx,%edi$/;"	l
f0106fb4	obj/kern/kernel.asm	/^f0106fb4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106fb9	obj/kern/kernel.asm	/^f0106fb9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106fbe	obj/kern/kernel.asm	/^f0106fbe:	eb 09                	jmp    f0106fc9 <mp_init+0x19f>$/;"	l
f0106fc0	obj/kern/kernel.asm	/^f0106fc0:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f0106fc4	obj/kern/kernel.asm	/^f0106fc4:	01 ca                	add    %ecx,%edx$/;"	l
f0106fc6	obj/kern/kernel.asm	/^f0106fc6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106fc9	obj/kern/kernel.asm	/^f0106fc9:	39 c6                	cmp    %eax,%esi$/;"	l
f0106fcb	obj/kern/kernel.asm	/^f0106fcb:	7f f3                	jg     f0106fc0 <mp_init+0x196>$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f0106fd0	obj/kern/kernel.asm	/^f0106fd0:	84 d2                	test   %dl,%dl$/;"	l
f0106fd2	obj/kern/kernel.asm	/^f0106fd2:	74 11                	je     f0106fe5 <mp_init+0x1bb>$/;"	l
f0106fd4	obj/kern/kernel.asm	/^f0106fd4:	c7 04 24 44 a0 10 f0 	movl   $0xf010a044,(%esp)$/;"	l
f0106fdb	obj/kern/kernel.asm	/^f0106fdb:	e8 de d3 ff ff       	call   f01043be <cprintf>$/;"	l
f0106fe0	obj/kern/kernel.asm	/^f0106fe0:	e9 34 01 00 00       	jmp    f0107119 <mp_init+0x2ef>$/;"	l
f0106fe5	obj/kern/kernel.asm	/^f0106fe5:	85 db                	test   %ebx,%ebx$/;"	l
f0106fe7	obj/kern/kernel.asm	/^f0106fe7:	0f 84 2c 01 00 00    	je     f0107119 <mp_init+0x2ef>$/;"	l
f0106fed	obj/kern/kernel.asm	/^f0106fed:	c7 05 00 10 30 f0 01 	movl   $0x1,0xf0301000$/;"	l
f0106ff4	obj/kern/kernel.asm	/^f0106ff4:	00 00 00 $/;"	l
f0106ff7	obj/kern/kernel.asm	/^f0106ff7:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106ffa	obj/kern/kernel.asm	/^f0106ffa:	a3 00 20 34 f0       	mov    %eax,0xf0342000$/;"	l
f0106fff	obj/kern/kernel.asm	/^f0106fff:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0107002	obj/kern/kernel.asm	/^f0107002:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0107007	obj/kern/kernel.asm	/^f0107007:	e9 86 00 00 00       	jmp    f0107092 <mp_init+0x268>$/;"	l
f010700c	obj/kern/kernel.asm	/^f010700c:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f010700f	obj/kern/kernel.asm	/^f010700f:	84 c0                	test   %al,%al$/;"	l
f0107011	obj/kern/kernel.asm	/^f0107011:	74 06                	je     f0107019 <mp_init+0x1ef>$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	3c 04                	cmp    $0x4,%al$/;"	l
f0107015	obj/kern/kernel.asm	/^f0107015:	77 57                	ja     f010706e <mp_init+0x244>$/;"	l
f0107017	obj/kern/kernel.asm	/^f0107017:	eb 50                	jmp    f0107069 <mp_init+0x23f>$/;"	l
f0107019	obj/kern/kernel.asm	/^f0107019:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f010701d	obj/kern/kernel.asm	/^f010701d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107020	obj/kern/kernel.asm	/^f0107020:	74 11                	je     f0107033 <mp_init+0x209>$/;"	l
f0107022	obj/kern/kernel.asm	/^f0107022:	6b 05 c4 13 30 f0 74 	imul   $0x74,0xf03013c4,%eax$/;"	l
f0107029	obj/kern/kernel.asm	/^f0107029:	05 20 10 30 f0       	add    $0xf0301020,%eax$/;"	l
f010702e	obj/kern/kernel.asm	/^f010702e:	a3 c0 13 30 f0       	mov    %eax,0xf03013c0$/;"	l
f0107033	obj/kern/kernel.asm	/^f0107033:	a1 c4 13 30 f0       	mov    0xf03013c4,%eax$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f010703b	obj/kern/kernel.asm	/^f010703b:	7f 13                	jg     f0107050 <mp_init+0x226>$/;"	l
f010703d	obj/kern/kernel.asm	/^f010703d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0107040	obj/kern/kernel.asm	/^f0107040:	88 82 20 10 30 f0    	mov    %al,-0xfcfefe0(%edx)$/;"	l
f0107046	obj/kern/kernel.asm	/^f0107046:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107049	obj/kern/kernel.asm	/^f0107049:	a3 c4 13 30 f0       	mov    %eax,0xf03013c4$/;"	l
f010704e	obj/kern/kernel.asm	/^f010704e:	eb 14                	jmp    f0107064 <mp_init+0x23a>$/;"	l
f0107050	obj/kern/kernel.asm	/^f0107050:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0107054	obj/kern/kernel.asm	/^f0107054:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107058	obj/kern/kernel.asm	/^f0107058:	c7 04 24 74 a0 10 f0 	movl   $0xf010a074,(%esp)$/;"	l
f010705f	obj/kern/kernel.asm	/^f010705f:	e8 5a d3 ff ff       	call   f01043be <cprintf>$/;"	l
f0107064	obj/kern/kernel.asm	/^f0107064:	83 c7 14             	add    $0x14,%edi$/;"	l
f0107067	obj/kern/kernel.asm	/^f0107067:	eb 26                	jmp    f010708f <mp_init+0x265>$/;"	l
f0107069	obj/kern/kernel.asm	/^f0107069:	83 c7 08             	add    $0x8,%edi$/;"	l
f010706c	obj/kern/kernel.asm	/^f010706c:	eb 21                	jmp    f010708f <mp_init+0x265>$/;"	l
f010706e	obj/kern/kernel.asm	/^f010706e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107071	obj/kern/kernel.asm	/^f0107071:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107075	obj/kern/kernel.asm	/^f0107075:	c7 04 24 9c a0 10 f0 	movl   $0xf010a09c,(%esp)$/;"	l
f010707c	obj/kern/kernel.asm	/^f010707c:	e8 3d d3 ff ff       	call   f01043be <cprintf>$/;"	l
f0107081	obj/kern/kernel.asm	/^f0107081:	c7 05 00 10 30 f0 00 	movl   $0x0,0xf0301000$/;"	l
f0107088	obj/kern/kernel.asm	/^f0107088:	00 00 00 $/;"	l
f010708b	obj/kern/kernel.asm	/^f010708b:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f010708f	obj/kern/kernel.asm	/^f010708f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0107092	obj/kern/kernel.asm	/^f0107092:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0107096	obj/kern/kernel.asm	/^f0107096:	39 c6                	cmp    %eax,%esi$/;"	l
f0107098	obj/kern/kernel.asm	/^f0107098:	0f 82 6e ff ff ff    	jb     f010700c <mp_init+0x1e2>$/;"	l
f010709e	obj/kern/kernel.asm	/^f010709e:	a1 c0 13 30 f0       	mov    0xf03013c0,%eax$/;"	l
f01070a3	obj/kern/kernel.asm	/^f01070a3:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f01070aa	obj/kern/kernel.asm	/^f01070aa:	83 3d 00 10 30 f0 00 	cmpl   $0x0,0xf0301000$/;"	l
f01070b1	obj/kern/kernel.asm	/^f01070b1:	75 22                	jne    f01070d5 <mp_init+0x2ab>$/;"	l
f01070b3	obj/kern/kernel.asm	/^f01070b3:	c7 05 c4 13 30 f0 01 	movl   $0x1,0xf03013c4$/;"	l
f01070ba	obj/kern/kernel.asm	/^f01070ba:	00 00 00 $/;"	l
f01070bd	obj/kern/kernel.asm	/^f01070bd:	c7 05 00 20 34 f0 00 	movl   $0x0,0xf0342000$/;"	l
f01070c4	obj/kern/kernel.asm	/^f01070c4:	00 00 00 $/;"	l
f01070c7	obj/kern/kernel.asm	/^f01070c7:	c7 04 24 bc a0 10 f0 	movl   $0xf010a0bc,(%esp)$/;"	l
f01070ce	obj/kern/kernel.asm	/^f01070ce:	e8 eb d2 ff ff       	call   f01043be <cprintf>$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	eb 44                	jmp    f0107119 <mp_init+0x2ef>$/;"	l
f01070d5	obj/kern/kernel.asm	/^f01070d5:	8b 15 c4 13 30 f0    	mov    0xf03013c4,%edx$/;"	l
f01070db	obj/kern/kernel.asm	/^f01070db:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01070df	obj/kern/kernel.asm	/^f01070df:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01070e2	obj/kern/kernel.asm	/^f01070e2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01070e6	obj/kern/kernel.asm	/^f01070e6:	c7 04 24 43 a1 10 f0 	movl   $0xf010a143,(%esp)$/;"	l
f01070ed	obj/kern/kernel.asm	/^f01070ed:	e8 cc d2 ff ff       	call   f01043be <cprintf>$/;"	l
f01070f2	obj/kern/kernel.asm	/^f01070f2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01070f5	obj/kern/kernel.asm	/^f01070f5:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f01070f9	obj/kern/kernel.asm	/^f01070f9:	74 1e                	je     f0107119 <mp_init+0x2ef>$/;"	l
f01070fb	obj/kern/kernel.asm	/^f01070fb:	c7 04 24 e8 a0 10 f0 	movl   $0xf010a0e8,(%esp)$/;"	l
f0107102	obj/kern/kernel.asm	/^f0107102:	e8 b7 d2 ff ff       	call   f01043be <cprintf>$/;"	l
f0107107	obj/kern/kernel.asm	/^f0107107:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f010710c	obj/kern/kernel.asm	/^f010710c:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0107111	obj/kern/kernel.asm	/^f0107111:	ee                   	out    %al,(%dx)$/;"	l
f0107112	obj/kern/kernel.asm	/^f0107112:	b2 23                	mov    $0x23,%dl$/;"	l
f0107114	obj/kern/kernel.asm	/^f0107114:	ec                   	in     (%dx),%al$/;"	l
f0107115	obj/kern/kernel.asm	/^f0107115:	83 c8 01             	or     $0x1,%eax$/;"	l
f0107118	obj/kern/kernel.asm	/^f0107118:	ee                   	out    %al,(%dx)$/;"	l
f0107119	obj/kern/kernel.asm	/^f0107119:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010711c	obj/kern/kernel.asm	/^f010711c:	5b                   	pop    %ebx$/;"	l
f010711d	obj/kern/kernel.asm	/^f010711d:	5e                   	pop    %esi$/;"	l
f010711e	obj/kern/kernel.asm	/^f010711e:	5f                   	pop    %edi$/;"	l
f010711f	obj/kern/kernel.asm	/^f010711f:	5d                   	pop    %ebp$/;"	l
f0107120	obj/kern/kernel.asm	/^f0107120:	c3                   	ret    $/;"	l
f0107121	obj/kern/kernel.asm	/^f0107121:	66 90                	xchg   %ax,%ax$/;"	l
f0107123	obj/kern/kernel.asm	/^f0107123:	90                   	nop$/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124 <lapicw>:$/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124:	55                   	push   %ebp$/;"	l
f0107125	obj/kern/kernel.asm	/^f0107125:	89 e5                	mov    %esp,%ebp$/;"	l
f0107127	obj/kern/kernel.asm	/^f0107127:	8b 0d 04 20 34 f0    	mov    0xf0342004,%ecx$/;"	l
f010712d	obj/kern/kernel.asm	/^f010712d:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0107130	obj/kern/kernel.asm	/^f0107130:	89 10                	mov    %edx,(%eax)$/;"	l
f0107132	obj/kern/kernel.asm	/^f0107132:	a1 04 20 34 f0       	mov    0xf0342004,%eax$/;"	l
f0107137	obj/kern/kernel.asm	/^f0107137:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010713a	obj/kern/kernel.asm	/^f010713a:	5d                   	pop    %ebp$/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b:	c3                   	ret    $/;"	l
f010713c	obj/kern/kernel.asm	/^f010713c <cpunum>:$/;"	l
f010713c	obj/kern/kernel.asm	/^f010713c:	55                   	push   %ebp$/;"	l
f010713d	obj/kern/kernel.asm	/^f010713d:	89 e5                	mov    %esp,%ebp$/;"	l
f010713f	obj/kern/kernel.asm	/^f010713f:	a1 04 20 34 f0       	mov    0xf0342004,%eax$/;"	l
f0107144	obj/kern/kernel.asm	/^f0107144:	85 c0                	test   %eax,%eax$/;"	l
f0107146	obj/kern/kernel.asm	/^f0107146:	74 08                	je     f0107150 <cpunum+0x14>$/;"	l
f0107148	obj/kern/kernel.asm	/^f0107148:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010714b	obj/kern/kernel.asm	/^f010714b:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010714e	obj/kern/kernel.asm	/^f010714e:	eb 05                	jmp    f0107155 <cpunum+0x19>$/;"	l
f0107150	obj/kern/kernel.asm	/^f0107150:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107155	obj/kern/kernel.asm	/^f0107155:	5d                   	pop    %ebp$/;"	l
f0107156	obj/kern/kernel.asm	/^f0107156:	c3                   	ret    $/;"	l
f0107157	obj/kern/kernel.asm	/^f0107157 <lapic_init>:$/;"	l
f0107157	obj/kern/kernel.asm	/^f0107157:	a1 00 20 34 f0       	mov    0xf0342000,%eax$/;"	l
f010715c	obj/kern/kernel.asm	/^f010715c:	85 c0                	test   %eax,%eax$/;"	l
f010715e	obj/kern/kernel.asm	/^f010715e:	0f 84 23 01 00 00    	je     f0107287 <lapic_init+0x130>$/;"	l
f0107164	obj/kern/kernel.asm	/^f0107164:	55                   	push   %ebp$/;"	l
f0107165	obj/kern/kernel.asm	/^f0107165:	89 e5                	mov    %esp,%ebp$/;"	l
f0107167	obj/kern/kernel.asm	/^f0107167:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010716a	obj/kern/kernel.asm	/^f010716a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0107171	obj/kern/kernel.asm	/^f0107171:	00 $/;"	l
f0107172	obj/kern/kernel.asm	/^f0107172:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107175	obj/kern/kernel.asm	/^f0107175:	e8 12 a7 ff ff       	call   f010188c <mmio_map_region>$/;"	l
f010717a	obj/kern/kernel.asm	/^f010717a:	a3 04 20 34 f0       	mov    %eax,0xf0342004$/;"	l
f010717f	obj/kern/kernel.asm	/^f010717f:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0107184	obj/kern/kernel.asm	/^f0107184:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0107189	obj/kern/kernel.asm	/^f0107189:	e8 96 ff ff ff       	call   f0107124 <lapicw>$/;"	l
f010718e	obj/kern/kernel.asm	/^f010718e:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0107193	obj/kern/kernel.asm	/^f0107193:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198:	e8 87 ff ff ff       	call   f0107124 <lapicw>$/;"	l
f010719d	obj/kern/kernel.asm	/^f010719d:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f01071a2	obj/kern/kernel.asm	/^f01071a2:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f01071a7	obj/kern/kernel.asm	/^f01071a7:	e8 78 ff ff ff       	call   f0107124 <lapicw>$/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f01071b1	obj/kern/kernel.asm	/^f01071b1:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f01071b6	obj/kern/kernel.asm	/^f01071b6:	e8 69 ff ff ff       	call   f0107124 <lapicw>$/;"	l
f01071bb	obj/kern/kernel.asm	/^f01071bb:	e8 7c ff ff ff       	call   f010713c <cpunum>$/;"	l
f01071c0	obj/kern/kernel.asm	/^f01071c0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01071c3	obj/kern/kernel.asm	/^f01071c3:	05 20 10 30 f0       	add    $0xf0301020,%eax$/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	39 05 c0 13 30 f0    	cmp    %eax,0xf03013c0$/;"	l
f01071ce	obj/kern/kernel.asm	/^f01071ce:	74 0f                	je     f01071df <lapic_init+0x88>$/;"	l
f01071d0	obj/kern/kernel.asm	/^f01071d0:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01071d5	obj/kern/kernel.asm	/^f01071d5:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f01071da	obj/kern/kernel.asm	/^f01071da:	e8 45 ff ff ff       	call   f0107124 <lapicw>$/;"	l
f01071df	obj/kern/kernel.asm	/^f01071df:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01071e4	obj/kern/kernel.asm	/^f01071e4:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f01071e9	obj/kern/kernel.asm	/^f01071e9:	e8 36 ff ff ff       	call   f0107124 <lapicw>$/;"	l
f01071ee	obj/kern/kernel.asm	/^f01071ee:	a1 04 20 34 f0       	mov    0xf0342004,%eax$/;"	l
f01071f3	obj/kern/kernel.asm	/^f01071f3:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01071f6	obj/kern/kernel.asm	/^f01071f6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01071f9	obj/kern/kernel.asm	/^f01071f9:	3c 03                	cmp    $0x3,%al$/;"	l
f01071fb	obj/kern/kernel.asm	/^f01071fb:	76 0f                	jbe    f010720c <lapic_init+0xb5>$/;"	l
f01071fd	obj/kern/kernel.asm	/^f01071fd:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0107202	obj/kern/kernel.asm	/^f0107202:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0107207	obj/kern/kernel.asm	/^f0107207:	e8 18 ff ff ff       	call   f0107124 <lapicw>$/;"	l
f010720c	obj/kern/kernel.asm	/^f010720c:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0107211	obj/kern/kernel.asm	/^f0107211:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0107216	obj/kern/kernel.asm	/^f0107216:	e8 09 ff ff ff       	call   f0107124 <lapicw>$/;"	l
f010721b	obj/kern/kernel.asm	/^f010721b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107220	obj/kern/kernel.asm	/^f0107220:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0107225	obj/kern/kernel.asm	/^f0107225:	e8 fa fe ff ff       	call   f0107124 <lapicw>$/;"	l
f010722a	obj/kern/kernel.asm	/^f010722a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010722f	obj/kern/kernel.asm	/^f010722f:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0107234	obj/kern/kernel.asm	/^f0107234:	e8 eb fe ff ff       	call   f0107124 <lapicw>$/;"	l
f0107239	obj/kern/kernel.asm	/^f0107239:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010723e	obj/kern/kernel.asm	/^f010723e:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0107243	obj/kern/kernel.asm	/^f0107243:	e8 dc fe ff ff       	call   f0107124 <lapicw>$/;"	l
f0107248	obj/kern/kernel.asm	/^f0107248:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010724d	obj/kern/kernel.asm	/^f010724d:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107252	obj/kern/kernel.asm	/^f0107252:	e8 cd fe ff ff       	call   f0107124 <lapicw>$/;"	l
f0107257	obj/kern/kernel.asm	/^f0107257:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f010725c	obj/kern/kernel.asm	/^f010725c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107261	obj/kern/kernel.asm	/^f0107261:	e8 be fe ff ff       	call   f0107124 <lapicw>$/;"	l
f0107266	obj/kern/kernel.asm	/^f0107266:	8b 15 04 20 34 f0    	mov    0xf0342004,%edx$/;"	l
f010726c	obj/kern/kernel.asm	/^f010726c:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0107272	obj/kern/kernel.asm	/^f0107272:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0107275	obj/kern/kernel.asm	/^f0107275:	75 f5                	jne    f010726c <lapic_init+0x115>$/;"	l
f0107277	obj/kern/kernel.asm	/^f0107277:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010727c	obj/kern/kernel.asm	/^f010727c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107281	obj/kern/kernel.asm	/^f0107281:	e8 9e fe ff ff       	call   f0107124 <lapicw>$/;"	l
f0107286	obj/kern/kernel.asm	/^f0107286:	c9                   	leave  $/;"	l
f0107287	obj/kern/kernel.asm	/^f0107287:	f3 c3                	repz ret $/;"	l
f0107289	obj/kern/kernel.asm	/^f0107289 <lapic_eoi>:$/;"	l
f0107289	obj/kern/kernel.asm	/^f0107289:	83 3d 04 20 34 f0 00 	cmpl   $0x0,0xf0342004$/;"	l
f0107290	obj/kern/kernel.asm	/^f0107290:	74 13                	je     f01072a5 <lapic_eoi+0x1c>$/;"	l
f0107292	obj/kern/kernel.asm	/^f0107292:	55                   	push   %ebp$/;"	l
f0107293	obj/kern/kernel.asm	/^f0107293:	89 e5                	mov    %esp,%ebp$/;"	l
f0107295	obj/kern/kernel.asm	/^f0107295:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010729a	obj/kern/kernel.asm	/^f010729a:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010729f	obj/kern/kernel.asm	/^f010729f:	e8 80 fe ff ff       	call   f0107124 <lapicw>$/;"	l
f01072a4	obj/kern/kernel.asm	/^f01072a4:	5d                   	pop    %ebp$/;"	l
f01072a5	obj/kern/kernel.asm	/^f01072a5:	f3 c3                	repz ret $/;"	l
f01072a7	obj/kern/kernel.asm	/^f01072a7 <lapic_startap>:$/;"	l
f01072a7	obj/kern/kernel.asm	/^f01072a7:	55                   	push   %ebp$/;"	l
f01072a8	obj/kern/kernel.asm	/^f01072a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01072aa	obj/kern/kernel.asm	/^f01072aa:	56                   	push   %esi$/;"	l
f01072ab	obj/kern/kernel.asm	/^f01072ab:	53                   	push   %ebx$/;"	l
f01072ac	obj/kern/kernel.asm	/^f01072ac:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01072af	obj/kern/kernel.asm	/^f01072af:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01072b2	obj/kern/kernel.asm	/^f01072b2:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01072b5	obj/kern/kernel.asm	/^f01072b5:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01072ba	obj/kern/kernel.asm	/^f01072ba:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01072bf	obj/kern/kernel.asm	/^f01072bf:	ee                   	out    %al,(%dx)$/;"	l
f01072c0	obj/kern/kernel.asm	/^f01072c0:	b2 71                	mov    $0x71,%dl$/;"	l
f01072c2	obj/kern/kernel.asm	/^f01072c2:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01072c7	obj/kern/kernel.asm	/^f01072c7:	ee                   	out    %al,(%dx)$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	83 3d 74 06 30 f0 00 	cmpl   $0x0,0xf0300674$/;"	l
f01072cf	obj/kern/kernel.asm	/^f01072cf:	75 24                	jne    f01072f5 <lapic_startap+0x4e>$/;"	l
f01072d1	obj/kern/kernel.asm	/^f01072d1:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f01072d8	obj/kern/kernel.asm	/^f01072d8:	00 $/;"	l
f01072d9	obj/kern/kernel.asm	/^f01072d9:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f01072e0	obj/kern/kernel.asm	/^f01072e0:	f0 $/;"	l
f01072e1	obj/kern/kernel.asm	/^f01072e1:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f01072e8	obj/kern/kernel.asm	/^f01072e8:	00 $/;"	l
f01072e9	obj/kern/kernel.asm	/^f01072e9:	c7 04 24 60 a1 10 f0 	movl   $0xf010a160,(%esp)$/;"	l
f01072f0	obj/kern/kernel.asm	/^f01072f0:	e8 4b 8d ff ff       	call   f0100040 <_panic>$/;"	l
f01072f5	obj/kern/kernel.asm	/^f01072f5:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01072fc	obj/kern/kernel.asm	/^f01072fc:	00 00 $/;"	l
f01072fe	obj/kern/kernel.asm	/^f01072fe:	89 f0                	mov    %esi,%eax$/;"	l
f0107300	obj/kern/kernel.asm	/^f0107300:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0107303	obj/kern/kernel.asm	/^f0107303:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0107309	obj/kern/kernel.asm	/^f0107309:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f010730c	obj/kern/kernel.asm	/^f010730c:	89 da                	mov    %ebx,%edx$/;"	l
f010730e	obj/kern/kernel.asm	/^f010730e:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107313	obj/kern/kernel.asm	/^f0107313:	e8 0c fe ff ff       	call   f0107124 <lapicw>$/;"	l
f0107318	obj/kern/kernel.asm	/^f0107318:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f010731d	obj/kern/kernel.asm	/^f010731d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107322	obj/kern/kernel.asm	/^f0107322:	e8 fd fd ff ff       	call   f0107124 <lapicw>$/;"	l
f0107327	obj/kern/kernel.asm	/^f0107327:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f010732c	obj/kern/kernel.asm	/^f010732c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107331	obj/kern/kernel.asm	/^f0107331:	e8 ee fd ff ff       	call   f0107124 <lapicw>$/;"	l
f0107336	obj/kern/kernel.asm	/^f0107336:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0107339	obj/kern/kernel.asm	/^f0107339:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f010733f	obj/kern/kernel.asm	/^f010733f:	89 da                	mov    %ebx,%edx$/;"	l
f0107341	obj/kern/kernel.asm	/^f0107341:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107346	obj/kern/kernel.asm	/^f0107346:	e8 d9 fd ff ff       	call   f0107124 <lapicw>$/;"	l
f010734b	obj/kern/kernel.asm	/^f010734b:	89 f2                	mov    %esi,%edx$/;"	l
f010734d	obj/kern/kernel.asm	/^f010734d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107352	obj/kern/kernel.asm	/^f0107352:	e8 cd fd ff ff       	call   f0107124 <lapicw>$/;"	l
f0107357	obj/kern/kernel.asm	/^f0107357:	89 da                	mov    %ebx,%edx$/;"	l
f0107359	obj/kern/kernel.asm	/^f0107359:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010735e	obj/kern/kernel.asm	/^f010735e:	e8 c1 fd ff ff       	call   f0107124 <lapicw>$/;"	l
f0107363	obj/kern/kernel.asm	/^f0107363:	89 f2                	mov    %esi,%edx$/;"	l
f0107365	obj/kern/kernel.asm	/^f0107365:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010736a	obj/kern/kernel.asm	/^f010736a:	e8 b5 fd ff ff       	call   f0107124 <lapicw>$/;"	l
f010736f	obj/kern/kernel.asm	/^f010736f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107372	obj/kern/kernel.asm	/^f0107372:	5b                   	pop    %ebx$/;"	l
f0107373	obj/kern/kernel.asm	/^f0107373:	5e                   	pop    %esi$/;"	l
f0107374	obj/kern/kernel.asm	/^f0107374:	5d                   	pop    %ebp$/;"	l
f0107375	obj/kern/kernel.asm	/^f0107375:	c3                   	ret    $/;"	l
f0107376	obj/kern/kernel.asm	/^f0107376 <lapic_ipi>:$/;"	l
f0107376	obj/kern/kernel.asm	/^f0107376:	55                   	push   %ebp$/;"	l
f0107377	obj/kern/kernel.asm	/^f0107377:	89 e5                	mov    %esp,%ebp$/;"	l
f0107379	obj/kern/kernel.asm	/^f0107379:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010737c	obj/kern/kernel.asm	/^f010737c:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0107382	obj/kern/kernel.asm	/^f0107382:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107387	obj/kern/kernel.asm	/^f0107387:	e8 98 fd ff ff       	call   f0107124 <lapicw>$/;"	l
f010738c	obj/kern/kernel.asm	/^f010738c:	8b 15 04 20 34 f0    	mov    0xf0342004,%edx$/;"	l
f0107392	obj/kern/kernel.asm	/^f0107392:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0107398	obj/kern/kernel.asm	/^f0107398:	f6 c4 10             	test   $0x10,%ah$/;"	l
f010739b	obj/kern/kernel.asm	/^f010739b:	75 f5                	jne    f0107392 <lapic_ipi+0x1c>$/;"	l
f010739d	obj/kern/kernel.asm	/^f010739d:	5d                   	pop    %ebp$/;"	l
f010739e	obj/kern/kernel.asm	/^f010739e:	c3                   	ret    $/;"	l
f010739f	obj/kern/kernel.asm	/^f010739f:	90                   	nop$/;"	l
f01073a0	obj/kern/kernel.asm	/^f01073a0 <__spin_initlock>:$/;"	l
f01073a0	obj/kern/kernel.asm	/^f01073a0:	55                   	push   %ebp$/;"	l
f01073a1	obj/kern/kernel.asm	/^f01073a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01073a3	obj/kern/kernel.asm	/^f01073a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01073a6	obj/kern/kernel.asm	/^f01073a6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01073ac	obj/kern/kernel.asm	/^f01073ac:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01073af	obj/kern/kernel.asm	/^f01073af:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f01073b2	obj/kern/kernel.asm	/^f01073b2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f01073b9	obj/kern/kernel.asm	/^f01073b9:	5d                   	pop    %ebp$/;"	l
f01073ba	obj/kern/kernel.asm	/^f01073ba:	c3                   	ret    $/;"	l
f01073bb	obj/kern/kernel.asm	/^f01073bb <spin_lock>:$/;"	l
f01073bb	obj/kern/kernel.asm	/^f01073bb:	55                   	push   %ebp$/;"	l
f01073bc	obj/kern/kernel.asm	/^f01073bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01073be	obj/kern/kernel.asm	/^f01073be:	56                   	push   %esi$/;"	l
f01073bf	obj/kern/kernel.asm	/^f01073bf:	53                   	push   %ebx$/;"	l
f01073c0	obj/kern/kernel.asm	/^f01073c0:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01073c3	obj/kern/kernel.asm	/^f01073c3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01073c6	obj/kern/kernel.asm	/^f01073c6:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01073c9	obj/kern/kernel.asm	/^f01073c9:	75 07                	jne    f01073d2 <spin_lock+0x17>$/;"	l
f01073cb	obj/kern/kernel.asm	/^f01073cb:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01073d0	obj/kern/kernel.asm	/^f01073d0:	eb 42                	jmp    f0107414 <spin_lock+0x59>$/;"	l
f01073d2	obj/kern/kernel.asm	/^f01073d2:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f01073d5	obj/kern/kernel.asm	/^f01073d5:	e8 62 fd ff ff       	call   f010713c <cpunum>$/;"	l
f01073da	obj/kern/kernel.asm	/^f01073da:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01073dd	obj/kern/kernel.asm	/^f01073dd:	05 20 10 30 f0       	add    $0xf0301020,%eax$/;"	l
f01073e2	obj/kern/kernel.asm	/^f01073e2:	39 c6                	cmp    %eax,%esi$/;"	l
f01073e4	obj/kern/kernel.asm	/^f01073e4:	75 e5                	jne    f01073cb <spin_lock+0x10>$/;"	l
f01073e6	obj/kern/kernel.asm	/^f01073e6:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f01073e9	obj/kern/kernel.asm	/^f01073e9:	e8 4e fd ff ff       	call   f010713c <cpunum>$/;"	l
f01073ee	obj/kern/kernel.asm	/^f01073ee:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f01073f2	obj/kern/kernel.asm	/^f01073f2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01073f6	obj/kern/kernel.asm	/^f01073f6:	c7 44 24 08 70 a1 10 	movl   $0xf010a170,0x8(%esp)$/;"	l
f01073fd	obj/kern/kernel.asm	/^f01073fd:	f0 $/;"	l
f01073fe	obj/kern/kernel.asm	/^f01073fe:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0107405	obj/kern/kernel.asm	/^f0107405:	00 $/;"	l
f0107406	obj/kern/kernel.asm	/^f0107406:	c7 04 24 d2 a1 10 f0 	movl   $0xf010a1d2,(%esp)$/;"	l
f010740d	obj/kern/kernel.asm	/^f010740d:	e8 2e 8c ff ff       	call   f0100040 <_panic>$/;"	l
f0107412	obj/kern/kernel.asm	/^f0107412:	f3 90                	pause  $/;"	l
f0107414	obj/kern/kernel.asm	/^f0107414:	89 d0                	mov    %edx,%eax$/;"	l
f0107416	obj/kern/kernel.asm	/^f0107416:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0107419	obj/kern/kernel.asm	/^f0107419:	85 c0                	test   %eax,%eax$/;"	l
f010741b	obj/kern/kernel.asm	/^f010741b:	75 f5                	jne    f0107412 <spin_lock+0x57>$/;"	l
f010741d	obj/kern/kernel.asm	/^f010741d:	e8 1a fd ff ff       	call   f010713c <cpunum>$/;"	l
f0107422	obj/kern/kernel.asm	/^f0107422:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107425	obj/kern/kernel.asm	/^f0107425:	05 20 10 30 f0       	add    $0xf0301020,%eax$/;"	l
f010742a	obj/kern/kernel.asm	/^f010742a:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f010742d	obj/kern/kernel.asm	/^f010742d:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0107430	obj/kern/kernel.asm	/^f0107430:	89 ea                	mov    %ebp,%edx$/;"	l
f0107432	obj/kern/kernel.asm	/^f0107432:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107437	obj/kern/kernel.asm	/^f0107437:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f010743d	obj/kern/kernel.asm	/^f010743d:	76 12                	jbe    f0107451 <spin_lock+0x96>$/;"	l
f010743f	obj/kern/kernel.asm	/^f010743f:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f0107442	obj/kern/kernel.asm	/^f0107442:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0107445	obj/kern/kernel.asm	/^f0107445:	8b 12                	mov    (%edx),%edx$/;"	l
f0107447	obj/kern/kernel.asm	/^f0107447:	83 c0 01             	add    $0x1,%eax$/;"	l
f010744a	obj/kern/kernel.asm	/^f010744a:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010744d	obj/kern/kernel.asm	/^f010744d:	75 e8                	jne    f0107437 <spin_lock+0x7c>$/;"	l
f010744f	obj/kern/kernel.asm	/^f010744f:	eb 0f                	jmp    f0107460 <spin_lock+0xa5>$/;"	l
f0107451	obj/kern/kernel.asm	/^f0107451:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0107458	obj/kern/kernel.asm	/^f0107458:	83 c0 01             	add    $0x1,%eax$/;"	l
f010745b	obj/kern/kernel.asm	/^f010745b:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010745e	obj/kern/kernel.asm	/^f010745e:	7e f1                	jle    f0107451 <spin_lock+0x96>$/;"	l
f0107460	obj/kern/kernel.asm	/^f0107460:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107463	obj/kern/kernel.asm	/^f0107463:	5b                   	pop    %ebx$/;"	l
f0107464	obj/kern/kernel.asm	/^f0107464:	5e                   	pop    %esi$/;"	l
f0107465	obj/kern/kernel.asm	/^f0107465:	5d                   	pop    %ebp$/;"	l
f0107466	obj/kern/kernel.asm	/^f0107466:	c3                   	ret    $/;"	l
f0107467	obj/kern/kernel.asm	/^f0107467 <spin_unlock>:$/;"	l
f0107467	obj/kern/kernel.asm	/^f0107467:	55                   	push   %ebp$/;"	l
f0107468	obj/kern/kernel.asm	/^f0107468:	89 e5                	mov    %esp,%ebp$/;"	l
f010746a	obj/kern/kernel.asm	/^f010746a:	57                   	push   %edi$/;"	l
f010746b	obj/kern/kernel.asm	/^f010746b:	56                   	push   %esi$/;"	l
f010746c	obj/kern/kernel.asm	/^f010746c:	53                   	push   %ebx$/;"	l
f010746d	obj/kern/kernel.asm	/^f010746d:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0107470	obj/kern/kernel.asm	/^f0107470:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0107473	obj/kern/kernel.asm	/^f0107473:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0107476	obj/kern/kernel.asm	/^f0107476:	74 18                	je     f0107490 <spin_unlock+0x29>$/;"	l
f0107478	obj/kern/kernel.asm	/^f0107478:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f010747b	obj/kern/kernel.asm	/^f010747b:	e8 bc fc ff ff       	call   f010713c <cpunum>$/;"	l
f0107480	obj/kern/kernel.asm	/^f0107480:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107483	obj/kern/kernel.asm	/^f0107483:	05 20 10 30 f0       	add    $0xf0301020,%eax$/;"	l
f0107488	obj/kern/kernel.asm	/^f0107488:	39 c3                	cmp    %eax,%ebx$/;"	l
f010748a	obj/kern/kernel.asm	/^f010748a:	0f 84 ce 00 00 00    	je     f010755e <spin_unlock+0xf7>$/;"	l
f0107490	obj/kern/kernel.asm	/^f0107490:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0107497	obj/kern/kernel.asm	/^f0107497:	00 $/;"	l
f0107498	obj/kern/kernel.asm	/^f0107498:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f010749b	obj/kern/kernel.asm	/^f010749b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010749f	obj/kern/kernel.asm	/^f010749f:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f01074a2	obj/kern/kernel.asm	/^f01074a2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01074a5	obj/kern/kernel.asm	/^f01074a5:	e8 8a f6 ff ff       	call   f0106b34 <memmove>$/;"	l
f01074aa	obj/kern/kernel.asm	/^f01074aa:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01074ad	obj/kern/kernel.asm	/^f01074ad:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f01074b0	obj/kern/kernel.asm	/^f01074b0:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f01074b3	obj/kern/kernel.asm	/^f01074b3:	e8 84 fc ff ff       	call   f010713c <cpunum>$/;"	l
f01074b8	obj/kern/kernel.asm	/^f01074b8:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01074bc	obj/kern/kernel.asm	/^f01074bc:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01074c0	obj/kern/kernel.asm	/^f01074c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01074c4	obj/kern/kernel.asm	/^f01074c4:	c7 04 24 9c a1 10 f0 	movl   $0xf010a19c,(%esp)$/;"	l
f01074cb	obj/kern/kernel.asm	/^f01074cb:	e8 ee ce ff ff       	call   f01043be <cprintf>$/;"	l
f01074d0	obj/kern/kernel.asm	/^f01074d0:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f01074d3	obj/kern/kernel.asm	/^f01074d3:	eb 65                	jmp    f010753a <spin_unlock+0xd3>$/;"	l
f01074d5	obj/kern/kernel.asm	/^f01074d5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01074d9	obj/kern/kernel.asm	/^f01074d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01074dc	obj/kern/kernel.asm	/^f01074dc:	e8 bd ea ff ff       	call   f0105f9e <debuginfo_eip>$/;"	l
f01074e1	obj/kern/kernel.asm	/^f01074e1:	85 c0                	test   %eax,%eax$/;"	l
f01074e3	obj/kern/kernel.asm	/^f01074e3:	78 39                	js     f010751e <spin_unlock+0xb7>$/;"	l
f01074e5	obj/kern/kernel.asm	/^f01074e5:	8b 06                	mov    (%esi),%eax$/;"	l
f01074e7	obj/kern/kernel.asm	/^f01074e7:	89 c2                	mov    %eax,%edx$/;"	l
f01074e9	obj/kern/kernel.asm	/^f01074e9:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f01074ec	obj/kern/kernel.asm	/^f01074ec:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f01074f0	obj/kern/kernel.asm	/^f01074f0:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f01074f3	obj/kern/kernel.asm	/^f01074f3:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f01074f7	obj/kern/kernel.asm	/^f01074f7:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f01074fa	obj/kern/kernel.asm	/^f01074fa:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f01074fe	obj/kern/kernel.asm	/^f01074fe:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f0107501	obj/kern/kernel.asm	/^f0107501:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107505	obj/kern/kernel.asm	/^f0107505:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f0107508	obj/kern/kernel.asm	/^f0107508:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010750c	obj/kern/kernel.asm	/^f010750c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107510	obj/kern/kernel.asm	/^f0107510:	c7 04 24 e2 a1 10 f0 	movl   $0xf010a1e2,(%esp)$/;"	l
f0107517	obj/kern/kernel.asm	/^f0107517:	e8 a2 ce ff ff       	call   f01043be <cprintf>$/;"	l
f010751c	obj/kern/kernel.asm	/^f010751c:	eb 12                	jmp    f0107530 <spin_unlock+0xc9>$/;"	l
f010751e	obj/kern/kernel.asm	/^f010751e:	8b 06                	mov    (%esi),%eax$/;"	l
f0107520	obj/kern/kernel.asm	/^f0107520:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107524	obj/kern/kernel.asm	/^f0107524:	c7 04 24 f9 a1 10 f0 	movl   $0xf010a1f9,(%esp)$/;"	l
f010752b	obj/kern/kernel.asm	/^f010752b:	e8 8e ce ff ff       	call   f01043be <cprintf>$/;"	l
f0107530	obj/kern/kernel.asm	/^f0107530:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0107533	obj/kern/kernel.asm	/^f0107533:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0107536	obj/kern/kernel.asm	/^f0107536:	39 c3                	cmp    %eax,%ebx$/;"	l
f0107538	obj/kern/kernel.asm	/^f0107538:	74 08                	je     f0107542 <spin_unlock+0xdb>$/;"	l
f010753a	obj/kern/kernel.asm	/^f010753a:	89 de                	mov    %ebx,%esi$/;"	l
f010753c	obj/kern/kernel.asm	/^f010753c:	8b 03                	mov    (%ebx),%eax$/;"	l
f010753e	obj/kern/kernel.asm	/^f010753e:	85 c0                	test   %eax,%eax$/;"	l
f0107540	obj/kern/kernel.asm	/^f0107540:	75 93                	jne    f01074d5 <spin_unlock+0x6e>$/;"	l
f0107542	obj/kern/kernel.asm	/^f0107542:	c7 44 24 08 01 a2 10 	movl   $0xf010a201,0x8(%esp)$/;"	l
f0107549	obj/kern/kernel.asm	/^f0107549:	f0 $/;"	l
f010754a	obj/kern/kernel.asm	/^f010754a:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0107551	obj/kern/kernel.asm	/^f0107551:	00 $/;"	l
f0107552	obj/kern/kernel.asm	/^f0107552:	c7 04 24 d2 a1 10 f0 	movl   $0xf010a1d2,(%esp)$/;"	l
f0107559	obj/kern/kernel.asm	/^f0107559:	e8 e2 8a ff ff       	call   f0100040 <_panic>$/;"	l
f010755e	obj/kern/kernel.asm	/^f010755e:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0107565	obj/kern/kernel.asm	/^f0107565:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f010756c	obj/kern/kernel.asm	/^f010756c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107571	obj/kern/kernel.asm	/^f0107571:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0107574	obj/kern/kernel.asm	/^f0107574:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0107577	obj/kern/kernel.asm	/^f0107577:	5b                   	pop    %ebx$/;"	l
f0107578	obj/kern/kernel.asm	/^f0107578:	5e                   	pop    %esi$/;"	l
f0107579	obj/kern/kernel.asm	/^f0107579:	5f                   	pop    %edi$/;"	l
f010757a	obj/kern/kernel.asm	/^f010757a:	5d                   	pop    %ebp$/;"	l
f010757b	obj/kern/kernel.asm	/^f010757b:	c3                   	ret    $/;"	l
f010757c	obj/kern/kernel.asm	/^f010757c <e1000_tx_init>:$/;"	l
f010757c	obj/kern/kernel.asm	/^f010757c:	55                   	push   %ebp$/;"	l
f010757d	obj/kern/kernel.asm	/^f010757d:	89 e5                	mov    %esp,%ebp$/;"	l
f010757f	obj/kern/kernel.asm	/^f010757f:	53                   	push   %ebx$/;"	l
f0107580	obj/kern/kernel.asm	/^f0107580:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
f010758a	obj/kern/kernel.asm	/^f010758a:	00 $/;"	l
f010758b	obj/kern/kernel.asm	/^f010758b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107592	obj/kern/kernel.asm	/^f0107592:	00 $/;"	l
f0107593	obj/kern/kernel.asm	/^f0107593:	c7 04 24 60 05 30 f0 	movl   $0xf0300560,(%esp)$/;"	l
f010759a	obj/kern/kernel.asm	/^f010759a:	e8 48 f5 ff ff       	call   f0106ae7 <memset>$/;"	l
f010759f	obj/kern/kernel.asm	/^f010759f:	b8 80 a6 2f f0       	mov    $0xf02fa680,%eax$/;"	l
f01075a4	obj/kern/kernel.asm	/^f01075a4:	ba 60 05 30 f0       	mov    $0xf0300560,%edx$/;"	l
f01075a9	obj/kern/kernel.asm	/^f01075a9:	bb 60 05 30 f0       	mov    $0xf0300560,%ebx$/;"	l
f01075ae	obj/kern/kernel.asm	/^f01075ae:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01075b3	obj/kern/kernel.asm	/^f01075b3:	77 20                	ja     f01075d5 <e1000_tx_init+0x59>$/;"	l
f01075b5	obj/kern/kernel.asm	/^f01075b5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01075b9	obj/kern/kernel.asm	/^f01075b9:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01075c0	obj/kern/kernel.asm	/^f01075c0:	f0 $/;"	l
f01075c1	obj/kern/kernel.asm	/^f01075c1:	c7 44 24 04 22 00 00 	movl   $0x22,0x4(%esp)$/;"	l
f01075c8	obj/kern/kernel.asm	/^f01075c8:	00 $/;"	l
f01075c9	obj/kern/kernel.asm	/^f01075c9:	c7 04 24 19 a2 10 f0 	movl   $0xf010a219,(%esp)$/;"	l
f01075d0	obj/kern/kernel.asm	/^f01075d0:	e8 6b 8a ff ff       	call   f0100040 <_panic>$/;"	l
f01075d5	obj/kern/kernel.asm	/^f01075d5:	8d 88 00 00 00 10    	lea    0x10000000(%eax),%ecx$/;"	l
f01075db	obj/kern/kernel.asm	/^f01075db:	89 0a                	mov    %ecx,(%edx)$/;"	l
f01075dd	obj/kern/kernel.asm	/^f01075dd:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f01075e4	obj/kern/kernel.asm	/^f01075e4:	05 ee 05 00 00       	add    $0x5ee,%eax$/;"	l
f01075e9	obj/kern/kernel.asm	/^f01075e9:	83 c2 10             	add    $0x10,%edx$/;"	l
f01075ec	obj/kern/kernel.asm	/^f01075ec:	39 d8                	cmp    %ebx,%eax$/;"	l
f01075ee	obj/kern/kernel.asm	/^f01075ee:	75 be                	jne    f01075ae <e1000_tx_init+0x32>$/;"	l
f01075f0	obj/kern/kernel.asm	/^f01075f0:	8b 15 80 06 30 f0    	mov    0xf0300680,%edx$/;"	l
f01075f6	obj/kern/kernel.asm	/^f01075f6:	b8 60 05 30 f0       	mov    $0xf0300560,%eax$/;"	l
f01075fb	obj/kern/kernel.asm	/^f01075fb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0107600	obj/kern/kernel.asm	/^f0107600:	77 20                	ja     f0107622 <e1000_tx_init+0xa6>$/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107606	obj/kern/kernel.asm	/^f0107606:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f010760d	obj/kern/kernel.asm	/^f010760d:	f0 $/;"	l
f010760e	obj/kern/kernel.asm	/^f010760e:	c7 44 24 04 25 00 00 	movl   $0x25,0x4(%esp)$/;"	l
f0107615	obj/kern/kernel.asm	/^f0107615:	00 $/;"	l
f0107616	obj/kern/kernel.asm	/^f0107616:	c7 04 24 19 a2 10 f0 	movl   $0xf010a219,(%esp)$/;"	l
f010761d	obj/kern/kernel.asm	/^f010761d:	e8 1e 8a ff ff       	call   f0100040 <_panic>$/;"	l
f0107622	obj/kern/kernel.asm	/^f0107622:	c7 82 00 38 00 00 60 	movl   $0x300560,0x3800(%edx)$/;"	l
f0107629	obj/kern/kernel.asm	/^f0107629:	05 30 00 $/;"	l
f010762c	obj/kern/kernel.asm	/^f010762c:	c7 82 04 38 00 00 00 	movl   $0x0,0x3804(%edx)$/;"	l
f0107633	obj/kern/kernel.asm	/^f0107633:	00 00 00 $/;"	l
f0107636	obj/kern/kernel.asm	/^f0107636:	c7 82 08 38 00 00 00 	movl   $0x100,0x3808(%edx)$/;"	l
f010763d	obj/kern/kernel.asm	/^f010763d:	01 00 00 $/;"	l
f0107640	obj/kern/kernel.asm	/^f0107640:	c7 82 10 38 00 00 00 	movl   $0x0,0x3810(%edx)$/;"	l
f0107647	obj/kern/kernel.asm	/^f0107647:	00 00 00 $/;"	l
f010764a	obj/kern/kernel.asm	/^f010764a:	c7 82 18 38 00 00 00 	movl   $0x0,0x3818(%edx)$/;"	l
f0107651	obj/kern/kernel.asm	/^f0107651:	00 00 00 $/;"	l
f0107654	obj/kern/kernel.asm	/^f0107654:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f010765a	obj/kern/kernel.asm	/^f010765a:	83 c8 02             	or     $0x2,%eax$/;"	l
f010765d	obj/kern/kernel.asm	/^f010765d:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0107663	obj/kern/kernel.asm	/^f0107663:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107669	obj/kern/kernel.asm	/^f0107669:	83 c8 08             	or     $0x8,%eax$/;"	l
f010766c	obj/kern/kernel.asm	/^f010766c:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0107672	obj/kern/kernel.asm	/^f0107672:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107678	obj/kern/kernel.asm	/^f0107678:	25 ff 0f c0 ff       	and    $0xffc00fff,%eax$/;"	l
f010767d	obj/kern/kernel.asm	/^f010767d:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0107683	obj/kern/kernel.asm	/^f0107683:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107689	obj/kern/kernel.asm	/^f0107689:	0d 00 00 04 00       	or     $0x40000,%eax$/;"	l
f010768e	obj/kern/kernel.asm	/^f010768e:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0107694	obj/kern/kernel.asm	/^f0107694:	c7 82 10 04 00 00 0a 	movl   $0xa,0x410(%edx)$/;"	l
f010769b	obj/kern/kernel.asm	/^f010769b:	00 00 00 $/;"	l
f010769e	obj/kern/kernel.asm	/^f010769e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01076a3	obj/kern/kernel.asm	/^f01076a3:	83 c4 14             	add    $0x14,%esp$/;"	l
f01076a6	obj/kern/kernel.asm	/^f01076a6:	5b                   	pop    %ebx$/;"	l
f01076a7	obj/kern/kernel.asm	/^f01076a7:	5d                   	pop    %ebp$/;"	l
f01076a8	obj/kern/kernel.asm	/^f01076a8:	c3                   	ret    $/;"	l
f01076a9	obj/kern/kernel.asm	/^f01076a9 <e1000_rx_init>:$/;"	l
f01076a9	obj/kern/kernel.asm	/^f01076a9:	55                   	push   %ebp$/;"	l
f01076aa	obj/kern/kernel.asm	/^f01076aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01076ac	obj/kern/kernel.asm	/^f01076ac:	53                   	push   %ebx$/;"	l
f01076ad	obj/kern/kernel.asm	/^f01076ad:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01076b0	obj/kern/kernel.asm	/^f01076b0:	c7 44 24 08 00 08 00 	movl   $0x800,0x8(%esp)$/;"	l
f01076b7	obj/kern/kernel.asm	/^f01076b7:	00 $/;"	l
f01076b8	obj/kern/kernel.asm	/^f01076b8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01076bf	obj/kern/kernel.asm	/^f01076bf:	00 $/;"	l
f01076c0	obj/kern/kernel.asm	/^f01076c0:	c7 04 24 80 9e 2f f0 	movl   $0xf02f9e80,(%esp)$/;"	l
f01076c7	obj/kern/kernel.asm	/^f01076c7:	e8 1b f4 ff ff       	call   f0106ae7 <memset>$/;"	l
f01076cc	obj/kern/kernel.asm	/^f01076cc:	b8 80 9e 2b f0       	mov    $0xf02b9e80,%eax$/;"	l
f01076d1	obj/kern/kernel.asm	/^f01076d1:	ba 80 9e 2f f0       	mov    $0xf02f9e80,%edx$/;"	l
f01076d6	obj/kern/kernel.asm	/^f01076d6:	bb 80 9e 2f f0       	mov    $0xf02f9e80,%ebx$/;"	l
f01076db	obj/kern/kernel.asm	/^f01076db:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01076e0	obj/kern/kernel.asm	/^f01076e0:	77 20                	ja     f0107702 <e1000_rx_init+0x59>$/;"	l
f01076e2	obj/kern/kernel.asm	/^f01076e2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01076e6	obj/kern/kernel.asm	/^f01076e6:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f01076ed	obj/kern/kernel.asm	/^f01076ed:	f0 $/;"	l
f01076ee	obj/kern/kernel.asm	/^f01076ee:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
f01076f5	obj/kern/kernel.asm	/^f01076f5:	00 $/;"	l
f01076f6	obj/kern/kernel.asm	/^f01076f6:	c7 04 24 19 a2 10 f0 	movl   $0xf010a219,(%esp)$/;"	l
f01076fd	obj/kern/kernel.asm	/^f01076fd:	e8 3e 89 ff ff       	call   f0100040 <_panic>$/;"	l
f0107702	obj/kern/kernel.asm	/^f0107702:	8d 88 00 00 00 10    	lea    0x10000000(%eax),%ecx$/;"	l
f0107708	obj/kern/kernel.asm	/^f0107708:	89 0a                	mov    %ecx,(%edx)$/;"	l
f010770a	obj/kern/kernel.asm	/^f010770a:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f0107711	obj/kern/kernel.asm	/^f0107711:	05 00 08 00 00       	add    $0x800,%eax$/;"	l
f0107716	obj/kern/kernel.asm	/^f0107716:	83 c2 10             	add    $0x10,%edx$/;"	l
f0107719	obj/kern/kernel.asm	/^f0107719:	39 d8                	cmp    %ebx,%eax$/;"	l
f010771b	obj/kern/kernel.asm	/^f010771b:	75 be                	jne    f01076db <e1000_rx_init+0x32>$/;"	l
f010771d	obj/kern/kernel.asm	/^f010771d:	a1 80 06 30 f0       	mov    0xf0300680,%eax$/;"	l
f0107722	obj/kern/kernel.asm	/^f0107722:	c7 80 00 54 00 00 52 	movl   $0x12005452,0x5400(%eax)$/;"	l
f0107729	obj/kern/kernel.asm	/^f0107729:	54 00 12 $/;"	l
f010772c	obj/kern/kernel.asm	/^f010772c:	c7 80 04 54 00 00 34 	movl   $0x80005634,0x5404(%eax)$/;"	l
f0107733	obj/kern/kernel.asm	/^f0107733:	56 00 80 $/;"	l
f0107736	obj/kern/kernel.asm	/^f0107736:	ba 80 9e 2f f0       	mov    $0xf02f9e80,%edx$/;"	l
f010773b	obj/kern/kernel.asm	/^f010773b:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0107741	obj/kern/kernel.asm	/^f0107741:	77 20                	ja     f0107763 <e1000_rx_init+0xba>$/;"	l
f0107743	obj/kern/kernel.asm	/^f0107743:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107747	obj/kern/kernel.asm	/^f0107747:	c7 44 24 08 c8 82 10 	movl   $0xf01082c8,0x8(%esp)$/;"	l
f010774e	obj/kern/kernel.asm	/^f010774e:	f0 $/;"	l
f010774f	obj/kern/kernel.asm	/^f010774f:	c7 44 24 04 43 00 00 	movl   $0x43,0x4(%esp)$/;"	l
f0107756	obj/kern/kernel.asm	/^f0107756:	00 $/;"	l
f0107757	obj/kern/kernel.asm	/^f0107757:	c7 04 24 19 a2 10 f0 	movl   $0xf010a219,(%esp)$/;"	l
f010775e	obj/kern/kernel.asm	/^f010775e:	e8 dd 88 ff ff       	call   f0100040 <_panic>$/;"	l
f0107763	obj/kern/kernel.asm	/^f0107763:	c7 80 00 28 00 00 80 	movl   $0x2f9e80,0x2800(%eax)$/;"	l
f010776a	obj/kern/kernel.asm	/^f010776a:	9e 2f 00 $/;"	l
f010776d	obj/kern/kernel.asm	/^f010776d:	c7 80 04 28 00 00 00 	movl   $0x0,0x2804(%eax)$/;"	l
f0107774	obj/kern/kernel.asm	/^f0107774:	00 00 00 $/;"	l
f0107777	obj/kern/kernel.asm	/^f0107777:	c7 80 08 28 00 00 00 	movl   $0x800,0x2808(%eax)$/;"	l
f010777e	obj/kern/kernel.asm	/^f010777e:	08 00 00 $/;"	l
f0107781	obj/kern/kernel.asm	/^f0107781:	c7 80 10 28 00 00 00 	movl   $0x0,0x2810(%eax)$/;"	l
f0107788	obj/kern/kernel.asm	/^f0107788:	00 00 00 $/;"	l
f010778b	obj/kern/kernel.asm	/^f010778b:	c7 80 18 28 00 00 80 	movl   $0x80,0x2818(%eax)$/;"	l
f0107792	obj/kern/kernel.asm	/^f0107792:	00 00 00 $/;"	l
f0107795	obj/kern/kernel.asm	/^f0107795:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f010779b	obj/kern/kernel.asm	/^f010779b:	83 ca 02             	or     $0x2,%edx$/;"	l
f010779e	obj/kern/kernel.asm	/^f010779e:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f01077a4	obj/kern/kernel.asm	/^f01077a4:	8b 90 00 01 00 00    	mov    0x100(%eax),%edx$/;"	l
f01077aa	obj/kern/kernel.asm	/^f01077aa:	81 ca 00 00 00 04    	or     $0x4000000,%edx$/;"	l
f01077b0	obj/kern/kernel.asm	/^f01077b0:	89 90 00 01 00 00    	mov    %edx,0x100(%eax)$/;"	l
f01077b6	obj/kern/kernel.asm	/^f01077b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01077bb	obj/kern/kernel.asm	/^f01077bb:	83 c4 14             	add    $0x14,%esp$/;"	l
f01077be	obj/kern/kernel.asm	/^f01077be:	5b                   	pop    %ebx$/;"	l
f01077bf	obj/kern/kernel.asm	/^f01077bf:	5d                   	pop    %ebp$/;"	l
f01077c0	obj/kern/kernel.asm	/^f01077c0:	c3                   	ret    $/;"	l
f01077c1	obj/kern/kernel.asm	/^f01077c1 <e1000_transmit>:$/;"	l
f01077c1	obj/kern/kernel.asm	/^f01077c1:	55                   	push   %ebp$/;"	l
f01077c2	obj/kern/kernel.asm	/^f01077c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01077c4	obj/kern/kernel.asm	/^f01077c4:	56                   	push   %esi$/;"	l
f01077c5	obj/kern/kernel.asm	/^f01077c5:	53                   	push   %ebx$/;"	l
f01077c6	obj/kern/kernel.asm	/^f01077c6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01077c9	obj/kern/kernel.asm	/^f01077c9:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01077cc	obj/kern/kernel.asm	/^f01077cc:	a1 80 06 30 f0       	mov    0xf0300680,%eax$/;"	l
f01077d1	obj/kern/kernel.asm	/^f01077d1:	8b 98 18 38 00 00    	mov    0x3818(%eax),%ebx$/;"	l
f01077d7	obj/kern/kernel.asm	/^f01077d7:	81 fe ee 05 00 00    	cmp    $0x5ee,%esi$/;"	l
f01077dd	obj/kern/kernel.asm	/^f01077dd:	77 6b                	ja     f010784a <e1000_transmit+0x89>$/;"	l
f01077df	obj/kern/kernel.asm	/^f01077df:	89 d8                	mov    %ebx,%eax$/;"	l
f01077e1	obj/kern/kernel.asm	/^f01077e1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01077e4	obj/kern/kernel.asm	/^f01077e4:	f6 80 6b 05 30 f0 08 	testb  $0x8,-0xfcffa95(%eax)$/;"	l
f01077eb	obj/kern/kernel.asm	/^f01077eb:	74 0e                	je     f01077fb <e1000_transmit+0x3a>$/;"	l
f01077ed	obj/kern/kernel.asm	/^f01077ed:	89 d8                	mov    %ebx,%eax$/;"	l
f01077ef	obj/kern/kernel.asm	/^f01077ef:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01077f2	obj/kern/kernel.asm	/^f01077f2:	f6 80 6c 05 30 f0 01 	testb  $0x1,-0xfcffa94(%eax)$/;"	l
f01077f9	obj/kern/kernel.asm	/^f01077f9:	74 56                	je     f0107851 <e1000_transmit+0x90>$/;"	l
f01077fb	obj/kern/kernel.asm	/^f01077fb:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01077ff	obj/kern/kernel.asm	/^f01077ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107802	obj/kern/kernel.asm	/^f0107802:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107806	obj/kern/kernel.asm	/^f0107806:	69 c3 ee 05 00 00    	imul   $0x5ee,%ebx,%eax$/;"	l
f010780c	obj/kern/kernel.asm	/^f010780c:	05 80 a6 2f f0       	add    $0xf02fa680,%eax$/;"	l
f0107811	obj/kern/kernel.asm	/^f0107811:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107814	obj/kern/kernel.asm	/^f0107814:	e8 83 f3 ff ff       	call   f0106b9c <memcpy>$/;"	l
f0107819	obj/kern/kernel.asm	/^f0107819:	89 d8                	mov    %ebx,%eax$/;"	l
f010781b	obj/kern/kernel.asm	/^f010781b:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010781e	obj/kern/kernel.asm	/^f010781e:	66 89 b0 68 05 30 f0 	mov    %si,-0xfcffa98(%eax)$/;"	l
f0107825	obj/kern/kernel.asm	/^f0107825:	05 60 05 30 f0       	add    $0xf0300560,%eax$/;"	l
f010782a	obj/kern/kernel.asm	/^f010782a:	80 48 0b 09          	orb    $0x9,0xb(%eax)$/;"	l
f010782e	obj/kern/kernel.asm	/^f010782e:	80 60 0c fe          	andb   $0xfe,0xc(%eax)$/;"	l
f0107832	obj/kern/kernel.asm	/^f0107832:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0107835	obj/kern/kernel.asm	/^f0107835:	83 e3 0f             	and    $0xf,%ebx$/;"	l
f0107838	obj/kern/kernel.asm	/^f0107838:	a1 80 06 30 f0       	mov    0xf0300680,%eax$/;"	l
f010783d	obj/kern/kernel.asm	/^f010783d:	89 98 18 38 00 00    	mov    %ebx,0x3818(%eax)$/;"	l
f0107843	obj/kern/kernel.asm	/^f0107843:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107848	obj/kern/kernel.asm	/^f0107848:	eb 0c                	jmp    f0107856 <e1000_transmit+0x95>$/;"	l
f010784a	obj/kern/kernel.asm	/^f010784a:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
f010784f	obj/kern/kernel.asm	/^f010784f:	eb 05                	jmp    f0107856 <e1000_transmit+0x95>$/;"	l
f0107851	obj/kern/kernel.asm	/^f0107851:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
f0107856	obj/kern/kernel.asm	/^f0107856:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107859	obj/kern/kernel.asm	/^f0107859:	5b                   	pop    %ebx$/;"	l
f010785a	obj/kern/kernel.asm	/^f010785a:	5e                   	pop    %esi$/;"	l
f010785b	obj/kern/kernel.asm	/^f010785b:	5d                   	pop    %ebp$/;"	l
f010785c	obj/kern/kernel.asm	/^f010785c:	c3                   	ret    $/;"	l
f010785d	obj/kern/kernel.asm	/^f010785d <e1000_receive>:$/;"	l
f010785d	obj/kern/kernel.asm	/^f010785d:	55                   	push   %ebp$/;"	l
f010785e	obj/kern/kernel.asm	/^f010785e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107860	obj/kern/kernel.asm	/^f0107860:	56                   	push   %esi$/;"	l
f0107861	obj/kern/kernel.asm	/^f0107861:	53                   	push   %ebx$/;"	l
f0107862	obj/kern/kernel.asm	/^f0107862:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107865	obj/kern/kernel.asm	/^f0107865:	a1 80 06 30 f0       	mov    0xf0300680,%eax$/;"	l
f010786a	obj/kern/kernel.asm	/^f010786a:	8b 98 18 28 00 00    	mov    0x2818(%eax),%ebx$/;"	l
f0107870	obj/kern/kernel.asm	/^f0107870:	83 e3 7f             	and    $0x7f,%ebx$/;"	l
f0107873	obj/kern/kernel.asm	/^f0107873:	89 d8                	mov    %ebx,%eax$/;"	l
f0107875	obj/kern/kernel.asm	/^f0107875:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0107878	obj/kern/kernel.asm	/^f0107878:	f6 80 6c 05 30 f0 01 	testb  $0x1,-0xfcffa94(%eax)$/;"	l
f010787f	obj/kern/kernel.asm	/^f010787f:	74 55                	je     f01078d6 <e1000_receive+0x79>$/;"	l
f0107881	obj/kern/kernel.asm	/^f0107881:	89 d8                	mov    %ebx,%eax$/;"	l
f0107883	obj/kern/kernel.asm	/^f0107883:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0107886	obj/kern/kernel.asm	/^f0107886:	0f b7 80 68 05 30 f0 	movzwl -0xfcffa98(%eax),%eax$/;"	l
f010788d	obj/kern/kernel.asm	/^f010788d:	0f b7 d0             	movzwl %ax,%edx$/;"	l
f0107890	obj/kern/kernel.asm	/^f0107890:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0107893	obj/kern/kernel.asm	/^f0107893:	77 48                	ja     f01078dd <e1000_receive+0x80>$/;"	l
f0107895	obj/kern/kernel.asm	/^f0107895:	89 d6                	mov    %edx,%esi$/;"	l
f0107897	obj/kern/kernel.asm	/^f0107897:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010789b	obj/kern/kernel.asm	/^f010789b:	69 c3 ee 05 00 00    	imul   $0x5ee,%ebx,%eax$/;"	l
f01078a1	obj/kern/kernel.asm	/^f01078a1:	05 80 a6 2f f0       	add    $0xf02fa680,%eax$/;"	l
f01078a6	obj/kern/kernel.asm	/^f01078a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01078aa	obj/kern/kernel.asm	/^f01078aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01078ad	obj/kern/kernel.asm	/^f01078ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01078b0	obj/kern/kernel.asm	/^f01078b0:	e8 e7 f2 ff ff       	call   f0106b9c <memcpy>$/;"	l
f01078b5	obj/kern/kernel.asm	/^f01078b5:	89 d8                	mov    %ebx,%eax$/;"	l
f01078b7	obj/kern/kernel.asm	/^f01078b7:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01078ba	obj/kern/kernel.asm	/^f01078ba:	80 a0 6c 05 30 f0 fc 	andb   $0xfc,-0xfcffa94(%eax)$/;"	l
f01078c1	obj/kern/kernel.asm	/^f01078c1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01078c4	obj/kern/kernel.asm	/^f01078c4:	83 e3 7f             	and    $0x7f,%ebx$/;"	l
f01078c7	obj/kern/kernel.asm	/^f01078c7:	a1 80 06 30 f0       	mov    0xf0300680,%eax$/;"	l
f01078cc	obj/kern/kernel.asm	/^f01078cc:	89 98 18 28 00 00    	mov    %ebx,0x2818(%eax)$/;"	l
f01078d2	obj/kern/kernel.asm	/^f01078d2:	89 f0                	mov    %esi,%eax$/;"	l
f01078d4	obj/kern/kernel.asm	/^f01078d4:	eb 0c                	jmp    f01078e2 <e1000_receive+0x85>$/;"	l
f01078d6	obj/kern/kernel.asm	/^f01078d6:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
f01078db	obj/kern/kernel.asm	/^f01078db:	eb 05                	jmp    f01078e2 <e1000_receive+0x85>$/;"	l
f01078dd	obj/kern/kernel.asm	/^f01078dd:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
f01078e2	obj/kern/kernel.asm	/^f01078e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01078e5	obj/kern/kernel.asm	/^f01078e5:	5b                   	pop    %ebx$/;"	l
f01078e6	obj/kern/kernel.asm	/^f01078e6:	5e                   	pop    %esi$/;"	l
f01078e7	obj/kern/kernel.asm	/^f01078e7:	5d                   	pop    %ebp$/;"	l
f01078e8	obj/kern/kernel.asm	/^f01078e8:	c3                   	ret    $/;"	l
f01078e9	obj/kern/kernel.asm	/^f01078e9:	66 90                	xchg   %ax,%ax$/;"	l
f01078eb	obj/kern/kernel.asm	/^f01078eb:	90                   	nop$/;"	l
f01078ec	obj/kern/kernel.asm	/^f01078ec <pci_attach_match>:$/;"	l
f01078ec	obj/kern/kernel.asm	/^f01078ec:	55                   	push   %ebp$/;"	l
f01078ed	obj/kern/kernel.asm	/^f01078ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01078ef	obj/kern/kernel.asm	/^f01078ef:	57                   	push   %edi$/;"	l
f01078f0	obj/kern/kernel.asm	/^f01078f0:	56                   	push   %esi$/;"	l
f01078f1	obj/kern/kernel.asm	/^f01078f1:	53                   	push   %ebx$/;"	l
f01078f2	obj/kern/kernel.asm	/^f01078f2:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01078f5	obj/kern/kernel.asm	/^f01078f5:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01078f8	obj/kern/kernel.asm	/^f01078f8:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01078fb	obj/kern/kernel.asm	/^f01078fb:	eb 41                	jmp    f010793e <pci_attach_match+0x52>$/;"	l
f01078fd	obj/kern/kernel.asm	/^f01078fd:	39 3b                	cmp    %edi,(%ebx)$/;"	l
f01078ff	obj/kern/kernel.asm	/^f01078ff:	75 3a                	jne    f010793b <pci_attach_match+0x4f>$/;"	l
f0107901	obj/kern/kernel.asm	/^f0107901:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107904	obj/kern/kernel.asm	/^f0107904:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f0107907	obj/kern/kernel.asm	/^f0107907:	75 32                	jne    f010793b <pci_attach_match+0x4f>$/;"	l
f0107909	obj/kern/kernel.asm	/^f0107909:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f010790c	obj/kern/kernel.asm	/^f010790c:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f010790f	obj/kern/kernel.asm	/^f010790f:	ff d0                	call   *%eax$/;"	l
f0107911	obj/kern/kernel.asm	/^f0107911:	85 c0                	test   %eax,%eax$/;"	l
f0107913	obj/kern/kernel.asm	/^f0107913:	7f 32                	jg     f0107947 <pci_attach_match+0x5b>$/;"	l
f0107915	obj/kern/kernel.asm	/^f0107915:	85 c0                	test   %eax,%eax$/;"	l
f0107917	obj/kern/kernel.asm	/^f0107917:	79 22                	jns    f010793b <pci_attach_match+0x4f>$/;"	l
f0107919	obj/kern/kernel.asm	/^f0107919:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010791d	obj/kern/kernel.asm	/^f010791d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0107920	obj/kern/kernel.asm	/^f0107920:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107924	obj/kern/kernel.asm	/^f0107924:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107927	obj/kern/kernel.asm	/^f0107927:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010792b	obj/kern/kernel.asm	/^f010792b:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010792f	obj/kern/kernel.asm	/^f010792f:	c7 04 24 28 a2 10 f0 	movl   $0xf010a228,(%esp)$/;"	l
f0107936	obj/kern/kernel.asm	/^f0107936:	e8 83 ca ff ff       	call   f01043be <cprintf>$/;"	l
f010793b	obj/kern/kernel.asm	/^f010793b:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010793e	obj/kern/kernel.asm	/^f010793e:	89 de                	mov    %ebx,%esi$/;"	l
f0107940	obj/kern/kernel.asm	/^f0107940:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107943	obj/kern/kernel.asm	/^f0107943:	85 c0                	test   %eax,%eax$/;"	l
f0107945	obj/kern/kernel.asm	/^f0107945:	75 b6                	jne    f01078fd <pci_attach_match+0x11>$/;"	l
f0107947	obj/kern/kernel.asm	/^f0107947:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010794a	obj/kern/kernel.asm	/^f010794a:	5b                   	pop    %ebx$/;"	l
f010794b	obj/kern/kernel.asm	/^f010794b:	5e                   	pop    %esi$/;"	l
f010794c	obj/kern/kernel.asm	/^f010794c:	5f                   	pop    %edi$/;"	l
f010794d	obj/kern/kernel.asm	/^f010794d:	5d                   	pop    %ebp$/;"	l
f010794e	obj/kern/kernel.asm	/^f010794e:	c3                   	ret    $/;"	l
f010794f	obj/kern/kernel.asm	/^f010794f <pci_conf1_set_addr>:$/;"	l
f010794f	obj/kern/kernel.asm	/^f010794f:	55                   	push   %ebp$/;"	l
f0107950	obj/kern/kernel.asm	/^f0107950:	89 e5                	mov    %esp,%ebp$/;"	l
f0107952	obj/kern/kernel.asm	/^f0107952:	56                   	push   %esi$/;"	l
f0107953	obj/kern/kernel.asm	/^f0107953:	53                   	push   %ebx$/;"	l
f0107954	obj/kern/kernel.asm	/^f0107954:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107957	obj/kern/kernel.asm	/^f0107957:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010795a	obj/kern/kernel.asm	/^f010795a:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f010795f	obj/kern/kernel.asm	/^f010795f:	76 24                	jbe    f0107985 <pci_conf1_set_addr+0x36>$/;"	l
f0107961	obj/kern/kernel.asm	/^f0107961:	c7 44 24 0c a8 a3 10 	movl   $0xf010a3a8,0xc(%esp)$/;"	l
f0107968	obj/kern/kernel.asm	/^f0107968:	f0 $/;"	l
f0107969	obj/kern/kernel.asm	/^f0107969:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0107970	obj/kern/kernel.asm	/^f0107970:	f0 $/;"	l
f0107971	obj/kern/kernel.asm	/^f0107971:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f0107978	obj/kern/kernel.asm	/^f0107978:	00 $/;"	l
f0107979	obj/kern/kernel.asm	/^f0107979:	c7 04 24 b2 a3 10 f0 	movl   $0xf010a3b2,(%esp)$/;"	l
f0107980	obj/kern/kernel.asm	/^f0107980:	e8 bb 86 ff ff       	call   f0100040 <_panic>$/;"	l
f0107985	obj/kern/kernel.asm	/^f0107985:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f0107988	obj/kern/kernel.asm	/^f0107988:	76 24                	jbe    f01079ae <pci_conf1_set_addr+0x5f>$/;"	l
f010798a	obj/kern/kernel.asm	/^f010798a:	c7 44 24 0c bd a3 10 	movl   $0xf010a3bd,0xc(%esp)$/;"	l
f0107991	obj/kern/kernel.asm	/^f0107991:	f0 $/;"	l
f0107992	obj/kern/kernel.asm	/^f0107992:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0107999	obj/kern/kernel.asm	/^f0107999:	f0 $/;"	l
f010799a	obj/kern/kernel.asm	/^f010799a:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)$/;"	l
f01079a1	obj/kern/kernel.asm	/^f01079a1:	00 $/;"	l
f01079a2	obj/kern/kernel.asm	/^f01079a2:	c7 04 24 b2 a3 10 f0 	movl   $0xf010a3b2,(%esp)$/;"	l
f01079a9	obj/kern/kernel.asm	/^f01079a9:	e8 92 86 ff ff       	call   f0100040 <_panic>$/;"	l
f01079ae	obj/kern/kernel.asm	/^f01079ae:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f01079b1	obj/kern/kernel.asm	/^f01079b1:	76 24                	jbe    f01079d7 <pci_conf1_set_addr+0x88>$/;"	l
f01079b3	obj/kern/kernel.asm	/^f01079b3:	c7 44 24 0c c6 a3 10 	movl   $0xf010a3c6,0xc(%esp)$/;"	l
f01079ba	obj/kern/kernel.asm	/^f01079ba:	f0 $/;"	l
f01079bb	obj/kern/kernel.asm	/^f01079bb:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01079c2	obj/kern/kernel.asm	/^f01079c2:	f0 $/;"	l
f01079c3	obj/kern/kernel.asm	/^f01079c3:	c7 44 24 04 31 00 00 	movl   $0x31,0x4(%esp)$/;"	l
f01079ca	obj/kern/kernel.asm	/^f01079ca:	00 $/;"	l
f01079cb	obj/kern/kernel.asm	/^f01079cb:	c7 04 24 b2 a3 10 f0 	movl   $0xf010a3b2,(%esp)$/;"	l
f01079d2	obj/kern/kernel.asm	/^f01079d2:	e8 69 86 ff ff       	call   f0100040 <_panic>$/;"	l
f01079d7	obj/kern/kernel.asm	/^f01079d7:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f01079dd	obj/kern/kernel.asm	/^f01079dd:	76 24                	jbe    f0107a03 <pci_conf1_set_addr+0xb4>$/;"	l
f01079df	obj/kern/kernel.asm	/^f01079df:	c7 44 24 0c cf a3 10 	movl   $0xf010a3cf,0xc(%esp)$/;"	l
f01079e6	obj/kern/kernel.asm	/^f01079e6:	f0 $/;"	l
f01079e7	obj/kern/kernel.asm	/^f01079e7:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f01079ee	obj/kern/kernel.asm	/^f01079ee:	f0 $/;"	l
f01079ef	obj/kern/kernel.asm	/^f01079ef:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
f01079f6	obj/kern/kernel.asm	/^f01079f6:	00 $/;"	l
f01079f7	obj/kern/kernel.asm	/^f01079f7:	c7 04 24 b2 a3 10 f0 	movl   $0xf010a3b2,(%esp)$/;"	l
f01079fe	obj/kern/kernel.asm	/^f01079fe:	e8 3d 86 ff ff       	call   f0100040 <_panic>$/;"	l
f0107a03	obj/kern/kernel.asm	/^f0107a03:	f6 c3 03             	test   $0x3,%bl$/;"	l
f0107a06	obj/kern/kernel.asm	/^f0107a06:	74 24                	je     f0107a2c <pci_conf1_set_addr+0xdd>$/;"	l
f0107a08	obj/kern/kernel.asm	/^f0107a08:	c7 44 24 0c dc a3 10 	movl   $0xf010a3dc,0xc(%esp)$/;"	l
f0107a0f	obj/kern/kernel.asm	/^f0107a0f:	f0 $/;"	l
f0107a10	obj/kern/kernel.asm	/^f0107a10:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0107a17	obj/kern/kernel.asm	/^f0107a17:	f0 $/;"	l
f0107a18	obj/kern/kernel.asm	/^f0107a18:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
f0107a1f	obj/kern/kernel.asm	/^f0107a1f:	00 $/;"	l
f0107a20	obj/kern/kernel.asm	/^f0107a20:	c7 04 24 b2 a3 10 f0 	movl   $0xf010a3b2,(%esp)$/;"	l
f0107a27	obj/kern/kernel.asm	/^f0107a27:	e8 14 86 ff ff       	call   f0100040 <_panic>$/;"	l
f0107a2c	obj/kern/kernel.asm	/^f0107a2c:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f0107a32	obj/kern/kernel.asm	/^f0107a32:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0107a35	obj/kern/kernel.asm	/^f0107a35:	09 cb                	or     %ecx,%ebx$/;"	l
f0107a37	obj/kern/kernel.asm	/^f0107a37:	89 d6                	mov    %edx,%esi$/;"	l
f0107a39	obj/kern/kernel.asm	/^f0107a39:	c1 e6 0b             	shl    $0xb,%esi$/;"	l
f0107a3c	obj/kern/kernel.asm	/^f0107a3c:	09 f3                	or     %esi,%ebx$/;"	l
f0107a3e	obj/kern/kernel.asm	/^f0107a3e:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0107a41	obj/kern/kernel.asm	/^f0107a41:	89 c6                	mov    %eax,%esi$/;"	l
f0107a43	obj/kern/kernel.asm	/^f0107a43:	89 d8                	mov    %ebx,%eax$/;"	l
f0107a45	obj/kern/kernel.asm	/^f0107a45:	09 f0                	or     %esi,%eax$/;"	l
f0107a47	obj/kern/kernel.asm	/^f0107a47:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f0107a4c	obj/kern/kernel.asm	/^f0107a4c:	ef                   	out    %eax,(%dx)$/;"	l
f0107a4d	obj/kern/kernel.asm	/^f0107a4d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107a50	obj/kern/kernel.asm	/^f0107a50:	5b                   	pop    %ebx$/;"	l
f0107a51	obj/kern/kernel.asm	/^f0107a51:	5e                   	pop    %esi$/;"	l
f0107a52	obj/kern/kernel.asm	/^f0107a52:	5d                   	pop    %ebp$/;"	l
f0107a53	obj/kern/kernel.asm	/^f0107a53:	c3                   	ret    $/;"	l
f0107a54	obj/kern/kernel.asm	/^f0107a54 <pci_conf_read>:$/;"	l
f0107a54	obj/kern/kernel.asm	/^f0107a54:	55                   	push   %ebp$/;"	l
f0107a55	obj/kern/kernel.asm	/^f0107a55:	89 e5                	mov    %esp,%ebp$/;"	l
f0107a57	obj/kern/kernel.asm	/^f0107a57:	53                   	push   %ebx$/;"	l
f0107a58	obj/kern/kernel.asm	/^f0107a58:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107a5b	obj/kern/kernel.asm	/^f0107a5b:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107a5e	obj/kern/kernel.asm	/^f0107a5e:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0107a61	obj/kern/kernel.asm	/^f0107a61:	8b 00                	mov    (%eax),%eax$/;"	l
f0107a63	obj/kern/kernel.asm	/^f0107a63:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107a66	obj/kern/kernel.asm	/^f0107a66:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107a69	obj/kern/kernel.asm	/^f0107a69:	89 da                	mov    %ebx,%edx$/;"	l
f0107a6b	obj/kern/kernel.asm	/^f0107a6b:	e8 df fe ff ff       	call   f010794f <pci_conf1_set_addr>$/;"	l
f0107a70	obj/kern/kernel.asm	/^f0107a70:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107a75	obj/kern/kernel.asm	/^f0107a75:	ed                   	in     (%dx),%eax$/;"	l
f0107a76	obj/kern/kernel.asm	/^f0107a76:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107a79	obj/kern/kernel.asm	/^f0107a79:	5b                   	pop    %ebx$/;"	l
f0107a7a	obj/kern/kernel.asm	/^f0107a7a:	5d                   	pop    %ebp$/;"	l
f0107a7b	obj/kern/kernel.asm	/^f0107a7b:	c3                   	ret    $/;"	l
f0107a7c	obj/kern/kernel.asm	/^f0107a7c <pci_scan_bus>:$/;"	l
f0107a7c	obj/kern/kernel.asm	/^f0107a7c:	55                   	push   %ebp$/;"	l
f0107a7d	obj/kern/kernel.asm	/^f0107a7d:	89 e5                	mov    %esp,%ebp$/;"	l
f0107a7f	obj/kern/kernel.asm	/^f0107a7f:	57                   	push   %edi$/;"	l
f0107a80	obj/kern/kernel.asm	/^f0107a80:	56                   	push   %esi$/;"	l
f0107a81	obj/kern/kernel.asm	/^f0107a81:	53                   	push   %ebx$/;"	l
f0107a82	obj/kern/kernel.asm	/^f0107a82:	81 ec 1c 01 00 00    	sub    $0x11c,%esp$/;"	l
f0107a88	obj/kern/kernel.asm	/^f0107a88:	89 c3                	mov    %eax,%ebx$/;"	l
f0107a8a	obj/kern/kernel.asm	/^f0107a8a:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f0107a91	obj/kern/kernel.asm	/^f0107a91:	00 $/;"	l
f0107a92	obj/kern/kernel.asm	/^f0107a92:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107a99	obj/kern/kernel.asm	/^f0107a99:	00 $/;"	l
f0107a9a	obj/kern/kernel.asm	/^f0107a9a:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107a9d	obj/kern/kernel.asm	/^f0107a9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107aa0	obj/kern/kernel.asm	/^f0107aa0:	e8 42 f0 ff ff       	call   f0106ae7 <memset>$/;"	l
f0107aa5	obj/kern/kernel.asm	/^f0107aa5:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0107aa8	obj/kern/kernel.asm	/^f0107aa8:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0107aaf	obj/kern/kernel.asm	/^f0107aaf:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f0107ab6	obj/kern/kernel.asm	/^f0107ab6:	00 00 00 $/;"	l
f0107ab9	obj/kern/kernel.asm	/^f0107ab9:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f0107abe	obj/kern/kernel.asm	/^f0107abe:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107ac1	obj/kern/kernel.asm	/^f0107ac1:	e8 8e ff ff ff       	call   f0107a54 <pci_conf_read>$/;"	l
f0107ac6	obj/kern/kernel.asm	/^f0107ac6:	89 c2                	mov    %eax,%edx$/;"	l
f0107ac8	obj/kern/kernel.asm	/^f0107ac8:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107acb	obj/kern/kernel.asm	/^f0107acb:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0107ace	obj/kern/kernel.asm	/^f0107ace:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0107ad1	obj/kern/kernel.asm	/^f0107ad1:	0f 87 6f 01 00 00    	ja     f0107c46 <pci_scan_bus+0x1ca>$/;"	l
f0107ad7	obj/kern/kernel.asm	/^f0107ad7:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f0107ade	obj/kern/kernel.asm	/^f0107ade:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0107ae3	obj/kern/kernel.asm	/^f0107ae3:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f0107ae9	obj/kern/kernel.asm	/^f0107ae9:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f0107aec	obj/kern/kernel.asm	/^f0107aec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0107aee	obj/kern/kernel.asm	/^f0107aee:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f0107af5	obj/kern/kernel.asm	/^f0107af5:	00 00 00 $/;"	l
f0107af8	obj/kern/kernel.asm	/^f0107af8:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f0107afd	obj/kern/kernel.asm	/^f0107afd:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f0107b03	obj/kern/kernel.asm	/^f0107b03:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f0107b09	obj/kern/kernel.asm	/^f0107b09:	e9 1d 01 00 00       	jmp    f0107c2b <pci_scan_bus+0x1af>$/;"	l
f0107b0e	obj/kern/kernel.asm	/^f0107b0e:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0107b13	obj/kern/kernel.asm	/^f0107b13:	89 df                	mov    %ebx,%edi$/;"	l
f0107b15	obj/kern/kernel.asm	/^f0107b15:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f0107b1b	obj/kern/kernel.asm	/^f0107b1b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0107b1d	obj/kern/kernel.asm	/^f0107b1d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107b22	obj/kern/kernel.asm	/^f0107b22:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f0107b28	obj/kern/kernel.asm	/^f0107b28:	e8 27 ff ff ff       	call   f0107a54 <pci_conf_read>$/;"	l
f0107b2d	obj/kern/kernel.asm	/^f0107b2d:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f0107b33	obj/kern/kernel.asm	/^f0107b33:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0107b37	obj/kern/kernel.asm	/^f0107b37:	0f 84 e7 00 00 00    	je     f0107c24 <pci_scan_bus+0x1a8>$/;"	l
f0107b3d	obj/kern/kernel.asm	/^f0107b3d:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f0107b42	obj/kern/kernel.asm	/^f0107b42:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b44	obj/kern/kernel.asm	/^f0107b44:	e8 0b ff ff ff       	call   f0107a54 <pci_conf_read>$/;"	l
f0107b49	obj/kern/kernel.asm	/^f0107b49:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f0107b4c	obj/kern/kernel.asm	/^f0107b4c:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0107b51	obj/kern/kernel.asm	/^f0107b51:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b53	obj/kern/kernel.asm	/^f0107b53:	e8 fc fe ff ff       	call   f0107a54 <pci_conf_read>$/;"	l
f0107b58	obj/kern/kernel.asm	/^f0107b58:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f0107b5e	obj/kern/kernel.asm	/^f0107b5e:	89 c2                	mov    %eax,%edx$/;"	l
f0107b60	obj/kern/kernel.asm	/^f0107b60:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f0107b63	obj/kern/kernel.asm	/^f0107b63:	b9 f0 a3 10 f0       	mov    $0xf010a3f0,%ecx$/;"	l
f0107b68	obj/kern/kernel.asm	/^f0107b68:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0107b6b	obj/kern/kernel.asm	/^f0107b6b:	77 07                	ja     f0107b74 <pci_scan_bus+0xf8>$/;"	l
f0107b6d	obj/kern/kernel.asm	/^f0107b6d:	8b 0c 95 94 a4 10 f0 	mov    -0xfef5b6c(,%edx,4),%ecx$/;"	l
f0107b74	obj/kern/kernel.asm	/^f0107b74:	8b b5 64 ff ff ff    	mov    -0x9c(%ebp),%esi$/;"	l
f0107b7a	obj/kern/kernel.asm	/^f0107b7a:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f0107b7e	obj/kern/kernel.asm	/^f0107b7e:	89 7c 24 24          	mov    %edi,0x24(%esp)$/;"	l
f0107b82	obj/kern/kernel.asm	/^f0107b82:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f0107b86	obj/kern/kernel.asm	/^f0107b86:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107b89	obj/kern/kernel.asm	/^f0107b89:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107b8c	obj/kern/kernel.asm	/^f0107b8c:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0107b90	obj/kern/kernel.asm	/^f0107b90:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0107b94	obj/kern/kernel.asm	/^f0107b94:	89 f0                	mov    %esi,%eax$/;"	l
f0107b96	obj/kern/kernel.asm	/^f0107b96:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107b99	obj/kern/kernel.asm	/^f0107b99:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0107b9d	obj/kern/kernel.asm	/^f0107b9d:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0107ba0	obj/kern/kernel.asm	/^f0107ba0:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0107ba4	obj/kern/kernel.asm	/^f0107ba4:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax$/;"	l
f0107baa	obj/kern/kernel.asm	/^f0107baa:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107bae	obj/kern/kernel.asm	/^f0107bae:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax$/;"	l
f0107bb4	obj/kern/kernel.asm	/^f0107bb4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107bb8	obj/kern/kernel.asm	/^f0107bb8:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f0107bbe	obj/kern/kernel.asm	/^f0107bbe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107bc1	obj/kern/kernel.asm	/^f0107bc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107bc5	obj/kern/kernel.asm	/^f0107bc5:	c7 04 24 54 a2 10 f0 	movl   $0xf010a254,(%esp)$/;"	l
f0107bcc	obj/kern/kernel.asm	/^f0107bcc:	e8 ed c7 ff ff       	call   f01043be <cprintf>$/;"	l
f0107bd1	obj/kern/kernel.asm	/^f0107bd1:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f0107bd7	obj/kern/kernel.asm	/^f0107bd7:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107bdb	obj/kern/kernel.asm	/^f0107bdb:	c7 44 24 08 0c 68 12 	movl   $0xf012680c,0x8(%esp)$/;"	l
f0107be2	obj/kern/kernel.asm	/^f0107be2:	f0 $/;"	l
f0107be3	obj/kern/kernel.asm	/^f0107be3:	89 c2                	mov    %eax,%edx$/;"	l
f0107be5	obj/kern/kernel.asm	/^f0107be5:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107be8	obj/kern/kernel.asm	/^f0107be8:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0107beb	obj/kern/kernel.asm	/^f0107beb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107bef	obj/kern/kernel.asm	/^f0107bef:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0107bf2	obj/kern/kernel.asm	/^f0107bf2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107bf5	obj/kern/kernel.asm	/^f0107bf5:	e8 f2 fc ff ff       	call   f01078ec <pci_attach_match>$/;"	l
f0107bfa	obj/kern/kernel.asm	/^f0107bfa:	85 c0                	test   %eax,%eax$/;"	l
f0107bfc	obj/kern/kernel.asm	/^f0107bfc:	75 26                	jne    f0107c24 <pci_scan_bus+0x1a8>$/;"	l
f0107bfe	obj/kern/kernel.asm	/^f0107bfe:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f0107c04	obj/kern/kernel.asm	/^f0107c04:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107c08	obj/kern/kernel.asm	/^f0107c08:	c7 44 24 08 f4 67 12 	movl   $0xf01267f4,0x8(%esp)$/;"	l
f0107c0f	obj/kern/kernel.asm	/^f0107c0f:	f0 $/;"	l
f0107c10	obj/kern/kernel.asm	/^f0107c10:	89 c2                	mov    %eax,%edx$/;"	l
f0107c12	obj/kern/kernel.asm	/^f0107c12:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107c15	obj/kern/kernel.asm	/^f0107c15:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107c19	obj/kern/kernel.asm	/^f0107c19:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107c1c	obj/kern/kernel.asm	/^f0107c1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107c1f	obj/kern/kernel.asm	/^f0107c1f:	e8 c8 fc ff ff       	call   f01078ec <pci_attach_match>$/;"	l
f0107c24	obj/kern/kernel.asm	/^f0107c24:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f0107c2b	obj/kern/kernel.asm	/^f0107c2b:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)$/;"	l
f0107c32	obj/kern/kernel.asm	/^f0107c32:	19 c0                	sbb    %eax,%eax$/;"	l
f0107c34	obj/kern/kernel.asm	/^f0107c34:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0107c37	obj/kern/kernel.asm	/^f0107c37:	83 c0 08             	add    $0x8,%eax$/;"	l
f0107c3a	obj/kern/kernel.asm	/^f0107c3a:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f0107c40	obj/kern/kernel.asm	/^f0107c40:	0f 87 c8 fe ff ff    	ja     f0107b0e <pci_scan_bus+0x92>$/;"	l
f0107c46	obj/kern/kernel.asm	/^f0107c46:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0107c49	obj/kern/kernel.asm	/^f0107c49:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107c4c	obj/kern/kernel.asm	/^f0107c4c:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0107c4f	obj/kern/kernel.asm	/^f0107c4f:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0107c52	obj/kern/kernel.asm	/^f0107c52:	0f 86 61 fe ff ff    	jbe    f0107ab9 <pci_scan_bus+0x3d>$/;"	l
f0107c58	obj/kern/kernel.asm	/^f0107c58:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f0107c5e	obj/kern/kernel.asm	/^f0107c5e:	81 c4 1c 01 00 00    	add    $0x11c,%esp$/;"	l
f0107c64	obj/kern/kernel.asm	/^f0107c64:	5b                   	pop    %ebx$/;"	l
f0107c65	obj/kern/kernel.asm	/^f0107c65:	5e                   	pop    %esi$/;"	l
f0107c66	obj/kern/kernel.asm	/^f0107c66:	5f                   	pop    %edi$/;"	l
f0107c67	obj/kern/kernel.asm	/^f0107c67:	5d                   	pop    %ebp$/;"	l
f0107c68	obj/kern/kernel.asm	/^f0107c68:	c3                   	ret    $/;"	l
f0107c69	obj/kern/kernel.asm	/^f0107c69 <pci_bridge_attach>:$/;"	l
f0107c69	obj/kern/kernel.asm	/^f0107c69:	55                   	push   %ebp$/;"	l
f0107c6a	obj/kern/kernel.asm	/^f0107c6a:	89 e5                	mov    %esp,%ebp$/;"	l
f0107c6c	obj/kern/kernel.asm	/^f0107c6c:	57                   	push   %edi$/;"	l
f0107c6d	obj/kern/kernel.asm	/^f0107c6d:	56                   	push   %esi$/;"	l
f0107c6e	obj/kern/kernel.asm	/^f0107c6e:	53                   	push   %ebx$/;"	l
f0107c6f	obj/kern/kernel.asm	/^f0107c6f:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0107c72	obj/kern/kernel.asm	/^f0107c72:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107c75	obj/kern/kernel.asm	/^f0107c75:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f0107c7a	obj/kern/kernel.asm	/^f0107c7a:	89 d8                	mov    %ebx,%eax$/;"	l
f0107c7c	obj/kern/kernel.asm	/^f0107c7c:	e8 d3 fd ff ff       	call   f0107a54 <pci_conf_read>$/;"	l
f0107c81	obj/kern/kernel.asm	/^f0107c81:	89 c7                	mov    %eax,%edi$/;"	l
f0107c83	obj/kern/kernel.asm	/^f0107c83:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f0107c88	obj/kern/kernel.asm	/^f0107c88:	89 d8                	mov    %ebx,%eax$/;"	l
f0107c8a	obj/kern/kernel.asm	/^f0107c8a:	e8 c5 fd ff ff       	call   f0107a54 <pci_conf_read>$/;"	l
f0107c8f	obj/kern/kernel.asm	/^f0107c8f:	83 e7 0f             	and    $0xf,%edi$/;"	l
f0107c92	obj/kern/kernel.asm	/^f0107c92:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0107c95	obj/kern/kernel.asm	/^f0107c95:	75 2a                	jne    f0107cc1 <pci_bridge_attach+0x58>$/;"	l
f0107c97	obj/kern/kernel.asm	/^f0107c97:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107c9a	obj/kern/kernel.asm	/^f0107c9a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107c9e	obj/kern/kernel.asm	/^f0107c9e:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107ca1	obj/kern/kernel.asm	/^f0107ca1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107ca5	obj/kern/kernel.asm	/^f0107ca5:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107ca7	obj/kern/kernel.asm	/^f0107ca7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107caa	obj/kern/kernel.asm	/^f0107caa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107cae	obj/kern/kernel.asm	/^f0107cae:	c7 04 24 90 a2 10 f0 	movl   $0xf010a290,(%esp)$/;"	l
f0107cb5	obj/kern/kernel.asm	/^f0107cb5:	e8 04 c7 ff ff       	call   f01043be <cprintf>$/;"	l
f0107cba	obj/kern/kernel.asm	/^f0107cba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107cbf	obj/kern/kernel.asm	/^f0107cbf:	eb 67                	jmp    f0107d28 <pci_bridge_attach+0xbf>$/;"	l
f0107cc1	obj/kern/kernel.asm	/^f0107cc1:	89 c6                	mov    %eax,%esi$/;"	l
f0107cc3	obj/kern/kernel.asm	/^f0107cc3:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107cca	obj/kern/kernel.asm	/^f0107cca:	00 $/;"	l
f0107ccb	obj/kern/kernel.asm	/^f0107ccb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107cd2	obj/kern/kernel.asm	/^f0107cd2:	00 $/;"	l
f0107cd3	obj/kern/kernel.asm	/^f0107cd3:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f0107cd6	obj/kern/kernel.asm	/^f0107cd6:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107cd9	obj/kern/kernel.asm	/^f0107cd9:	e8 09 ee ff ff       	call   f0106ae7 <memset>$/;"	l
f0107cde	obj/kern/kernel.asm	/^f0107cde:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0107ce1	obj/kern/kernel.asm	/^f0107ce1:	89 f0                	mov    %esi,%eax$/;"	l
f0107ce3	obj/kern/kernel.asm	/^f0107ce3:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f0107ce6	obj/kern/kernel.asm	/^f0107ce6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107ce9	obj/kern/kernel.asm	/^f0107ce9:	89 f2                	mov    %esi,%edx$/;"	l
f0107ceb	obj/kern/kernel.asm	/^f0107ceb:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107cee	obj/kern/kernel.asm	/^f0107cee:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0107cf1	obj/kern/kernel.asm	/^f0107cf1:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0107cf5	obj/kern/kernel.asm	/^f0107cf5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107cf9	obj/kern/kernel.asm	/^f0107cf9:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107cfc	obj/kern/kernel.asm	/^f0107cfc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107d00	obj/kern/kernel.asm	/^f0107d00:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107d03	obj/kern/kernel.asm	/^f0107d03:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107d07	obj/kern/kernel.asm	/^f0107d07:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107d09	obj/kern/kernel.asm	/^f0107d09:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107d0c	obj/kern/kernel.asm	/^f0107d0c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107d10	obj/kern/kernel.asm	/^f0107d10:	c7 04 24 c4 a2 10 f0 	movl   $0xf010a2c4,(%esp)$/;"	l
f0107d17	obj/kern/kernel.asm	/^f0107d17:	e8 a2 c6 ff ff       	call   f01043be <cprintf>$/;"	l
f0107d1c	obj/kern/kernel.asm	/^f0107d1c:	89 f8                	mov    %edi,%eax$/;"	l
f0107d1e	obj/kern/kernel.asm	/^f0107d1e:	e8 59 fd ff ff       	call   f0107a7c <pci_scan_bus>$/;"	l
f0107d23	obj/kern/kernel.asm	/^f0107d23:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107d28	obj/kern/kernel.asm	/^f0107d28:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0107d2b	obj/kern/kernel.asm	/^f0107d2b:	5b                   	pop    %ebx$/;"	l
f0107d2c	obj/kern/kernel.asm	/^f0107d2c:	5e                   	pop    %esi$/;"	l
f0107d2d	obj/kern/kernel.asm	/^f0107d2d:	5f                   	pop    %edi$/;"	l
f0107d2e	obj/kern/kernel.asm	/^f0107d2e:	5d                   	pop    %ebp$/;"	l
f0107d2f	obj/kern/kernel.asm	/^f0107d2f:	c3                   	ret    $/;"	l
f0107d30	obj/kern/kernel.asm	/^f0107d30 <pci_conf_write>:$/;"	l
f0107d30	obj/kern/kernel.asm	/^f0107d30:	55                   	push   %ebp$/;"	l
f0107d31	obj/kern/kernel.asm	/^f0107d31:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d33	obj/kern/kernel.asm	/^f0107d33:	56                   	push   %esi$/;"	l
f0107d34	obj/kern/kernel.asm	/^f0107d34:	53                   	push   %ebx$/;"	l
f0107d35	obj/kern/kernel.asm	/^f0107d35:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107d38	obj/kern/kernel.asm	/^f0107d38:	89 cb                	mov    %ecx,%ebx$/;"	l
f0107d3a	obj/kern/kernel.asm	/^f0107d3a:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107d3d	obj/kern/kernel.asm	/^f0107d3d:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0107d40	obj/kern/kernel.asm	/^f0107d40:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d42	obj/kern/kernel.asm	/^f0107d42:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107d45	obj/kern/kernel.asm	/^f0107d45:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107d48	obj/kern/kernel.asm	/^f0107d48:	89 f2                	mov    %esi,%edx$/;"	l
f0107d4a	obj/kern/kernel.asm	/^f0107d4a:	e8 00 fc ff ff       	call   f010794f <pci_conf1_set_addr>$/;"	l
f0107d4f	obj/kern/kernel.asm	/^f0107d4f:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107d54	obj/kern/kernel.asm	/^f0107d54:	89 d8                	mov    %ebx,%eax$/;"	l
f0107d56	obj/kern/kernel.asm	/^f0107d56:	ef                   	out    %eax,(%dx)$/;"	l
f0107d57	obj/kern/kernel.asm	/^f0107d57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107d5a	obj/kern/kernel.asm	/^f0107d5a:	5b                   	pop    %ebx$/;"	l
f0107d5b	obj/kern/kernel.asm	/^f0107d5b:	5e                   	pop    %esi$/;"	l
f0107d5c	obj/kern/kernel.asm	/^f0107d5c:	5d                   	pop    %ebp$/;"	l
f0107d5d	obj/kern/kernel.asm	/^f0107d5d:	c3                   	ret    $/;"	l
f0107d5e	obj/kern/kernel.asm	/^f0107d5e <pci_func_enable>:$/;"	l
f0107d5e	obj/kern/kernel.asm	/^f0107d5e:	55                   	push   %ebp$/;"	l
f0107d5f	obj/kern/kernel.asm	/^f0107d5f:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d61	obj/kern/kernel.asm	/^f0107d61:	57                   	push   %edi$/;"	l
f0107d62	obj/kern/kernel.asm	/^f0107d62:	56                   	push   %esi$/;"	l
f0107d63	obj/kern/kernel.asm	/^f0107d63:	53                   	push   %ebx$/;"	l
f0107d64	obj/kern/kernel.asm	/^f0107d64:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0107d67	obj/kern/kernel.asm	/^f0107d67:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0107d6a	obj/kern/kernel.asm	/^f0107d6a:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0107d6f	obj/kern/kernel.asm	/^f0107d6f:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0107d74	obj/kern/kernel.asm	/^f0107d74:	89 f8                	mov    %edi,%eax$/;"	l
f0107d76	obj/kern/kernel.asm	/^f0107d76:	e8 b5 ff ff ff       	call   f0107d30 <pci_conf_write>$/;"	l
f0107d7b	obj/kern/kernel.asm	/^f0107d7b:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0107d80	obj/kern/kernel.asm	/^f0107d80:	89 f2                	mov    %esi,%edx$/;"	l
f0107d82	obj/kern/kernel.asm	/^f0107d82:	89 f8                	mov    %edi,%eax$/;"	l
f0107d84	obj/kern/kernel.asm	/^f0107d84:	e8 cb fc ff ff       	call   f0107a54 <pci_conf_read>$/;"	l
f0107d89	obj/kern/kernel.asm	/^f0107d89:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107d8c	obj/kern/kernel.asm	/^f0107d8c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0107d91	obj/kern/kernel.asm	/^f0107d91:	89 f2                	mov    %esi,%edx$/;"	l
f0107d93	obj/kern/kernel.asm	/^f0107d93:	89 f8                	mov    %edi,%eax$/;"	l
f0107d95	obj/kern/kernel.asm	/^f0107d95:	e8 96 ff ff ff       	call   f0107d30 <pci_conf_write>$/;"	l
f0107d9a	obj/kern/kernel.asm	/^f0107d9a:	89 f2                	mov    %esi,%edx$/;"	l
f0107d9c	obj/kern/kernel.asm	/^f0107d9c:	89 f8                	mov    %edi,%eax$/;"	l
f0107d9e	obj/kern/kernel.asm	/^f0107d9e:	e8 b1 fc ff ff       	call   f0107a54 <pci_conf_read>$/;"	l
f0107da3	obj/kern/kernel.asm	/^f0107da3:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107da8	obj/kern/kernel.asm	/^f0107da8:	85 c0                	test   %eax,%eax$/;"	l
f0107daa	obj/kern/kernel.asm	/^f0107daa:	0f 84 c1 00 00 00    	je     f0107e71 <pci_func_enable+0x113>$/;"	l
f0107db0	obj/kern/kernel.asm	/^f0107db0:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107db3	obj/kern/kernel.asm	/^f0107db3:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107db6	obj/kern/kernel.asm	/^f0107db6:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0107db9	obj/kern/kernel.asm	/^f0107db9:	a8 01                	test   $0x1,%al$/;"	l
f0107dbb	obj/kern/kernel.asm	/^f0107dbb:	75 2c                	jne    f0107de9 <pci_func_enable+0x8b>$/;"	l
f0107dbd	obj/kern/kernel.asm	/^f0107dbd:	89 c2                	mov    %eax,%edx$/;"	l
f0107dbf	obj/kern/kernel.asm	/^f0107dbf:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107dc2	obj/kern/kernel.asm	/^f0107dc2:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107dc5	obj/kern/kernel.asm	/^f0107dc5:	0f 94 c3             	sete   %bl$/;"	l
f0107dc8	obj/kern/kernel.asm	/^f0107dc8:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0107dcb	obj/kern/kernel.asm	/^f0107dcb:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f0107dd2	obj/kern/kernel.asm	/^f0107dd2:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107dd5	obj/kern/kernel.asm	/^f0107dd5:	89 c2                	mov    %eax,%edx$/;"	l
f0107dd7	obj/kern/kernel.asm	/^f0107dd7:	f7 da                	neg    %edx$/;"	l
f0107dd9	obj/kern/kernel.asm	/^f0107dd9:	21 d0                	and    %edx,%eax$/;"	l
f0107ddb	obj/kern/kernel.asm	/^f0107ddb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107dde	obj/kern/kernel.asm	/^f0107dde:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107de1	obj/kern/kernel.asm	/^f0107de1:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107de4	obj/kern/kernel.asm	/^f0107de4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107de7	obj/kern/kernel.asm	/^f0107de7:	eb 1a                	jmp    f0107e03 <pci_func_enable+0xa5>$/;"	l
f0107de9	obj/kern/kernel.asm	/^f0107de9:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107dec	obj/kern/kernel.asm	/^f0107dec:	89 c2                	mov    %eax,%edx$/;"	l
f0107dee	obj/kern/kernel.asm	/^f0107dee:	f7 da                	neg    %edx$/;"	l
f0107df0	obj/kern/kernel.asm	/^f0107df0:	21 d0                	and    %edx,%eax$/;"	l
f0107df2	obj/kern/kernel.asm	/^f0107df2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107df5	obj/kern/kernel.asm	/^f0107df5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107df8	obj/kern/kernel.asm	/^f0107df8:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107dfb	obj/kern/kernel.asm	/^f0107dfb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107dfe	obj/kern/kernel.asm	/^f0107dfe:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107e03	obj/kern/kernel.asm	/^f0107e03:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0107e06	obj/kern/kernel.asm	/^f0107e06:	89 f2                	mov    %esi,%edx$/;"	l
f0107e08	obj/kern/kernel.asm	/^f0107e08:	89 f8                	mov    %edi,%eax$/;"	l
f0107e0a	obj/kern/kernel.asm	/^f0107e0a:	e8 21 ff ff ff       	call   f0107d30 <pci_conf_write>$/;"	l
f0107e0f	obj/kern/kernel.asm	/^f0107e0f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0107e12	obj/kern/kernel.asm	/^f0107e12:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0107e15	obj/kern/kernel.asm	/^f0107e15:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107e18	obj/kern/kernel.asm	/^f0107e18:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f0107e1b	obj/kern/kernel.asm	/^f0107e1b:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0107e1e	obj/kern/kernel.asm	/^f0107e1e:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
f0107e21	obj/kern/kernel.asm	/^f0107e21:	85 c9                	test   %ecx,%ecx$/;"	l
f0107e23	obj/kern/kernel.asm	/^f0107e23:	75 4c                	jne    f0107e71 <pci_func_enable+0x113>$/;"	l
f0107e25	obj/kern/kernel.asm	/^f0107e25:	85 d2                	test   %edx,%edx$/;"	l
f0107e27	obj/kern/kernel.asm	/^f0107e27:	74 48                	je     f0107e71 <pci_func_enable+0x113>$/;"	l
f0107e29	obj/kern/kernel.asm	/^f0107e29:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107e2c	obj/kern/kernel.asm	/^f0107e2c:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f0107e30	obj/kern/kernel.asm	/^f0107e30:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107e33	obj/kern/kernel.asm	/^f0107e33:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f0107e37	obj/kern/kernel.asm	/^f0107e37:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0107e3a	obj/kern/kernel.asm	/^f0107e3a:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f0107e3e	obj/kern/kernel.asm	/^f0107e3e:	89 c2                	mov    %eax,%edx$/;"	l
f0107e40	obj/kern/kernel.asm	/^f0107e40:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107e43	obj/kern/kernel.asm	/^f0107e43:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107e47	obj/kern/kernel.asm	/^f0107e47:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107e4a	obj/kern/kernel.asm	/^f0107e4a:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107e4e	obj/kern/kernel.asm	/^f0107e4e:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107e51	obj/kern/kernel.asm	/^f0107e51:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107e55	obj/kern/kernel.asm	/^f0107e55:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107e58	obj/kern/kernel.asm	/^f0107e58:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107e5c	obj/kern/kernel.asm	/^f0107e5c:	8b 07                	mov    (%edi),%eax$/;"	l
f0107e5e	obj/kern/kernel.asm	/^f0107e5e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107e61	obj/kern/kernel.asm	/^f0107e61:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107e65	obj/kern/kernel.asm	/^f0107e65:	c7 04 24 f4 a2 10 f0 	movl   $0xf010a2f4,(%esp)$/;"	l
f0107e6c	obj/kern/kernel.asm	/^f0107e6c:	e8 4d c5 ff ff       	call   f01043be <cprintf>$/;"	l
f0107e71	obj/kern/kernel.asm	/^f0107e71:	01 de                	add    %ebx,%esi$/;"	l
f0107e73	obj/kern/kernel.asm	/^f0107e73:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0107e76	obj/kern/kernel.asm	/^f0107e76:	0f 86 04 ff ff ff    	jbe    f0107d80 <pci_func_enable+0x22>$/;"	l
f0107e7c	obj/kern/kernel.asm	/^f0107e7c:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107e7f	obj/kern/kernel.asm	/^f0107e7f:	89 c2                	mov    %eax,%edx$/;"	l
f0107e81	obj/kern/kernel.asm	/^f0107e81:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107e84	obj/kern/kernel.asm	/^f0107e84:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107e88	obj/kern/kernel.asm	/^f0107e88:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107e8b	obj/kern/kernel.asm	/^f0107e8b:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107e8f	obj/kern/kernel.asm	/^f0107e8f:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107e92	obj/kern/kernel.asm	/^f0107e92:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107e96	obj/kern/kernel.asm	/^f0107e96:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107e99	obj/kern/kernel.asm	/^f0107e99:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107e9d	obj/kern/kernel.asm	/^f0107e9d:	8b 07                	mov    (%edi),%eax$/;"	l
f0107e9f	obj/kern/kernel.asm	/^f0107e9f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107ea2	obj/kern/kernel.asm	/^f0107ea2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ea6	obj/kern/kernel.asm	/^f0107ea6:	c7 04 24 50 a3 10 f0 	movl   $0xf010a350,(%esp)$/;"	l
f0107ead	obj/kern/kernel.asm	/^f0107ead:	e8 0c c5 ff ff       	call   f01043be <cprintf>$/;"	l
f0107eb2	obj/kern/kernel.asm	/^f0107eb2:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0107eb5	obj/kern/kernel.asm	/^f0107eb5:	5b                   	pop    %ebx$/;"	l
f0107eb6	obj/kern/kernel.asm	/^f0107eb6:	5e                   	pop    %esi$/;"	l
f0107eb7	obj/kern/kernel.asm	/^f0107eb7:	5f                   	pop    %edi$/;"	l
f0107eb8	obj/kern/kernel.asm	/^f0107eb8:	5d                   	pop    %ebp$/;"	l
f0107eb9	obj/kern/kernel.asm	/^f0107eb9:	c3                   	ret    $/;"	l
f0107eba	obj/kern/kernel.asm	/^f0107eba <pci_e1000_attach>:$/;"	l
f0107eba	obj/kern/kernel.asm	/^f0107eba:	55                   	push   %ebp$/;"	l
f0107ebb	obj/kern/kernel.asm	/^f0107ebb:	89 e5                	mov    %esp,%ebp$/;"	l
f0107ebd	obj/kern/kernel.asm	/^f0107ebd:	53                   	push   %ebx$/;"	l
f0107ebe	obj/kern/kernel.asm	/^f0107ebe:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107ec1	obj/kern/kernel.asm	/^f0107ec1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107ec4	obj/kern/kernel.asm	/^f0107ec4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0107ec7	obj/kern/kernel.asm	/^f0107ec7:	e8 92 fe ff ff       	call   f0107d5e <pci_func_enable>$/;"	l
f0107ecc	obj/kern/kernel.asm	/^f0107ecc:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0107ecf	obj/kern/kernel.asm	/^f0107ecf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ed3	obj/kern/kernel.asm	/^f0107ed3:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0107ed6	obj/kern/kernel.asm	/^f0107ed6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107ed9	obj/kern/kernel.asm	/^f0107ed9:	e8 ae 99 ff ff       	call   f010188c <mmio_map_region>$/;"	l
f0107ede	obj/kern/kernel.asm	/^f0107ede:	a3 80 06 30 f0       	mov    %eax,0xf0300680$/;"	l
f0107ee3	obj/kern/kernel.asm	/^f0107ee3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ee7	obj/kern/kernel.asm	/^f0107ee7:	c7 04 24 f8 a3 10 f0 	movl   $0xf010a3f8,(%esp)$/;"	l
f0107eee	obj/kern/kernel.asm	/^f0107eee:	e8 cb c4 ff ff       	call   f01043be <cprintf>$/;"	l
f0107ef3	obj/kern/kernel.asm	/^f0107ef3:	a1 80 06 30 f0       	mov    0xf0300680,%eax$/;"	l
f0107ef8	obj/kern/kernel.asm	/^f0107ef8:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
f0107efb	obj/kern/kernel.asm	/^f0107efb:	81 fa 83 07 08 80    	cmp    $0x80080783,%edx$/;"	l
f0107f01	obj/kern/kernel.asm	/^f0107f01:	74 24                	je     f0107f27 <pci_e1000_attach+0x6d>$/;"	l
f0107f03	obj/kern/kernel.asm	/^f0107f03:	c7 44 24 0c 80 a3 10 	movl   $0xf010a380,0xc(%esp)$/;"	l
f0107f0a	obj/kern/kernel.asm	/^f0107f0a:	f0 $/;"	l
f0107f0b	obj/kern/kernel.asm	/^f0107f0b:	c7 44 24 08 5f 93 10 	movl   $0xf010935f,0x8(%esp)$/;"	l
f0107f12	obj/kern/kernel.asm	/^f0107f12:	f0 $/;"	l
f0107f13	obj/kern/kernel.asm	/^f0107f13:	c7 44 24 04 c9 00 00 	movl   $0xc9,0x4(%esp)$/;"	l
f0107f1a	obj/kern/kernel.asm	/^f0107f1a:	00 $/;"	l
f0107f1b	obj/kern/kernel.asm	/^f0107f1b:	c7 04 24 b2 a3 10 f0 	movl   $0xf010a3b2,(%esp)$/;"	l
f0107f22	obj/kern/kernel.asm	/^f0107f22:	e8 19 81 ff ff       	call   f0100040 <_panic>$/;"	l
f0107f27	obj/kern/kernel.asm	/^f0107f27:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0107f2a	obj/kern/kernel.asm	/^f0107f2a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107f2e	obj/kern/kernel.asm	/^f0107f2e:	c7 04 24 12 a4 10 f0 	movl   $0xf010a412,(%esp)$/;"	l
f0107f35	obj/kern/kernel.asm	/^f0107f35:	e8 84 c4 ff ff       	call   f01043be <cprintf>$/;"	l
f0107f3a	obj/kern/kernel.asm	/^f0107f3a:	e8 3d f6 ff ff       	call   f010757c <e1000_tx_init>$/;"	l
f0107f3f	obj/kern/kernel.asm	/^f0107f3f:	e8 65 f7 ff ff       	call   f01076a9 <e1000_rx_init>$/;"	l
f0107f44	obj/kern/kernel.asm	/^f0107f44:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107f49	obj/kern/kernel.asm	/^f0107f49:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107f4c	obj/kern/kernel.asm	/^f0107f4c:	5b                   	pop    %ebx$/;"	l
f0107f4d	obj/kern/kernel.asm	/^f0107f4d:	5d                   	pop    %ebp$/;"	l
f0107f4e	obj/kern/kernel.asm	/^f0107f4e:	c3                   	ret    $/;"	l
f0107f4f	obj/kern/kernel.asm	/^f0107f4f <pci_init>:$/;"	l
f0107f4f	obj/kern/kernel.asm	/^f0107f4f:	55                   	push   %ebp$/;"	l
f0107f50	obj/kern/kernel.asm	/^f0107f50:	89 e5                	mov    %esp,%ebp$/;"	l
f0107f52	obj/kern/kernel.asm	/^f0107f52:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107f55	obj/kern/kernel.asm	/^f0107f55:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107f5c	obj/kern/kernel.asm	/^f0107f5c:	00 $/;"	l
f0107f5d	obj/kern/kernel.asm	/^f0107f5d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107f64	obj/kern/kernel.asm	/^f0107f64:	00 $/;"	l
f0107f65	obj/kern/kernel.asm	/^f0107f65:	c7 04 24 60 06 30 f0 	movl   $0xf0300660,(%esp)$/;"	l
f0107f6c	obj/kern/kernel.asm	/^f0107f6c:	e8 76 eb ff ff       	call   f0106ae7 <memset>$/;"	l
f0107f71	obj/kern/kernel.asm	/^f0107f71:	b8 60 06 30 f0       	mov    $0xf0300660,%eax$/;"	l
f0107f76	obj/kern/kernel.asm	/^f0107f76:	e8 01 fb ff ff       	call   f0107a7c <pci_scan_bus>$/;"	l
f0107f7b	obj/kern/kernel.asm	/^f0107f7b:	c9                   	leave  $/;"	l
f0107f7c	obj/kern/kernel.asm	/^f0107f7c:	c3                   	ret    $/;"	l
f0107f7d	obj/kern/kernel.asm	/^f0107f7d:	66 90                	xchg   %ax,%ax$/;"	l
f0107f7f	obj/kern/kernel.asm	/^f0107f7f:	90                   	nop$/;"	l
f0107f80	obj/kern/kernel.asm	/^f0107f80 <time_init>:$/;"	l
f0107f80	obj/kern/kernel.asm	/^f0107f80:	55                   	push   %ebp$/;"	l
f0107f81	obj/kern/kernel.asm	/^f0107f81:	89 e5                	mov    %esp,%ebp$/;"	l
f0107f83	obj/kern/kernel.asm	/^f0107f83:	c7 05 68 06 30 f0 00 	movl   $0x0,0xf0300668$/;"	l
f0107f8a	obj/kern/kernel.asm	/^f0107f8a:	00 00 00 $/;"	l
f0107f8d	obj/kern/kernel.asm	/^f0107f8d:	5d                   	pop    %ebp$/;"	l
f0107f8e	obj/kern/kernel.asm	/^f0107f8e:	c3                   	ret    $/;"	l
f0107f8f	obj/kern/kernel.asm	/^f0107f8f <time_tick>:$/;"	l
f0107f8f	obj/kern/kernel.asm	/^f0107f8f:	a1 68 06 30 f0       	mov    0xf0300668,%eax$/;"	l
f0107f94	obj/kern/kernel.asm	/^f0107f94:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107f97	obj/kern/kernel.asm	/^f0107f97:	a3 68 06 30 f0       	mov    %eax,0xf0300668$/;"	l
f0107f9c	obj/kern/kernel.asm	/^f0107f9c:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0107f9f	obj/kern/kernel.asm	/^f0107f9f:	01 d2                	add    %edx,%edx$/;"	l
f0107fa1	obj/kern/kernel.asm	/^f0107fa1:	39 d0                	cmp    %edx,%eax$/;"	l
f0107fa3	obj/kern/kernel.asm	/^f0107fa3:	76 22                	jbe    f0107fc7 <time_tick+0x38>$/;"	l
f0107fa5	obj/kern/kernel.asm	/^f0107fa5:	55                   	push   %ebp$/;"	l
f0107fa6	obj/kern/kernel.asm	/^f0107fa6:	89 e5                	mov    %esp,%ebp$/;"	l
f0107fa8	obj/kern/kernel.asm	/^f0107fa8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107fab	obj/kern/kernel.asm	/^f0107fab:	c7 44 24 08 b0 a4 10 	movl   $0xf010a4b0,0x8(%esp)$/;"	l
f0107fb2	obj/kern/kernel.asm	/^f0107fb2:	f0 $/;"	l
f0107fb3	obj/kern/kernel.asm	/^f0107fb3:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f0107fba	obj/kern/kernel.asm	/^f0107fba:	00 $/;"	l
f0107fbb	obj/kern/kernel.asm	/^f0107fbb:	c7 04 24 cb a4 10 f0 	movl   $0xf010a4cb,(%esp)$/;"	l
f0107fc2	obj/kern/kernel.asm	/^f0107fc2:	e8 79 80 ff ff       	call   f0100040 <_panic>$/;"	l
f0107fc7	obj/kern/kernel.asm	/^f0107fc7:	f3 c3                	repz ret $/;"	l
f0107fc9	obj/kern/kernel.asm	/^f0107fc9 <time_msec>:$/;"	l
f0107fc9	obj/kern/kernel.asm	/^f0107fc9:	55                   	push   %ebp$/;"	l
f0107fca	obj/kern/kernel.asm	/^f0107fca:	89 e5                	mov    %esp,%ebp$/;"	l
f0107fcc	obj/kern/kernel.asm	/^f0107fcc:	a1 68 06 30 f0       	mov    0xf0300668,%eax$/;"	l
f0107fd1	obj/kern/kernel.asm	/^f0107fd1:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0107fd4	obj/kern/kernel.asm	/^f0107fd4:	01 c0                	add    %eax,%eax$/;"	l
f0107fd6	obj/kern/kernel.asm	/^f0107fd6:	5d                   	pop    %ebp$/;"	l
f0107fd7	obj/kern/kernel.asm	/^f0107fd7:	c3                   	ret    $/;"	l
f0107fd8	obj/kern/kernel.asm	/^f0107fd8:	66 90                	xchg   %ax,%ax$/;"	l
f0107fda	obj/kern/kernel.asm	/^f0107fda:	66 90                	xchg   %ax,%ax$/;"	l
f0107fdc	obj/kern/kernel.asm	/^f0107fdc:	66 90                	xchg   %ax,%ax$/;"	l
f0107fde	obj/kern/kernel.asm	/^f0107fde:	66 90                	xchg   %ax,%ax$/;"	l
f0107fe0	obj/kern/kernel.asm	/^f0107fe0 <__udivdi3>:$/;"	l
f0107fe0	obj/kern/kernel.asm	/^f0107fe0:	55                   	push   %ebp$/;"	l
f0107fe1	obj/kern/kernel.asm	/^f0107fe1:	57                   	push   %edi$/;"	l
f0107fe2	obj/kern/kernel.asm	/^f0107fe2:	56                   	push   %esi$/;"	l
f0107fe3	obj/kern/kernel.asm	/^f0107fe3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107fe6	obj/kern/kernel.asm	/^f0107fe6:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0107fea	obj/kern/kernel.asm	/^f0107fea:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f0107fee	obj/kern/kernel.asm	/^f0107fee:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f0107ff2	obj/kern/kernel.asm	/^f0107ff2:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107ff6	obj/kern/kernel.asm	/^f0107ff6:	85 c0                	test   %eax,%eax$/;"	l
f0107ff8	obj/kern/kernel.asm	/^f0107ff8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0107ffc	obj/kern/kernel.asm	/^f0107ffc:	89 ea                	mov    %ebp,%edx$/;"	l
f0107ffe	obj/kern/kernel.asm	/^f0107ffe:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0108001	obj/kern/kernel.asm	/^f0108001:	75 2d                	jne    f0108030 <__udivdi3+0x50>$/;"	l
f0108003	obj/kern/kernel.asm	/^f0108003:	39 e9                	cmp    %ebp,%ecx$/;"	l
f0108005	obj/kern/kernel.asm	/^f0108005:	77 61                	ja     f0108068 <__udivdi3+0x88>$/;"	l
f0108007	obj/kern/kernel.asm	/^f0108007:	85 c9                	test   %ecx,%ecx$/;"	l
f0108009	obj/kern/kernel.asm	/^f0108009:	89 ce                	mov    %ecx,%esi$/;"	l
f010800b	obj/kern/kernel.asm	/^f010800b:	75 0b                	jne    f0108018 <__udivdi3+0x38>$/;"	l
f010800d	obj/kern/kernel.asm	/^f010800d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0108012	obj/kern/kernel.asm	/^f0108012:	31 d2                	xor    %edx,%edx$/;"	l
f0108014	obj/kern/kernel.asm	/^f0108014:	f7 f1                	div    %ecx$/;"	l
f0108016	obj/kern/kernel.asm	/^f0108016:	89 c6                	mov    %eax,%esi$/;"	l
f0108018	obj/kern/kernel.asm	/^f0108018:	31 d2                	xor    %edx,%edx$/;"	l
f010801a	obj/kern/kernel.asm	/^f010801a:	89 e8                	mov    %ebp,%eax$/;"	l
f010801c	obj/kern/kernel.asm	/^f010801c:	f7 f6                	div    %esi$/;"	l
f010801e	obj/kern/kernel.asm	/^f010801e:	89 c5                	mov    %eax,%ebp$/;"	l
f0108020	obj/kern/kernel.asm	/^f0108020:	89 f8                	mov    %edi,%eax$/;"	l
f0108022	obj/kern/kernel.asm	/^f0108022:	f7 f6                	div    %esi$/;"	l
f0108024	obj/kern/kernel.asm	/^f0108024:	89 ea                	mov    %ebp,%edx$/;"	l
f0108026	obj/kern/kernel.asm	/^f0108026:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0108029	obj/kern/kernel.asm	/^f0108029:	5e                   	pop    %esi$/;"	l
f010802a	obj/kern/kernel.asm	/^f010802a:	5f                   	pop    %edi$/;"	l
f010802b	obj/kern/kernel.asm	/^f010802b:	5d                   	pop    %ebp$/;"	l
f010802c	obj/kern/kernel.asm	/^f010802c:	c3                   	ret    $/;"	l
f010802d	obj/kern/kernel.asm	/^f010802d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0108030	obj/kern/kernel.asm	/^f0108030:	39 e8                	cmp    %ebp,%eax$/;"	l
f0108032	obj/kern/kernel.asm	/^f0108032:	77 24                	ja     f0108058 <__udivdi3+0x78>$/;"	l
f0108034	obj/kern/kernel.asm	/^f0108034:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0108037	obj/kern/kernel.asm	/^f0108037:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f010803a	obj/kern/kernel.asm	/^f010803a:	75 3c                	jne    f0108078 <__udivdi3+0x98>$/;"	l
f010803c	obj/kern/kernel.asm	/^f010803c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0108040	obj/kern/kernel.asm	/^f0108040:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0108043	obj/kern/kernel.asm	/^f0108043:	0f 86 9f 00 00 00    	jbe    f01080e8 <__udivdi3+0x108>$/;"	l
f0108049	obj/kern/kernel.asm	/^f0108049:	39 d0                	cmp    %edx,%eax$/;"	l
f010804b	obj/kern/kernel.asm	/^f010804b:	0f 82 97 00 00 00    	jb     f01080e8 <__udivdi3+0x108>$/;"	l
f0108051	obj/kern/kernel.asm	/^f0108051:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108058	obj/kern/kernel.asm	/^f0108058:	31 d2                	xor    %edx,%edx$/;"	l
f010805a	obj/kern/kernel.asm	/^f010805a:	31 c0                	xor    %eax,%eax$/;"	l
f010805c	obj/kern/kernel.asm	/^f010805c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010805f	obj/kern/kernel.asm	/^f010805f:	5e                   	pop    %esi$/;"	l
f0108060	obj/kern/kernel.asm	/^f0108060:	5f                   	pop    %edi$/;"	l
f0108061	obj/kern/kernel.asm	/^f0108061:	5d                   	pop    %ebp$/;"	l
f0108062	obj/kern/kernel.asm	/^f0108062:	c3                   	ret    $/;"	l
f0108063	obj/kern/kernel.asm	/^f0108063:	90                   	nop$/;"	l
f0108064	obj/kern/kernel.asm	/^f0108064:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108068	obj/kern/kernel.asm	/^f0108068:	89 f8                	mov    %edi,%eax$/;"	l
f010806a	obj/kern/kernel.asm	/^f010806a:	f7 f1                	div    %ecx$/;"	l
f010806c	obj/kern/kernel.asm	/^f010806c:	31 d2                	xor    %edx,%edx$/;"	l
f010806e	obj/kern/kernel.asm	/^f010806e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0108071	obj/kern/kernel.asm	/^f0108071:	5e                   	pop    %esi$/;"	l
f0108072	obj/kern/kernel.asm	/^f0108072:	5f                   	pop    %edi$/;"	l
f0108073	obj/kern/kernel.asm	/^f0108073:	5d                   	pop    %ebp$/;"	l
f0108074	obj/kern/kernel.asm	/^f0108074:	c3                   	ret    $/;"	l
f0108075	obj/kern/kernel.asm	/^f0108075:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0108078	obj/kern/kernel.asm	/^f0108078:	89 e9                	mov    %ebp,%ecx$/;"	l
f010807a	obj/kern/kernel.asm	/^f010807a:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f010807d	obj/kern/kernel.asm	/^f010807d:	d3 e0                	shl    %cl,%eax$/;"	d
f010807f	obj/kern/kernel.asm	/^f010807f:	89 c6                	mov    %eax,%esi$/;"	l
f0108081	obj/kern/kernel.asm	/^f0108081:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0108086	obj/kern/kernel.asm	/^f0108086:	29 e8                	sub    %ebp,%eax$/;"	l
f0108088	obj/kern/kernel.asm	/^f0108088:	89 c1                	mov    %eax,%ecx$/;"	l
f010808a	obj/kern/kernel.asm	/^f010808a:	d3 ef                	shr    %cl,%edi$/;"	d
f010808c	obj/kern/kernel.asm	/^f010808c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010808e	obj/kern/kernel.asm	/^f010808e:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0108092	obj/kern/kernel.asm	/^f0108092:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0108095	obj/kern/kernel.asm	/^f0108095:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f0108099	obj/kern/kernel.asm	/^f0108099:	89 d6                	mov    %edx,%esi$/;"	l
f010809b	obj/kern/kernel.asm	/^f010809b:	d3 e7                	shl    %cl,%edi$/;"	d
f010809d	obj/kern/kernel.asm	/^f010809d:	89 c1                	mov    %eax,%ecx$/;"	l
f010809f	obj/kern/kernel.asm	/^f010809f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01080a2	obj/kern/kernel.asm	/^f01080a2:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01080a6	obj/kern/kernel.asm	/^f01080a6:	d3 ee                	shr    %cl,%esi$/;"	d
f01080a8	obj/kern/kernel.asm	/^f01080a8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01080aa	obj/kern/kernel.asm	/^f01080aa:	d3 e2                	shl    %cl,%edx$/;"	d
f01080ac	obj/kern/kernel.asm	/^f01080ac:	89 c1                	mov    %eax,%ecx$/;"	l
f01080ae	obj/kern/kernel.asm	/^f01080ae:	d3 ef                	shr    %cl,%edi$/;"	d
f01080b0	obj/kern/kernel.asm	/^f01080b0:	09 d7                	or     %edx,%edi$/;"	l
f01080b2	obj/kern/kernel.asm	/^f01080b2:	89 f2                	mov    %esi,%edx$/;"	l
f01080b4	obj/kern/kernel.asm	/^f01080b4:	89 f8                	mov    %edi,%eax$/;"	l
f01080b6	obj/kern/kernel.asm	/^f01080b6:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f01080ba	obj/kern/kernel.asm	/^f01080ba:	89 d6                	mov    %edx,%esi$/;"	l
f01080bc	obj/kern/kernel.asm	/^f01080bc:	89 c7                	mov    %eax,%edi$/;"	l
f01080be	obj/kern/kernel.asm	/^f01080be:	f7 24 24             	mull   (%esp)$/;"	l
f01080c1	obj/kern/kernel.asm	/^f01080c1:	39 d6                	cmp    %edx,%esi$/;"	l
f01080c3	obj/kern/kernel.asm	/^f01080c3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01080c6	obj/kern/kernel.asm	/^f01080c6:	72 30                	jb     f01080f8 <__udivdi3+0x118>$/;"	l
f01080c8	obj/kern/kernel.asm	/^f01080c8:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f01080cc	obj/kern/kernel.asm	/^f01080cc:	89 e9                	mov    %ebp,%ecx$/;"	l
f01080ce	obj/kern/kernel.asm	/^f01080ce:	d3 e2                	shl    %cl,%edx$/;"	d
f01080d0	obj/kern/kernel.asm	/^f01080d0:	39 c2                	cmp    %eax,%edx$/;"	l
f01080d2	obj/kern/kernel.asm	/^f01080d2:	73 05                	jae    f01080d9 <__udivdi3+0xf9>$/;"	l
f01080d4	obj/kern/kernel.asm	/^f01080d4:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f01080d7	obj/kern/kernel.asm	/^f01080d7:	74 1f                	je     f01080f8 <__udivdi3+0x118>$/;"	l
f01080d9	obj/kern/kernel.asm	/^f01080d9:	89 f8                	mov    %edi,%eax$/;"	l
f01080db	obj/kern/kernel.asm	/^f01080db:	31 d2                	xor    %edx,%edx$/;"	l
f01080dd	obj/kern/kernel.asm	/^f01080dd:	e9 7a ff ff ff       	jmp    f010805c <__udivdi3+0x7c>$/;"	l
f01080e2	obj/kern/kernel.asm	/^f01080e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01080e8	obj/kern/kernel.asm	/^f01080e8:	31 d2                	xor    %edx,%edx$/;"	l
f01080ea	obj/kern/kernel.asm	/^f01080ea:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01080ef	obj/kern/kernel.asm	/^f01080ef:	e9 68 ff ff ff       	jmp    f010805c <__udivdi3+0x7c>$/;"	l
f01080f4	obj/kern/kernel.asm	/^f01080f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01080f8	obj/kern/kernel.asm	/^f01080f8:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f01080fb	obj/kern/kernel.asm	/^f01080fb:	31 d2                	xor    %edx,%edx$/;"	l
f01080fd	obj/kern/kernel.asm	/^f01080fd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0108100	obj/kern/kernel.asm	/^f0108100:	5e                   	pop    %esi$/;"	l
f0108101	obj/kern/kernel.asm	/^f0108101:	5f                   	pop    %edi$/;"	l
f0108102	obj/kern/kernel.asm	/^f0108102:	5d                   	pop    %ebp$/;"	l
f0108103	obj/kern/kernel.asm	/^f0108103:	c3                   	ret    $/;"	l
f0108104	obj/kern/kernel.asm	/^f0108104:	66 90                	xchg   %ax,%ax$/;"	l
f0108106	obj/kern/kernel.asm	/^f0108106:	66 90                	xchg   %ax,%ax$/;"	l
f0108108	obj/kern/kernel.asm	/^f0108108:	66 90                	xchg   %ax,%ax$/;"	l
f010810a	obj/kern/kernel.asm	/^f010810a:	66 90                	xchg   %ax,%ax$/;"	l
f010810c	obj/kern/kernel.asm	/^f010810c:	66 90                	xchg   %ax,%ax$/;"	l
f010810e	obj/kern/kernel.asm	/^f010810e:	66 90                	xchg   %ax,%ax$/;"	l
f0108110	obj/kern/kernel.asm	/^f0108110 <__umoddi3>:$/;"	l
f0108110	obj/kern/kernel.asm	/^f0108110:	55                   	push   %ebp$/;"	l
f0108111	obj/kern/kernel.asm	/^f0108111:	57                   	push   %edi$/;"	l
f0108112	obj/kern/kernel.asm	/^f0108112:	56                   	push   %esi$/;"	l
f0108113	obj/kern/kernel.asm	/^f0108113:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0108116	obj/kern/kernel.asm	/^f0108116:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010811a	obj/kern/kernel.asm	/^f010811a:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f010811e	obj/kern/kernel.asm	/^f010811e:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f0108122	obj/kern/kernel.asm	/^f0108122:	89 c7                	mov    %eax,%edi$/;"	l
f0108124	obj/kern/kernel.asm	/^f0108124:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0108128	obj/kern/kernel.asm	/^f0108128:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f010812c	obj/kern/kernel.asm	/^f010812c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0108130	obj/kern/kernel.asm	/^f0108130:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0108133	obj/kern/kernel.asm	/^f0108133:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0108137	obj/kern/kernel.asm	/^f0108137:	85 c0                	test   %eax,%eax$/;"	l
f0108139	obj/kern/kernel.asm	/^f0108139:	89 c2                	mov    %eax,%edx$/;"	l
f010813b	obj/kern/kernel.asm	/^f010813b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010813f	obj/kern/kernel.asm	/^f010813f:	75 17                	jne    f0108158 <__umoddi3+0x48>$/;"	l
f0108141	obj/kern/kernel.asm	/^f0108141:	39 fe                	cmp    %edi,%esi$/;"	l
f0108143	obj/kern/kernel.asm	/^f0108143:	76 4b                	jbe    f0108190 <__umoddi3+0x80>$/;"	l
f0108145	obj/kern/kernel.asm	/^f0108145:	89 c8                	mov    %ecx,%eax$/;"	l
f0108147	obj/kern/kernel.asm	/^f0108147:	89 fa                	mov    %edi,%edx$/;"	l
f0108149	obj/kern/kernel.asm	/^f0108149:	f7 f6                	div    %esi$/;"	l
f010814b	obj/kern/kernel.asm	/^f010814b:	89 d0                	mov    %edx,%eax$/;"	l
f010814d	obj/kern/kernel.asm	/^f010814d:	31 d2                	xor    %edx,%edx$/;"	l
f010814f	obj/kern/kernel.asm	/^f010814f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0108152	obj/kern/kernel.asm	/^f0108152:	5e                   	pop    %esi$/;"	l
f0108153	obj/kern/kernel.asm	/^f0108153:	5f                   	pop    %edi$/;"	l
f0108154	obj/kern/kernel.asm	/^f0108154:	5d                   	pop    %ebp$/;"	l
f0108155	obj/kern/kernel.asm	/^f0108155:	c3                   	ret    $/;"	l
f0108156	obj/kern/kernel.asm	/^f0108156:	66 90                	xchg   %ax,%ax$/;"	l
f0108158	obj/kern/kernel.asm	/^f0108158:	39 f8                	cmp    %edi,%eax$/;"	l
f010815a	obj/kern/kernel.asm	/^f010815a:	77 54                	ja     f01081b0 <__umoddi3+0xa0>$/;"	l
f010815c	obj/kern/kernel.asm	/^f010815c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f010815f	obj/kern/kernel.asm	/^f010815f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0108162	obj/kern/kernel.asm	/^f0108162:	75 5c                	jne    f01081c0 <__umoddi3+0xb0>$/;"	l
f0108164	obj/kern/kernel.asm	/^f0108164:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0108168	obj/kern/kernel.asm	/^f0108168:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f010816b	obj/kern/kernel.asm	/^f010816b:	0f 87 e7 00 00 00    	ja     f0108258 <__umoddi3+0x148>$/;"	l
f0108171	obj/kern/kernel.asm	/^f0108171:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0108175	obj/kern/kernel.asm	/^f0108175:	29 f1                	sub    %esi,%ecx$/;"	l
f0108177	obj/kern/kernel.asm	/^f0108177:	19 c7                	sbb    %eax,%edi$/;"	l
f0108179	obj/kern/kernel.asm	/^f0108179:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010817d	obj/kern/kernel.asm	/^f010817d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0108181	obj/kern/kernel.asm	/^f0108181:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0108185	obj/kern/kernel.asm	/^f0108185:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0108189	obj/kern/kernel.asm	/^f0108189:	83 c4 14             	add    $0x14,%esp$/;"	l
f010818c	obj/kern/kernel.asm	/^f010818c:	5e                   	pop    %esi$/;"	l
f010818d	obj/kern/kernel.asm	/^f010818d:	5f                   	pop    %edi$/;"	l
f010818e	obj/kern/kernel.asm	/^f010818e:	5d                   	pop    %ebp$/;"	l
f010818f	obj/kern/kernel.asm	/^f010818f:	c3                   	ret    $/;"	l
f0108190	obj/kern/kernel.asm	/^f0108190:	85 f6                	test   %esi,%esi$/;"	l
f0108192	obj/kern/kernel.asm	/^f0108192:	89 f5                	mov    %esi,%ebp$/;"	l
f0108194	obj/kern/kernel.asm	/^f0108194:	75 0b                	jne    f01081a1 <__umoddi3+0x91>$/;"	l
f0108196	obj/kern/kernel.asm	/^f0108196:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010819b	obj/kern/kernel.asm	/^f010819b:	31 d2                	xor    %edx,%edx$/;"	l
f010819d	obj/kern/kernel.asm	/^f010819d:	f7 f6                	div    %esi$/;"	l
f010819f	obj/kern/kernel.asm	/^f010819f:	89 c5                	mov    %eax,%ebp$/;"	l
f01081a1	obj/kern/kernel.asm	/^f01081a1:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f01081a5	obj/kern/kernel.asm	/^f01081a5:	31 d2                	xor    %edx,%edx$/;"	l
f01081a7	obj/kern/kernel.asm	/^f01081a7:	f7 f5                	div    %ebp$/;"	l
f01081a9	obj/kern/kernel.asm	/^f01081a9:	89 c8                	mov    %ecx,%eax$/;"	l
f01081ab	obj/kern/kernel.asm	/^f01081ab:	f7 f5                	div    %ebp$/;"	l
f01081ad	obj/kern/kernel.asm	/^f01081ad:	eb 9c                	jmp    f010814b <__umoddi3+0x3b>$/;"	l
f01081af	obj/kern/kernel.asm	/^f01081af:	90                   	nop$/;"	l
f01081b0	obj/kern/kernel.asm	/^f01081b0:	89 c8                	mov    %ecx,%eax$/;"	l
f01081b2	obj/kern/kernel.asm	/^f01081b2:	89 fa                	mov    %edi,%edx$/;"	l
f01081b4	obj/kern/kernel.asm	/^f01081b4:	83 c4 14             	add    $0x14,%esp$/;"	l
f01081b7	obj/kern/kernel.asm	/^f01081b7:	5e                   	pop    %esi$/;"	l
f01081b8	obj/kern/kernel.asm	/^f01081b8:	5f                   	pop    %edi$/;"	l
f01081b9	obj/kern/kernel.asm	/^f01081b9:	5d                   	pop    %ebp$/;"	l
f01081ba	obj/kern/kernel.asm	/^f01081ba:	c3                   	ret    $/;"	l
f01081bb	obj/kern/kernel.asm	/^f01081bb:	90                   	nop$/;"	l
f01081bc	obj/kern/kernel.asm	/^f01081bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01081c0	obj/kern/kernel.asm	/^f01081c0:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01081c3	obj/kern/kernel.asm	/^f01081c3:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f01081c8	obj/kern/kernel.asm	/^f01081c8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01081ca	obj/kern/kernel.asm	/^f01081ca:	29 ee                	sub    %ebp,%esi$/;"	l
f01081cc	obj/kern/kernel.asm	/^f01081cc:	d3 e2                	shl    %cl,%edx$/;"	d
f01081ce	obj/kern/kernel.asm	/^f01081ce:	89 f1                	mov    %esi,%ecx$/;"	l
f01081d0	obj/kern/kernel.asm	/^f01081d0:	d3 e8                	shr    %cl,%eax$/;"	d
f01081d2	obj/kern/kernel.asm	/^f01081d2:	89 e9                	mov    %ebp,%ecx$/;"	l
f01081d4	obj/kern/kernel.asm	/^f01081d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01081d8	obj/kern/kernel.asm	/^f01081d8:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01081db	obj/kern/kernel.asm	/^f01081db:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f01081df	obj/kern/kernel.asm	/^f01081df:	89 fa                	mov    %edi,%edx$/;"	l
f01081e1	obj/kern/kernel.asm	/^f01081e1:	d3 e0                	shl    %cl,%eax$/;"	d
f01081e3	obj/kern/kernel.asm	/^f01081e3:	89 f1                	mov    %esi,%ecx$/;"	l
f01081e5	obj/kern/kernel.asm	/^f01081e5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01081e9	obj/kern/kernel.asm	/^f01081e9:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f01081ed	obj/kern/kernel.asm	/^f01081ed:	d3 ea                	shr    %cl,%edx$/;"	d
f01081ef	obj/kern/kernel.asm	/^f01081ef:	89 e9                	mov    %ebp,%ecx$/;"	l
f01081f1	obj/kern/kernel.asm	/^f01081f1:	d3 e7                	shl    %cl,%edi$/;"	d
f01081f3	obj/kern/kernel.asm	/^f01081f3:	89 f1                	mov    %esi,%ecx$/;"	l
f01081f5	obj/kern/kernel.asm	/^f01081f5:	d3 e8                	shr    %cl,%eax$/;"	d
f01081f7	obj/kern/kernel.asm	/^f01081f7:	89 e9                	mov    %ebp,%ecx$/;"	l
f01081f9	obj/kern/kernel.asm	/^f01081f9:	09 f8                	or     %edi,%eax$/;"	l
f01081fb	obj/kern/kernel.asm	/^f01081fb:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f01081ff	obj/kern/kernel.asm	/^f01081ff:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f0108203	obj/kern/kernel.asm	/^f0108203:	d3 e7                	shl    %cl,%edi$/;"	d
f0108205	obj/kern/kernel.asm	/^f0108205:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0108209	obj/kern/kernel.asm	/^f0108209:	89 d7                	mov    %edx,%edi$/;"	l
f010820b	obj/kern/kernel.asm	/^f010820b:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f010820f	obj/kern/kernel.asm	/^f010820f:	39 d7                	cmp    %edx,%edi$/;"	l
f0108211	obj/kern/kernel.asm	/^f0108211:	89 c1                	mov    %eax,%ecx$/;"	l
f0108213	obj/kern/kernel.asm	/^f0108213:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0108216	obj/kern/kernel.asm	/^f0108216:	72 2c                	jb     f0108244 <__umoddi3+0x134>$/;"	l
f0108218	obj/kern/kernel.asm	/^f0108218:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f010821c	obj/kern/kernel.asm	/^f010821c:	72 22                	jb     f0108240 <__umoddi3+0x130>$/;"	l
f010821e	obj/kern/kernel.asm	/^f010821e:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0108222	obj/kern/kernel.asm	/^f0108222:	29 c8                	sub    %ecx,%eax$/;"	l
f0108224	obj/kern/kernel.asm	/^f0108224:	19 d7                	sbb    %edx,%edi$/;"	l
f0108226	obj/kern/kernel.asm	/^f0108226:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108228	obj/kern/kernel.asm	/^f0108228:	89 fa                	mov    %edi,%edx$/;"	l
f010822a	obj/kern/kernel.asm	/^f010822a:	d3 e8                	shr    %cl,%eax$/;"	d
f010822c	obj/kern/kernel.asm	/^f010822c:	89 f1                	mov    %esi,%ecx$/;"	l
f010822e	obj/kern/kernel.asm	/^f010822e:	d3 e2                	shl    %cl,%edx$/;"	d
f0108230	obj/kern/kernel.asm	/^f0108230:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108232	obj/kern/kernel.asm	/^f0108232:	d3 ef                	shr    %cl,%edi$/;"	d
f0108234	obj/kern/kernel.asm	/^f0108234:	09 d0                	or     %edx,%eax$/;"	l
f0108236	obj/kern/kernel.asm	/^f0108236:	89 fa                	mov    %edi,%edx$/;"	l
f0108238	obj/kern/kernel.asm	/^f0108238:	83 c4 14             	add    $0x14,%esp$/;"	l
f010823b	obj/kern/kernel.asm	/^f010823b:	5e                   	pop    %esi$/;"	l
f010823c	obj/kern/kernel.asm	/^f010823c:	5f                   	pop    %edi$/;"	l
f010823d	obj/kern/kernel.asm	/^f010823d:	5d                   	pop    %ebp$/;"	l
f010823e	obj/kern/kernel.asm	/^f010823e:	c3                   	ret    $/;"	l
f010823f	obj/kern/kernel.asm	/^f010823f:	90                   	nop$/;"	l
f0108240	obj/kern/kernel.asm	/^f0108240:	39 d7                	cmp    %edx,%edi$/;"	l
f0108242	obj/kern/kernel.asm	/^f0108242:	75 da                	jne    f010821e <__umoddi3+0x10e>$/;"	l
f0108244	obj/kern/kernel.asm	/^f0108244:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0108247	obj/kern/kernel.asm	/^f0108247:	89 c1                	mov    %eax,%ecx$/;"	l
f0108249	obj/kern/kernel.asm	/^f0108249:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010824d	obj/kern/kernel.asm	/^f010824d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0108251	obj/kern/kernel.asm	/^f0108251:	eb cb                	jmp    f010821e <__umoddi3+0x10e>$/;"	l
f0108253	obj/kern/kernel.asm	/^f0108253:	90                   	nop$/;"	l
f0108254	obj/kern/kernel.asm	/^f0108254:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108258	obj/kern/kernel.asm	/^f0108258:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f010825c	obj/kern/kernel.asm	/^f010825c:	0f 82 0f ff ff ff    	jb     f0108171 <__umoddi3+0x61>$/;"	l
f0108262	obj/kern/kernel.asm	/^f0108262:	e9 1a ff ff ff       	jmp    f0108181 <__umoddi3+0x71>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon8
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	homework/hw2-shell/sh.c	/^  int fd;            \/\/ the file descriptor number to use for the file$/;"	m	struct:redircmd	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon5	typeref:struct:Fd::__anon5::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon5	typeref:struct:Fd::__anon5::FdSock
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file	homework/hw2-shell/sh.c	/^  char *file;        \/\/ the input\/output file$/;"	m	struct:redircmd	file:
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
fork1	homework/hw2-shell/sh.c	/^fork1(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get	ph.c	/^get(int key)$/;"	f	file:
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getcmd	homework/hw2-shell/sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
gettoken	homework/hw2-shell/sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon37::__anon38	typeref:struct:netifapi_msg_msg::__anon37::__anon38::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon23::__anon26
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
help	kern/monitor.h	/^MON_CMD_DECL(help);$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon15
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon15
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon37::__anon38
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inline	obj/kern/kernel.asm	/^inline static int $/;"	l
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon23	typeref:struct:tcpip_msg::__anon23::__anon24
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon37::__anon38
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insert	ph.c	/^insert(int key, int value, struct entry **p, struct entry *n)$/;"	f	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int $/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int $/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int $/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int $/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int $/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int $/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int $/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int $/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int $/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int $/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int $/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int $/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int $/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int $/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int $/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int $/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int $/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int $/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int $/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int $/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int $/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int $/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int $/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int $/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int $/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int $/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int $/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int $/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int $/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int $/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int $/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int $/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int $/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int $/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int $/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int $/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int $/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int $/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int $/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int $/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int $/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int $/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int $/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int $/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int $/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int $/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int $/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int $/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int $/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int $/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int $/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int $/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int $/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int $/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int $/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int $/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int $/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon29::__anon35	typeref:struct:api_msg_msg::__anon29::__anon35::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon20	typeref:struct:netconn::__anon20::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon29::__anon31	typeref:struct:api_msg_msg::__anon29::__anon31::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon29::__anon32	typeref:struct:api_msg_msg::__anon29::__anon32::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon37::__anon38	typeref:struct:netifapi_msg_msg::__anon37::__anon38::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon29	typeref:struct:api_msg_msg::__anon29::__anon35
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon29::__anon35	typeref:enum:api_msg_msg::__anon29::__anon35::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kerninfo	kern/monitor.h	/^MON_CMD_DECL(kerninfo);$/;"	v
key	ph.c	/^	int key;$/;"	m	struct:entry	file:
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
keys	ph.c	/^int keys[NKEYS];$/;"	v
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon29	typeref:struct:api_msg_msg::__anon29::__anon36
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	homework/hw2-shell/sh.c	/^  struct cmd *left;  \/\/ left side of pipe$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon29::__anon33
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon29::__anon34
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/kern/kernel.asm	/^    len = tx_queue[tail].length;$/;"	d
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000.h	/^    uint16_t length;      \/* data buffer length *\/$/;"	m	struct:e1000_rx_desc
length	kern/e1000.h	/^    uint16_t length;     \/* data buffer length *\/$/;"	m	struct:e1000_tx_desc
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
line	user/num.c	/^int line = 0;$/;"	v
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon29::__anon32
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locks	ph.c	/^pthread_mutex_t locks[NBUCKET];$/;"	v
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^		m = n - tot;$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^		m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^		m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^		m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^		m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	barrier.c	/^main(int argc, char *argv[])$/;"	f
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
main	homework/hw2-shell/sh.c	/^main(void)$/;"	f
main	ph.c	/^main(int argc, char *argv[])$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon28
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon27
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mkcopy	homework/hw2-shell/sh.c	/^*mkcopy(char *s, char *es)$/;"	f
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mode	homework/hw2-shell/sh.c	/^  int mode;          \/\/ the mode to open the file with$/;"	m	struct:redircmd	file:
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_changeperms	kern/monitor.c	/^mon_changeperms(int argc, char** argv, struct Trapframe *tf) $/;"	f
mon_dumpcontents	kern/monitor.c	/^mon_dumpcontents(int argc, char **argv, struct Trapframe *tf) $/;"	f
mon_exit	kern/monitor.c	/^mon_exit(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char** argv, struct Trapframe *tf) $/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon23::__anon26
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon29
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon37
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon23
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon13	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon13	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon29::__anon35	typeref:struct:api_msg_msg::__anon29::__anon35::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
myexecv	homework/hw2-shell/sh.c	/^myexecv(char**argv) $/;"	f
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon29	typeref:struct:api_msg_msg::__anon29::__anon30
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/fs/fs.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/kern/kernel.asm	/^	n = (uint32_t)(-1) - KERNBASE + 1;$/;"	d
n	obj/kern/kernel.asm	/^	n = NENV * sizeof(struct Env);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(n, PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = npages * sizeof(struct PageInfo);$/;"	d
n	obj/net/ns.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testoutput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testoutput.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/echosrv.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/httpd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/testtime.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testtime.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^    n = MIN(n, max_buff_size);$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon40
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon23::__anon24	typeref:struct:tcpip_msg::__anon23::__anon24::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon23	typeref:struct:tcpip_msg::__anon23::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon37::__anon38	typeref:struct:netifapi_msg_msg::__anon37::__anon38::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next	ph.c	/^	struct entry *next;$/;"	m	struct:entry	typeref:struct:entry::entry	file:
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nexti	obj/kern/kernel.asm	/^		nexti = (ENVX(curenv->env_id) + 1) % NENV;$/;"	d
nexti	obj/kern/kernel.asm	/^		nexti = (nexti + 1) % NENV;$/;"	d
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/ns.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testinput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testoutput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echosrv.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echotest.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/httpd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testtime.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
now	ph.c	/^now()$/;"	f
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/cat.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echo.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/ls.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/lsfd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/num.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primespipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sendpage.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sh.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spawnhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfdsharing.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testkbd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpteshare.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testshell.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
nthread	barrier.c	/^  int nthread;        \/\/ Number of threads that have reached this round of the barrier$/;"	m	struct:barrier	file:
nthread	barrier.c	/^static int nthread = 1;$/;"	v	file:
nthread	ph.c	/^int nthread = 1;$/;"	v
nthread_exited	barrier.c	/^  int nthread_exited; \/\/ Number of threads that have exited this round of the barrier$/;"	m	struct:barrier	file:
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	71;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
os	grade-lab6	/^import os, re, threading, socket, time, shutil, struct, difflib$/;"	i
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon23::__anon24	typeref:struct:tcpip_msg::__anon23::__anon24::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(n);$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
parsecmd	homework/hw2-shell/sh.c	/^parsecmd(char *s)$/;"	f
parseexec	homework/hw2-shell/sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	homework/hw2-shell/sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	homework/hw2-shell/sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	homework/hw2-shell/sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon21
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon22
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon20
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_e1000_attach	kern/pci.c	/^pci_e1000_attach(struct pci_func *pcif) $/;"	f	file:
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon1
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon1
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon1
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon1
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peek	homework/hw2-shell/sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/kern/kernel.asm	/^		perm = 0; \/\/ no page sent$/;"	d
perm	obj/kern/kernel.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/net/testinput.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/net/testoutput.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/forktree.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/icode.asm	/^			perm = uvpt[PGNUM(addr)] & PTE_SYSCALL;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^			perm = uvpt[PGNUM(addr)] & PTE_SYSCALL;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/pingpong.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/pingpongs.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/primes.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/primespipe.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/sendpage.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/sh.asm	/^			perm = uvpt[PGNUM(addr)] & PTE_SYSCALL;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/spawnhello.asm	/^			perm = uvpt[PGNUM(addr)] & PTE_SYSCALL;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spin.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/stresssched.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/testfdsharing.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/testpipe.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/testpiperace.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/testpiperace2.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/testpteshare.asm	/^			perm = uvpt[PGNUM(addr)] & PTE_SYSCALL;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perm	obj/user/testshell.asm	/^			perm = uvpt[PGNUM(addr)] & PTE_SYSCALL;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^        perm = uvpt[pn] & PTE_SYSCALL;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/cat.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echo.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/ls.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/lsfd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/num.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primespipe.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sh.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/softint.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spawnhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spin.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testkbd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpipe.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpiperace.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpteshare.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testshell.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/yield.asm	/^		pg = (void *) UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgtbl	obj/kern/kernel.asm	/^	pgtbl = (pte_t *) KADDR(PTE_ADDR(pgdir[pdx]));$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((char *) elf_hdr + elf_hdr->e_phoff); $/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipecmd	homework/hw2-shell/sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	homework/hw2-shell/sh.c	/^struct pipecmd {$/;"	s	file:
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon29::__anon32
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon29::__anon31
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^		pp = page_alloc(0);$/;"	d
pp	obj/kern/kernel.asm	/^		pp = page_alloc(ALLOC_ZERO);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^		precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^		precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^		precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print	ph.c	/^print(void)$/;"	f	file:
print_function	gradelib.py	/^from __future__ import print_function$/;"	i
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon29::__anon30
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/ns.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put	ph.c	/^put(int key, int value)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon29	typeref:struct:api_msg_msg::__anon29::__anon34
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon20	typeref:struct:netconn::__anon20::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
re	grade-lab1	/^import re$/;"	i
re	grade-lab4	/^import re$/;"	i
re	grade-lab6	/^import os, re, threading, socket, time, shutil, struct, difflib$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
redircmd	homework/hw2-shell/sh.c	/^redircmd(struct cmd *subcmd, char *file, int type)$/;"	f
redircmd	homework/hw2-shell/sh.c	/^struct redircmd {$/;"	s	file:
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_addrlen	inc/ns.h	/^		socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^		result = page_free_list;$/;"	d
result	obj/kern/kernel.asm	/^	result = KADDR(PADDR(nextfree));$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testinput.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/net/testoutput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testtime.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right	homework/hw2-shell/sh.c	/^  struct cmd *right; \/\/ right side of pipe$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
round	barrier.c	/^  int round;          \/\/ Barrier round$/;"	m	struct:barrier	file:
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon4	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	homework/hw2-shell/sh.c	/^runcmd(struct cmd *cmd)$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
rx_buffs	kern/e1000.c	/^static char rx_buffs[NRXDESC][RX_PKT_BUFF_SIZE];$/;"	v	file:
rx_queue	kern/e1000.c	/^static struct e1000_rx_desc rx_queue[NRXDESC] __attribute__ ((aligned(16)));$/;"	v	typeref:struct:e1000_rx_desc	file:
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_mapping	kern/monitor.c	/^show_mapping(void *vaddr)$/;"	f	file:
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
showmappings	kern/monitor.h	/^MON_CMD_DECL(showmappings);$/;"	v
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
shutil	grade-lab6	/^import os, re, threading, socket, time, shutil, struct, difflib$/;"	i
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	grade-lab6	/^import os, re, threading, socket, time, shutil, struct, difflib$/;"	i
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000.h	/^    uint16_t special;    $/;"	m	struct:e1000_tx_desc
special	kern/e1000.h	/^    uint16_t special;$/;"	m	struct:e1000_rx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
sta	kern/e1000.h	/^    uint8_t  sta;         \/* descriptor status *\/$/;"	m	struct:e1000_rx_desc
sta	kern/e1000.h	/^    uint8_t  sta;        \/* descriptor status *\/$/;"	m	struct:e1000_tx_desc
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon41
stack_top	obj/kern/kernel.asm	/^		stack_top = (uint32_t *)(*stack_top);$/;"	d
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon37::__anon38
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static char rx_buffs[NRXDESC][RX_PKT_BUFF_SIZE];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline int$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int $/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void $/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static const int INPUT_WAIT_COUNT = 10;$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static const int INPUT_WAIT_COUNT = 10;$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static const int INPUT_WAIT_COUNT = 10;$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
str2addr	kern/monitor.c	/^str2addr(char *str, void **result) {$/;"	f	file:
str2perm	kern/monitor.c	/^str2perm(const char* s) {$/;"	f	file:
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
struct	grade-lab6	/^import os, re, threading, socket, time, shutil, struct, difflib$/;"	i
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
symbols	homework/hw2-shell/sh.c	/^char symbols[] = "<|>";$/;"	v
sync	lib/file.c	/^sync(void)$/;"	f
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_nic_recv	kern/syscall.c	/^sys_nic_recv(void *buff, size_t size) $/;"	f	file:
sys_nic_recv	lib/syscall.c	/^sys_nic_recv(void *buff, size_t size) $/;"	f
sys_nic_try_send	kern/syscall.c	/^sys_nic_try_send(const void *data, size_t len) $/;"	f	file:
sys_nic_try_send	lib/syscall.c	/^sys_nic_try_send(const void *data, size_t len)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
table	ph.c	/^struct entry *table[NBUCKET];$/;"	v	typeref:struct:entry
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon20	typeref:struct:netconn::__anon20::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread	barrier.c	/^thread(void *xa)$/;"	f	file:
thread	ph.c	/^thread(void *xa)$/;"	f	file:
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon44	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threading	grade-lab6	/^import os, re, threading, socket, time, shutil, struct, difflib$/;"	i
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	grade-lab6	/^import os, re, threading, socket, time, shutil, struct, difflib$/;"	i
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon23	typeref:struct:tcpip_msg::__anon23::__anon26
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
trap	homework/hw4-lazy-page-allocation.c	/^trap(struct trapframe *tf)$/;"	f
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon8
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tx_buffs	kern/e1000.c	/^static char tx_buffs[NTXDESC][TX_PKT_BUFF_SIZE];$/;"	v	file:
tx_queue	kern/e1000.c	/^static struct e1000_tx_desc tx_queue[NTXDESC] __attribute__ ((aligned(16)));$/;"	v	typeref:struct:e1000_tx_desc	file:
type	homework/hw2-shell/sh.c	/^  int type;              \/\/ ' '$/;"	m	struct:execcmd	file:
type	homework/hw2-shell/sh.c	/^  int type;          \/\/  ' ' (exec), | (pipe), '<' or '>' for redirection$/;"	m	struct:cmd	file:
type	homework/hw2-shell/sh.c	/^  int type;          \/\/ < or > $/;"	m	struct:redircmd	file:
type	homework/hw2-shell/sh.c	/^  int type;          \/\/ |$/;"	m	struct:pipecmd	file:
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon20	typeref:struct:netconn::__anon20::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
urlopen	grade-lab6	/^    from urllib.request import urlopen$/;"	i
urlopen	grade-lab6	/^    from urllib2 import urlopen, HTTPError$/;"	i
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
usage_exit	kern/monitor.c	/^usage_exit(const char *usage) $/;"	f	file:
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = (uintptr_t) va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon42	file:
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testinput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testoutput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echosrv.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echotest.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/httpd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testtime.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_begin	obj/kern/kernel.asm	/^	va_begin = ROUNDUP(va_begin, PGSIZE);$/;"	d
va_end	inc/stdarg.h	12;"	d
va_end	obj/kern/kernel.asm	/^	va_end = base + size;$/;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value	ph.c	/^	int value;$/;"	m	struct:entry	file:
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vectors	kern/vectors.S	/^vectors:$/;"	l
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon14
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon37::__anon39
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon29	typeref:struct:api_msg_msg::__anon29::__anon33
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon42::__anon43	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
whitespace	homework/hw2-shell/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^		width = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^		width = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^		width = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon4	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
